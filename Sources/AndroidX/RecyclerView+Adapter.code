//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import AndroidView
import JavaKit
import JavaKitCollection
import JavaRuntime

extension RecyclerView {
    
  @JavaClass("androidx.recyclerview.widget.RecyclerView$Adapter")
  open class Adapter: JavaObject {
      
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = Nothing)

  @JavaMethod
  open fn unregisterAdapterDataObserver(_ arg0: RecyclerView.AdapterDataObserver?)

  @JavaMethod
  open fn onDetachedFromRecyclerView(_ arg0: RecyclerView?)

  @JavaMethod
  open fn registerAdapterDataObserver(_ arg0: RecyclerView.AdapterDataObserver?)

  @JavaMethod
  open fn onAttachedToRecyclerView(_ arg0: RecyclerView?)

  @JavaMethod
  open fn getItemCount() -> Int32

  @JavaMethod
  open fn setHasStableIds(_ arg0: Boolean)

  @JavaMethod
  open fn setStateRestorationPolicy(_ arg0: RecyclerView.Adapter.StateRestorationPolicy?)

  @JavaMethod
  open fn onFailedToRecycleView(_ arg0: RecyclerView.ViewHolder?) -> Boolean

  @JavaMethod
  open fn onViewRecycled(_ arg0: RecyclerView.ViewHolder?)

  @JavaMethod
  open fn hasObservers() -> Boolean

  @JavaMethod
  open fn notifyItemRangeChanged(_ arg0: Int32, _ arg1: Int32, _ arg2: JavaObject?)

  @JavaMethod
  open fn notifyItemRangeChanged(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open fn notifyItemRangeInserted(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open fn notifyItemMoved(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open fn notifyItemRangeRemoved(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open fn createViewHolder(_ arg0: ViewGroup?, _ arg1: Int32) -> RecyclerView.ViewHolder!

  @JavaMethod
  open fn notifyDataSetChanged()

  @JavaMethod
  open fn notifyItemChanged(_ arg0: Int32)

  @JavaMethod
  open fn notifyItemChanged(_ arg0: Int32, _ arg1: JavaObject?)

  @JavaMethod
  open fn notifyItemInserted(_ arg0: Int32)

  @JavaMethod
  open fn notifyItemRemoved(_ arg0: Int32)

  @JavaMethod
  open fn getStateRestorationPolicy() -> RecyclerView.Adapter.StateRestorationPolicy!

  @JavaMethod
  open fn hasStableIds() -> Boolean

  @JavaMethod
  open fn getItemId(_ arg0: Int32) -> Int64

  @JavaMethod
  open fn onViewDetachedFromWindow(_ arg0: RecyclerView.ViewHolder?)

  @JavaMethod
  open fn onViewAttachedToWindow(_ arg0: RecyclerView.ViewHolder?)

  @JavaMethod
  open fn findRelativeAdapterPositionIn(_ arg0: RecyclerView.Adapter?, _ arg1: RecyclerView.ViewHolder?, _ arg2: Int32) -> Int32

  @JavaMethod
  open fn getItemViewType(_ arg0: Int32) -> Int32

  @JavaMethod
  open fn onCreateViewHolder(_ arg0: ViewGroup?, _ arg1: Int32) -> RecyclerView.ViewHolder!

  @JavaMethod
  open fn bindViewHolder(_ arg0: RecyclerView.ViewHolder?, _ arg1: Int32)

  @JavaMethod
  open fn onBindViewHolder(_ arg0: RecyclerView.ViewHolder?, _ arg1: Int32)

  @JavaMethod
  open fn onBindViewHolder(_ arg0: RecyclerView.ViewHolder?, _ arg1: Int32, _ arg2: List<JavaObject>?)
  }
}
