// WARNING: Please don't edit this file. It was generated by Codira/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

public enum __IMPL_Windows_Media_Devices {
    public enum IMediaDeviceControllerBridge : AbiInterfaceBridge {
        public typealias CABI = __x_ABI_CWindows_CMedia_CDevices_CIMediaDeviceController
        public typealias CodiraABI = __ABI_Windows_Media_Devices.IMediaDeviceController
        public typealias CodiraProjection = AnyIMediaDeviceController
        public static fn from(abi: ComPtr<CABI>?) -> CodiraProjection? {
            guard immutable abi = abi else { return Nothing }
            return IMediaDeviceControllerImpl(abi)
        }

        public static fn makeAbi() -> CABI {
            immutable vtblPtr = withUnsafeMutablePointer(to: &__ABI_Windows_Media_Devices.IMediaDeviceControllerVTable) { $0 }
            return .init(lpVtbl: vtblPtr)
        }
    }

    fileprivate class IMediaDeviceControllerImpl: IMediaDeviceController, WinRTAbiImpl {
        fileprivate typealias Bridge = IMediaDeviceControllerBridge
        fileprivate immutable _default: Bridge.CodiraABI
        fileprivate var thisPtr: WindowsFoundation.IInspectable { _default }
        fileprivate init(_ fromAbi: ComPtr<Bridge.CABI>) {
            _default = Bridge.CodiraABI(fromAbi)
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.media.devices.imediadevicecontroller.getavailablemediastreamproperties)
        fileprivate fn getAvailableMediaStreamProperties(_ mediaStreamType: UWP.MediaStreamType) throws -> WindowsFoundation.AnyIVectorView<UWP.AnyIMediaEncodingProperties?>! {
            try _default.GetAvailableMediaStreamPropertiesImpl(mediaStreamType)
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.media.devices.imediadevicecontroller.getmediastreamproperties)
        fileprivate fn getMediaStreamProperties(_ mediaStreamType: UWP.MediaStreamType) throws -> UWP.AnyIMediaEncodingProperties! {
            try _default.GetMediaStreamPropertiesImpl(mediaStreamType)
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.media.devices.imediadevicecontroller.setmediastreampropertiesasync)
        fileprivate fn setMediaStreamPropertiesAsync(_ mediaStreamType: UWP.MediaStreamType, _ mediaEncodingProperties: UWP.AnyIMediaEncodingProperties!) throws -> WindowsFoundation.AnyIAsyncAction! {
            try _default.SetMediaStreamPropertiesAsyncImpl(mediaStreamType, mediaEncodingProperties)
        }

    }

}
