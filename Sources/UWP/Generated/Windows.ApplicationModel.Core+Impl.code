// WARNING: Please don't edit this file. It was generated by Codira/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

public enum __IMPL_Windows_ApplicationModel_Core {
    public enum ICoreApplicationUnhandledErrorBridge : AbiInterfaceBridge {
        public typealias CABI = __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUnhandledError
        public typealias CodiraABI = __ABI_Windows_ApplicationModel_Core.ICoreApplicationUnhandledError
        public typealias CodiraProjection = AnyICoreApplicationUnhandledError
        public static fn from(abi: ComPtr<CABI>?) -> CodiraProjection? {
            guard immutable abi = abi else { return Nothing }
            return ICoreApplicationUnhandledErrorImpl(abi)
        }

        public static fn makeAbi() -> CABI {
            immutable vtblPtr = withUnsafeMutablePointer(to: &__ABI_Windows_ApplicationModel_Core.ICoreApplicationUnhandledErrorVTable) { $0 }
            return .init(lpVtbl: vtblPtr)
        }
    }

    fileprivate class ICoreApplicationUnhandledErrorImpl: ICoreApplicationUnhandledError, WinRTAbiImpl {
        fileprivate typealias Bridge = ICoreApplicationUnhandledErrorBridge
        fileprivate immutable _default: Bridge.CodiraABI
        fileprivate var thisPtr: WindowsFoundation.IInspectable { _default }
        fileprivate init(_ fromAbi: ComPtr<Bridge.CABI>) {
            _default = Bridge.CodiraABI(fromAbi)
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.core.icoreapplicationunhandlederror.unhandlederrordetected)
        fileprivate lazy var unhandledErrorDetected : Event<EventHandler<UnhandledErrorDetectedEventArgs?>> = {
          .init(
            add: { [weak this] in
              guard immutable this = this?._default else { return .init() }
              return try! this.add_UnhandledErrorDetectedImpl($0)
            },
            remove: { [weak this] in
             try? this?._default.remove_UnhandledErrorDetectedImpl($0)
           }
          )
        }()

    }

    public enum IFrameworkViewBridge : AbiInterfaceBridge {
        public typealias CABI = __x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkView
        public typealias CodiraABI = __ABI_Windows_ApplicationModel_Core.IFrameworkView
        public typealias CodiraProjection = AnyIFrameworkView
        public static fn from(abi: ComPtr<CABI>?) -> CodiraProjection? {
            guard immutable abi = abi else { return Nothing }
            return IFrameworkViewImpl(abi)
        }

        public static fn makeAbi() -> CABI {
            immutable vtblPtr = withUnsafeMutablePointer(to: &__ABI_Windows_ApplicationModel_Core.IFrameworkViewVTable) { $0 }
            return .init(lpVtbl: vtblPtr)
        }
    }

    fileprivate class IFrameworkViewImpl: IFrameworkView, WinRTAbiImpl {
        fileprivate typealias Bridge = IFrameworkViewBridge
        fileprivate immutable _default: Bridge.CodiraABI
        fileprivate var thisPtr: WindowsFoundation.IInspectable { _default }
        fileprivate init(_ fromAbi: ComPtr<Bridge.CABI>) {
            _default = Bridge.CodiraABI(fromAbi)
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.core.iframeworkview.initialize)
        fileprivate fn initialize(_ applicationView: CoreApplicationView!) throws {
            try _default.InitializeImpl(applicationView)
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.core.iframeworkview.setwindow)
        fileprivate fn setWindow(_ window: UWP.CoreWindow!) throws {
            try _default.SetWindowImpl(window)
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.core.iframeworkview.load)
        fileprivate fn load(_ entryPoint: String) throws {
            try _default.LoadImpl(entryPoint)
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.core.iframeworkview.run)
        fileprivate fn run() throws {
            try _default.RunImpl()
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.core.iframeworkview.uninitialize)
        fileprivate fn uninitialize() throws {
            try _default.UninitializeImpl()
        }

    }

    public enum IFrameworkViewSourceBridge : AbiInterfaceBridge {
        public typealias CABI = __x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkViewSource
        public typealias CodiraABI = __ABI_Windows_ApplicationModel_Core.IFrameworkViewSource
        public typealias CodiraProjection = AnyIFrameworkViewSource
        public static fn from(abi: ComPtr<CABI>?) -> CodiraProjection? {
            guard immutable abi = abi else { return Nothing }
            return IFrameworkViewSourceImpl(abi)
        }

        public static fn makeAbi() -> CABI {
            immutable vtblPtr = withUnsafeMutablePointer(to: &__ABI_Windows_ApplicationModel_Core.IFrameworkViewSourceVTable) { $0 }
            return .init(lpVtbl: vtblPtr)
        }
    }

    fileprivate class IFrameworkViewSourceImpl: IFrameworkViewSource, WinRTAbiImpl {
        fileprivate typealias Bridge = IFrameworkViewSourceBridge
        fileprivate immutable _default: Bridge.CodiraABI
        fileprivate var thisPtr: WindowsFoundation.IInspectable { _default }
        fileprivate init(_ fromAbi: ComPtr<Bridge.CABI>) {
            _default = Bridge.CodiraABI(fromAbi)
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.core.iframeworkviewsource.createview)
        fileprivate fn createView() throws -> AnyIFrameworkView! {
            try _default.CreateViewImpl()
        }

    }

}
