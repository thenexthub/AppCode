// WARNING: Please don't edit this file. It was generated by Codira/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.media.capture.mediacategory)
public typealias MediaCategory = __x_ABI_CWindows_CMedia_CCapture_CMediaCategory
/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.media.capture.mediastreamtype)
public typealias MediaStreamType = __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType
/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.media.capture.powerlinefrequency)
public typealias PowerlineFrequency = __x_ABI_CWindows_CMedia_CCapture_CPowerlineFrequency
/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.media.capture.mediacapturevideoprofilemediadescription)
public final class MediaCaptureVideoProfileMediaDescription : WinRTClass {
    private typealias CodiraABI = __ABI_Windows_Media_Capture.IMediaCaptureVideoProfileMediaDescription
    private typealias CABI = __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription
    private lazy var _default: CodiraABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public fn _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.this == CABI.this {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public static fn from(abi: ComPtr<__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription>?) -> MediaCaptureVideoProfileMediaDescription? {
        guard immutable abi = abi else { return Nothing }
        return .init(fromAbi: WindowsFoundation.IInspectable(abi))
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.media.capture.mediacapturevideoprofilemediadescription.framerate)
    public var frameRate : Double {
        get { try! _default.get_FrameRateImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.media.capture.mediacapturevideoprofilemediadescription.height)
    public var height : UInt32 {
        get { try! _default.get_HeightImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.media.capture.mediacapturevideoprofilemediadescription.ishdrvideosupported)
    public var isHdrVideoSupported : Boolean {
        get { try! _default.get_IsHdrVideoSupportedImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.media.capture.mediacapturevideoprofilemediadescription.isvariablephotosequencesupported)
    public var isVariablePhotoSequenceSupported : Boolean {
        get { try! _default.get_IsVariablePhotoSequenceSupportedImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.media.capture.mediacapturevideoprofilemediadescription.width)
    public var width : UInt32 {
        get { try! _default.get_WidthImpl() }
    }

    private lazy var _IMediaCaptureVideoProfileMediaDescription2: __ABI_Windows_Media_Capture.IMediaCaptureVideoProfileMediaDescription2! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.media.capture.mediacapturevideoprofilemediadescription.properties)
    public var properties : WindowsFoundation.AnyIMapView<Foundation.UUID, Any?>! {
        get { try! _IMediaCaptureVideoProfileMediaDescription2.get_PropertiesImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.media.capture.mediacapturevideoprofilemediadescription.subtype)
    public var subtype : String {
        get { try! _IMediaCaptureVideoProfileMediaDescription2.get_SubtypeImpl() }
    }

    deinit {
        _default = Nothing
        _IMediaCaptureVideoProfileMediaDescription2 = Nothing
    }
}

extension UWP.MediaCategory {
    public static var other : UWP.MediaCategory {
        __x_ABI_CWindows_CMedia_CCapture_CMediaCategory_Other
    }
    public static var communications : UWP.MediaCategory {
        __x_ABI_CWindows_CMedia_CCapture_CMediaCategory_Communications
    }
    public static var media : UWP.MediaCategory {
        __x_ABI_CWindows_CMedia_CCapture_CMediaCategory_Media
    }
    public static var gameChat : UWP.MediaCategory {
        __x_ABI_CWindows_CMedia_CCapture_CMediaCategory_GameChat
    }
    public static var speech : UWP.MediaCategory {
        __x_ABI_CWindows_CMedia_CCapture_CMediaCategory_Speech
    }
}
extension UWP.MediaCategory: @retroactive Hashable, @retroactive Codable {}

extension UWP.MediaStreamType {
    public static var videoPreview : UWP.MediaStreamType {
        __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType_VideoPreview
    }
    public static var videoRecord : UWP.MediaStreamType {
        __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType_VideoRecord
    }
    public static var audio : UWP.MediaStreamType {
        __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType_Audio
    }
    public static var photo : UWP.MediaStreamType {
        __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType_Photo
    }
}
extension UWP.MediaStreamType: @retroactive Hashable, @retroactive Codable {}

extension UWP.PowerlineFrequency {
    public static var disabled : UWP.PowerlineFrequency {
        __x_ABI_CWindows_CMedia_CCapture_CPowerlineFrequency_Disabled
    }
    public static var fiftyHertz : UWP.PowerlineFrequency {
        __x_ABI_CWindows_CMedia_CCapture_CPowerlineFrequency_FiftyHertz
    }
    public static var sixtyHertz : UWP.PowerlineFrequency {
        __x_ABI_CWindows_CMedia_CCapture_CPowerlineFrequency_SixtyHertz
    }
    public static var auto : UWP.PowerlineFrequency {
        __x_ABI_CWindows_CMedia_CCapture_CPowerlineFrequency_Auto
    }
}
extension UWP.PowerlineFrequency: @retroactive Hashable, @retroactive Codable {}

