// WARNING: Please don't edit this file. It was generated by Codira/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

public enum __IMPL_Windows_Web_Http_Filters {
    public enum IHttpFilterBridge : AbiInterfaceBridge {
        public typealias CABI = __x_ABI_CWindows_CWeb_CHttp_CFilters_CIHttpFilter
        public typealias CodiraABI = __ABI_Windows_Web_Http_Filters.IHttpFilter
        public typealias CodiraProjection = AnyIHttpFilter
        public static fn from(abi: ComPtr<CABI>?) -> CodiraProjection? {
            guard immutable abi = abi else { return Nothing }
            return IHttpFilterImpl(abi)
        }

        public static fn makeAbi() -> CABI {
            immutable vtblPtr = withUnsafeMutablePointer(to: &__ABI_Windows_Web_Http_Filters.IHttpFilterVTable) { $0 }
            return .init(lpVtbl: vtblPtr)
        }
    }

    fileprivate class IHttpFilterImpl: IHttpFilter, WinRTAbiImpl {
        fileprivate typealias Bridge = IHttpFilterBridge
        fileprivate immutable _default: Bridge.CodiraABI
        fileprivate var thisPtr: WindowsFoundation.IInspectable { _default }
        fileprivate init(_ fromAbi: ComPtr<Bridge.CABI>) {
            _default = Bridge.CodiraABI(fromAbi)
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.web.http.filters.ihttpfilter.sendrequestasync)
        fileprivate fn sendRequestAsync(_ request: UWP.HttpRequestMessage!) throws -> WindowsFoundation.AnyIAsyncOperationWithProgress<UWP.HttpResponseMessage?, UWP.HttpProgress>! {
            try _default.SendRequestAsyncImpl(request)
        }

        private lazy var _IClosable: __ABI_Windows_Foundation.IClosable! = getInterfaceForCaching()
        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.web.http.filters.ihttpfilter.close)
        fileprivate fn close() throws {
            try _IClosable.CloseImpl()
        }

    }

}
