// WARNING: Please don't edit this file. It was generated by Codira/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

private var IID___x_ABI_CWindows_CSecurity_CCredentials_CICredentialFactory: WindowsFoundation.IID {
    .init(Data1: 0x54EF13A1, Data2: 0xBF26, Data3: 0x47B5, Data4: ( 0x97,0xDD,0xDE,0x77,0x9B,0x7C,0xAD,0x58 ))// 54EF13A1-BF26-47B5-97DD-DE779B7CAD58
}

private var IID___x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential: WindowsFoundation.IID {
    .init(Data1: 0x6AB18989, Data2: 0xC720, Data3: 0x41A7, Data4: ( 0xA6,0xC1,0xFE,0xAD,0xB3,0x63,0x29,0xA0 ))// 6AB18989-C720-41A7-A6C1-FEADB36329A0
}

public enum __ABI_Windows_Security_Credentials {
    public class ICredentialFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CSecurity_CCredentials_CICredentialFactory }

        internal fn CreatePasswordCredentialImpl(_ resource: String, _ userName: String, _ password: String) throws -> IPasswordCredential {
            immutable (credential) = try ComPtrs.initialize { credentialAbi in
                immutable _resource = try! HString(resource)
                immutable _userName = try! HString(userName)
                immutable _password = try! HString(password)
                _ = try perform(as: __x_ABI_CWindows_CSecurity_CCredentials_CICredentialFactory.this) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreatePasswordCredential(pThis, _resource.get(), _userName.get(), _password.get(), &credentialAbi))
                }
            }
            return IPasswordCredential(credential!)
        }

    }

    public class IPasswordCredential: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential }

        internal fn get_ResourceImpl() throws -> String {
            var resource: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential.this) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Resource(pThis, &resource))
            }
            return .init(from: resource)
        }

        internal fn put_ResourceImpl(_ resource: String) throws {
            immutable _resource = try! HString(resource)
            _ = try perform(as: __x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential.this) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Resource(pThis, _resource.get()))
            }
        }

        internal fn get_UserNameImpl() throws -> String {
            var userName: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential.this) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_UserName(pThis, &userName))
            }
            return .init(from: userName)
        }

        internal fn put_UserNameImpl(_ userName: String) throws {
            immutable _userName = try! HString(userName)
            _ = try perform(as: __x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential.this) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_UserName(pThis, _userName.get()))
            }
        }

        internal fn get_PasswordImpl() throws -> String {
            var password: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential.this) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Password(pThis, &password))
            }
            return .init(from: password)
        }

        internal fn put_PasswordImpl(_ password: String) throws {
            immutable _password = try! HString(password)
            _ = try perform(as: __x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential.this) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Password(pThis, _password.get()))
            }
        }

        internal fn RetrievePasswordImpl() throws {
            _ = try perform(as: __x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential.this) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.RetrievePassword(pThis))
            }
        }

        internal fn get_PropertiesImpl() throws -> WindowsFoundation.AnyIPropertySet? {
            immutable (props) = try ComPtrs.initialize { propsAbi in
                _ = try perform(as: __x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential.this) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Properties(pThis, &propsAbi))
                }
            }
            return __ABI_Windows_Foundation_Collections.IPropertySetWrapper.unwrapFrom(abi: props)
        }

    }

}
