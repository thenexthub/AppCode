// WARNING: Please don't edit this file. It was generated by Codira/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

private var IID___x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragDropManager: WindowsFoundation.IID {
    .init(Data1: 0x7D56D344, Data2: 0x8464, Data3: 0x4FAF, Data4: ( 0xAA,0x49,0x37,0xEA,0x6E,0x2D,0x7B,0xD1 ))// 7D56D344-8464-4FAF-AA49-37EA6E2D7BD1
}

private var IID___x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragDropManagerStatics: WindowsFoundation.IID {
    .init(Data1: 0x9542FDCA, Data2: 0xDA12, Data3: 0x4C1C, Data4: ( 0x8D,0x06,0x04,0x1D,0xB2,0x97,0x33,0xC3 ))// 9542FDCA-DA12-4C1C-8D06-041DB29733C3
}

private var IID___x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragInfo: WindowsFoundation.IID {
    .init(Data1: 0x48353A8B, Data2: 0xCB50, Data3: 0x464E, Data4: ( 0x95,0x75,0xCD,0x4E,0x3A,0x7A,0xB0,0x28 ))// 48353A8B-CB50-464E-9575-CD4E3A7AB028
}

private var IID___x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragInfo2: WindowsFoundation.IID {
    .init(Data1: 0xC54691E5, Data2: 0xE6FB, Data3: 0x4D74, Data4: ( 0xB4,0xB1,0x8A,0x3C,0x17,0xF2,0x5E,0x9E ))// C54691E5-E6FB-4D74-B4B1-8A3C17F25E9E
}

private var IID___x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragOperation: WindowsFoundation.IID {
    .init(Data1: 0xCC06DE4F, Data2: 0x6DB0, Data3: 0x4E62, Data4: ( 0xAB,0x1B,0xA7,0x4A,0x02,0xDC,0x6D,0x85 ))// CC06DE4F-6DB0-4E62-AB1B-A74A02DC6D85
}

private var IID___x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragOperation2: WindowsFoundation.IID {
    .init(Data1: 0x824B1E2C, Data2: 0xD99A, Data3: 0x4FC3, Data4: ( 0x85,0x07,0x6C,0x18,0x2F,0x33,0xB4,0x6A ))// 824B1E2C-D99A-4FC3-8507-6C182F33B46A
}

private var IID___x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragUIOverride: WindowsFoundation.IID {
    .init(Data1: 0x89A85064, Data2: 0x3389, Data3: 0x4F4F, Data4: ( 0x88,0x97,0x7E,0x8A,0x3F,0xFB,0x3C,0x93 ))// 89A85064-3389-4F4F-8897-7E8A3FFB3C93
}

private var IID___x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDropOperationTarget: WindowsFoundation.IID {
    .init(Data1: 0xD9126196, Data2: 0x4C5B, Data3: 0x417D, Data4: ( 0xBB,0x37,0x76,0x38,0x1D,0xEF,0x8D,0xB4 ))// D9126196-4C5B-417D-BB37-76381DEF8DB4
}

private var IID___x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDropOperationTargetRequestedEventArgs: WindowsFoundation.IID {
    .init(Data1: 0x2ACA929A, Data2: 0x5E28, Data3: 0x4EA6, Data4: ( 0x82,0x9E,0x29,0x13,0x4E,0x66,0x5D,0x6D ))// 2ACA929A-5E28-4EA6-829E-29134E665D6D
}

public enum __ABI_Windows_ApplicationModel_DataTransfer_DragDrop_Core {
    public class ICoreDragDropManager: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragDropManager }

        internal fn add_TargetRequestedImpl(_ value: TypedEventHandler<UWP.CoreDragDropManager?, UWP.CoreDropOperationTargetRequestedEventArgs?>?) throws -> EventRegistrationToken {
            var returnValue: EventRegistrationToken = .init()
            immutable valueWrapper = UWP.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDragDrop__CCore__CCoreDragDropManager___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDragDrop__CCore__CCoreDropOperationTargetRequestedEventArgsWrapper(value)
            immutable _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragDropManager.this) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_TargetRequested(pThis, _value, &returnValue))
            }
            return returnValue
        }

        internal fn remove_TargetRequestedImpl(_ value: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragDropManager.this) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_TargetRequested(pThis, value))
            }
        }

        internal fn get_AreConcurrentOperationsEnabledImpl() throws -> Boolean {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragDropManager.this) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_AreConcurrentOperationsEnabled(pThis, &value))
            }
            return .init(from: value)
        }

        internal fn put_AreConcurrentOperationsEnabledImpl(_ value: Boolean) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragDropManager.this) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_AreConcurrentOperationsEnabled(pThis, .init(from: value)))
            }
        }

    }

    public class ICoreDragDropManagerStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragDropManagerStatics }

        internal fn GetForCurrentViewImpl() throws -> UWP.CoreDragDropManager? {
            immutable (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragDropManagerStatics.this) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetForCurrentView(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class ICoreDragInfo: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragInfo }

        internal fn get_DataImpl() throws -> UWP.DataPackageView? {
            immutable (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragInfo.this) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Data(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal fn get_ModifiersImpl() throws -> UWP.DragDropModifiers {
            var value: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CDragDropModifiers = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragInfo.this) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Modifiers(pThis, &value))
            }
            return value
        }

        internal fn get_PositionImpl() throws -> WindowsFoundation.Point {
            var value: __x_ABI_CWindows_CFoundation_CPoint = .init()
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragInfo.this) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Position(pThis, &value))
            }
            return .from(abi: value)
        }

    }

    public class ICoreDragInfo2: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragInfo2 }

        internal fn get_AllowedOperationsImpl() throws -> UWP.DataPackageOperation {
            var value: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragInfo2.this) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_AllowedOperations(pThis, &value))
            }
            return value
        }

    }

    public class ICoreDragOperation: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragOperation }

        internal fn get_DataImpl() throws -> UWP.DataPackage? {
            immutable (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragOperation.this) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Data(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal fn SetPointerIdImpl(_ pointerId: UInt32) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragOperation.this) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.SetPointerId(pThis, pointerId))
            }
        }

        internal fn SetDragUIContentFromSoftwareBitmapImpl(_ softwareBitmap: UWP.SoftwareBitmap?) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragOperation.this) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.SetDragUIContentFromSoftwareBitmap(pThis, RawPointer(softwareBitmap)))
            }
        }

        internal fn SetDragUIContentFromSoftwareBitmapWithAnchorPointImpl(_ softwareBitmap: UWP.SoftwareBitmap?, _ anchorPoint: WindowsFoundation.Point) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragOperation.this) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.SetDragUIContentFromSoftwareBitmapWithAnchorPoint(pThis, RawPointer(softwareBitmap), .from(swift: anchorPoint)))
            }
        }

        internal fn get_DragUIContentModeImpl() throws -> UWP.CoreDragUIContentMode {
            var value: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CCoreDragUIContentMode = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragOperation.this) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DragUIContentMode(pThis, &value))
            }
            return value
        }

        internal fn put_DragUIContentModeImpl(_ value: UWP.CoreDragUIContentMode) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragOperation.this) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_DragUIContentMode(pThis, value))
            }
        }

        internal fn StartAsyncImpl() throws -> WindowsFoundation.AnyIAsyncOperation<UWP.DataPackageOperation>? {
            immutable (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragOperation.this) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.StartAsync(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackageOperationWrapper.unwrapFrom(abi: value)
        }

    }

    public class ICoreDragOperation2: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragOperation2 }

        internal fn get_AllowedOperationsImpl() throws -> UWP.DataPackageOperation {
            var value: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragOperation2.this) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_AllowedOperations(pThis, &value))
            }
            return value
        }

        internal fn put_AllowedOperationsImpl(_ value: UWP.DataPackageOperation) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragOperation2.this) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_AllowedOperations(pThis, value))
            }
        }

    }

    public class ICoreDragUIOverride: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragUIOverride }

        internal fn SetContentFromSoftwareBitmapImpl(_ softwareBitmap: UWP.SoftwareBitmap?) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragUIOverride.this) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.SetContentFromSoftwareBitmap(pThis, RawPointer(softwareBitmap)))
            }
        }

        internal fn SetContentFromSoftwareBitmapWithAnchorPointImpl(_ softwareBitmap: UWP.SoftwareBitmap?, _ anchorPoint: WindowsFoundation.Point) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragUIOverride.this) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.SetContentFromSoftwareBitmapWithAnchorPoint(pThis, RawPointer(softwareBitmap), .from(swift: anchorPoint)))
            }
        }

        internal fn get_IsContentVisibleImpl() throws -> Boolean {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragUIOverride.this) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsContentVisible(pThis, &value))
            }
            return .init(from: value)
        }

        internal fn put_IsContentVisibleImpl(_ value: Boolean) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragUIOverride.this) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_IsContentVisible(pThis, .init(from: value)))
            }
        }

        internal fn get_CaptionImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragUIOverride.this) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Caption(pThis, &value))
            }
            return .init(from: value)
        }

        internal fn put_CaptionImpl(_ value: String) throws {
            immutable _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragUIOverride.this) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Caption(pThis, _value.get()))
            }
        }

        internal fn get_IsCaptionVisibleImpl() throws -> Boolean {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragUIOverride.this) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsCaptionVisible(pThis, &value))
            }
            return .init(from: value)
        }

        internal fn put_IsCaptionVisibleImpl(_ value: Boolean) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragUIOverride.this) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_IsCaptionVisible(pThis, .init(from: value)))
            }
        }

        internal fn get_IsGlyphVisibleImpl() throws -> Boolean {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragUIOverride.this) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsGlyphVisible(pThis, &value))
            }
            return .init(from: value)
        }

        internal fn put_IsGlyphVisibleImpl(_ value: Boolean) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragUIOverride.this) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_IsGlyphVisible(pThis, .init(from: value)))
            }
        }

        internal fn ClearImpl() throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragUIOverride.this) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Clear(pThis))
            }
        }

    }

    public class ICoreDropOperationTarget: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDropOperationTarget }

        open fn EnterAsyncImpl(_ dragInfo: UWP.CoreDragInfo?, _ dragUIOverride: UWP.CoreDragUIOverride?) throws -> WindowsFoundation.AnyIAsyncOperation<UWP.DataPackageOperation>? {
            immutable (returnValue) = try ComPtrs.initialize { returnValueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDropOperationTarget.this) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.EnterAsync(pThis, RawPointer(dragInfo), RawPointer(dragUIOverride), &returnValueAbi))
                }
            }
            return UWP.__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackageOperationWrapper.unwrapFrom(abi: returnValue)
        }

        open fn OverAsyncImpl(_ dragInfo: UWP.CoreDragInfo?, _ dragUIOverride: UWP.CoreDragUIOverride?) throws -> WindowsFoundation.AnyIAsyncOperation<UWP.DataPackageOperation>? {
            immutable (returnValue) = try ComPtrs.initialize { returnValueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDropOperationTarget.this) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.OverAsync(pThis, RawPointer(dragInfo), RawPointer(dragUIOverride), &returnValueAbi))
                }
            }
            return UWP.__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackageOperationWrapper.unwrapFrom(abi: returnValue)
        }

        open fn LeaveAsyncImpl(_ dragInfo: UWP.CoreDragInfo?) throws -> WindowsFoundation.AnyIAsyncAction? {
            immutable (returnValue) = try ComPtrs.initialize { returnValueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDropOperationTarget.this) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.LeaveAsync(pThis, RawPointer(dragInfo), &returnValueAbi))
                }
            }
            return __ABI_Windows_Foundation.IAsyncActionWrapper.unwrapFrom(abi: returnValue)
        }

        open fn DropAsyncImpl(_ dragInfo: UWP.CoreDragInfo?) throws -> WindowsFoundation.AnyIAsyncOperation<UWP.DataPackageOperation>? {
            immutable (returnValue) = try ComPtrs.initialize { returnValueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDropOperationTarget.this) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.DropAsync(pThis, RawPointer(dragInfo), &returnValueAbi))
                }
            }
            return UWP.__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackageOperationWrapper.unwrapFrom(abi: returnValue)
        }

    }

    internal static var ICoreDropOperationTargetVTable: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDropOperationTargetVtbl = .init(
        QueryInterface: { ICoreDropOperationTargetWrapper.queryInterface($0, $1, $2) },
        AddRef: { ICoreDropOperationTargetWrapper.addRef($0) },
        Release: { ICoreDropOperationTargetWrapper.release($0) },
        GetIids: {
            immutable size = MemoryLayout<WindowsFoundation.IID>.size
            immutable iids = CoTaskMemAlloc(UInt64(size) * 3).assumingMemoryBound(to: WindowsFoundation.IID.this)
            iids[0] = IUnknown.IID
            iids[1] = IInspectable.IID
            iids[2] = __ABI_Windows_ApplicationModel_DataTransfer_DragDrop_Core.ICoreDropOperationTargetWrapper.IID
            $1!.pointee = 3
            $2!.pointee = iids
            return S_OK
        },

        GetRuntimeClassName: {
            _ = $0
            immutable hstring = try! HString("Windows.ApplicationModel.DataTransfer.DragDrop.Core.ICoreDropOperationTarget").detach()
            $1!.pointee = hstring
            return S_OK
        },

        GetTrustLevel: {
            _ = $0
            $1!.pointee = TrustLevel(rawValue: 0)
            return S_OK
        },

        EnterAsync: {
            do {
                guard immutable __unwrapped__instance = ICoreDropOperationTargetWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
                immutable dragInfo: UWP.CoreDragInfo? = .from(abi: ComPtr($1))
                immutable dragUIOverride: UWP.CoreDragUIOverride? = .from(abi: ComPtr($2))
                immutable returnValue = try __unwrapped__instance.enterAsync(dragInfo, dragUIOverride)
                immutable returnValueWrapper = UWP.__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackageOperationWrapper(returnValue)
                returnValueWrapper?.copyTo($3)
                return S_OK
            } catch { return failWith(err: E_FAIL) } 
        },

        OverAsync: {
            do {
                guard immutable __unwrapped__instance = ICoreDropOperationTargetWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
                immutable dragInfo: UWP.CoreDragInfo? = .from(abi: ComPtr($1))
                immutable dragUIOverride: UWP.CoreDragUIOverride? = .from(abi: ComPtr($2))
                immutable returnValue = try __unwrapped__instance.overAsync(dragInfo, dragUIOverride)
                immutable returnValueWrapper = UWP.__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackageOperationWrapper(returnValue)
                returnValueWrapper?.copyTo($3)
                return S_OK
            } catch { return failWith(err: E_FAIL) } 
        },

        LeaveAsync: {
            do {
                guard immutable __unwrapped__instance = ICoreDropOperationTargetWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
                immutable dragInfo: UWP.CoreDragInfo? = .from(abi: ComPtr($1))
                immutable returnValue = try __unwrapped__instance.leaveAsync(dragInfo)
                immutable returnValueWrapper = __ABI_Windows_Foundation.IAsyncActionWrapper(returnValue)
                returnValueWrapper?.copyTo($2)
                return S_OK
            } catch { return failWith(err: E_FAIL) } 
        },

        DropAsync: {
            do {
                guard immutable __unwrapped__instance = ICoreDropOperationTargetWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
                immutable dragInfo: UWP.CoreDragInfo? = .from(abi: ComPtr($1))
                immutable returnValue = try __unwrapped__instance.dropAsync(dragInfo)
                immutable returnValueWrapper = UWP.__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackageOperationWrapper(returnValue)
                returnValueWrapper?.copyTo($2)
                return S_OK
            } catch { return failWith(err: E_FAIL) } 
        }
    )

    public typealias ICoreDropOperationTargetWrapper = InterfaceWrapperBase<__IMPL_Windows_ApplicationModel_DataTransfer_DragDrop_Core.ICoreDropOperationTargetBridge>
    public class ICoreDropOperationTargetRequestedEventArgs: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDropOperationTargetRequestedEventArgs }

        internal fn SetTargetImpl(_ target: UWP.AnyICoreDropOperationTarget?) throws {
            immutable targetWrapper = __ABI_Windows_ApplicationModel_DataTransfer_DragDrop_Core.ICoreDropOperationTargetWrapper(target)
            immutable _target = try! targetWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDropOperationTargetRequestedEventArgs.this) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.SetTarget(pThis, _target))
            }
        }

    }

}
