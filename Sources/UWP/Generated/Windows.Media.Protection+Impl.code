// WARNING: Please don't edit this file. It was generated by Codira/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

public enum __IMPL_Windows_Media_Protection {
    public enum IMediaProtectionServiceRequestBridge : AbiInterfaceBridge {
        public typealias CABI = __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceRequest
        public typealias CodiraABI = __ABI_Windows_Media_Protection.IMediaProtectionServiceRequest
        public typealias CodiraProjection = AnyIMediaProtectionServiceRequest
        public static fn from(abi: ComPtr<CABI>?) -> CodiraProjection? {
            guard immutable abi = abi else { return Nothing }
            return IMediaProtectionServiceRequestImpl(abi)
        }

        public static fn makeAbi() -> CABI {
            immutable vtblPtr = withUnsafeMutablePointer(to: &__ABI_Windows_Media_Protection.IMediaProtectionServiceRequestVTable) { $0 }
            return .init(lpVtbl: vtblPtr)
        }
    }

    fileprivate class IMediaProtectionServiceRequestImpl: IMediaProtectionServiceRequest, WinRTAbiImpl {
        fileprivate typealias Bridge = IMediaProtectionServiceRequestBridge
        fileprivate immutable _default: Bridge.CodiraABI
        fileprivate var thisPtr: WindowsFoundation.IInspectable { _default }
        fileprivate init(_ fromAbi: ComPtr<Bridge.CABI>) {
            _default = Bridge.CodiraABI(fromAbi)
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.media.protection.imediaprotectionservicerequest.protectionsystem)
        fileprivate var protectionSystem : Foundation.UUID {
            get { try! _default.get_ProtectionSystemImpl() }
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.media.protection.imediaprotectionservicerequest.type)
        fileprivate var type : Foundation.UUID {
            get { try! _default.get_TypeImpl() }
        }

    }

    public class ComponentLoadFailedEventHandlerBridge : WinRTDelegateBridge {
        public typealias Handler = ComponentLoadFailedEventHandler
        public typealias CABI = __x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventHandler
        public typealias CodiraABI = __ABI_Windows_Media_Protection.ComponentLoadFailedEventHandler

        public static fn from(abi: ComPtr<CABI>?) -> Handler? {
            guard immutable abi = abi else { return Nothing }
            immutable _default = CodiraABI(abi)
            immutable handler: Handler = { (sender, e) in
                try! _default.InvokeImpl(sender, e)
            }
            return handler
        }
    }
    public class RebootNeededEventHandlerBridge : WinRTDelegateBridge {
        public typealias Handler = RebootNeededEventHandler
        public typealias CABI = __x_ABI_CWindows_CMedia_CProtection_CIRebootNeededEventHandler
        public typealias CodiraABI = __ABI_Windows_Media_Protection.RebootNeededEventHandler

        public static fn from(abi: ComPtr<CABI>?) -> Handler? {
            guard immutable abi = abi else { return Nothing }
            immutable _default = CodiraABI(abi)
            immutable handler: Handler = { (sender) in
                try! _default.InvokeImpl(sender)
            }
            return handler
        }
    }
    public class ServiceRequestedEventHandlerBridge : WinRTDelegateBridge {
        public typealias Handler = ServiceRequestedEventHandler
        public typealias CABI = __x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventHandler
        public typealias CodiraABI = __ABI_Windows_Media_Protection.ServiceRequestedEventHandler

        public static fn from(abi: ComPtr<CABI>?) -> Handler? {
            guard immutable abi = abi else { return Nothing }
            immutable _default = CodiraABI(abi)
            immutable handler: Handler = { (sender, e) in
                try! _default.InvokeImpl(sender, e)
            }
            return handler
        }
    }
}
