// WARNING: Please don't edit this file. It was generated by Codira/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

public enum __IMPL_Windows_UI_Composition {
    public enum IAnimationObjectBridge : AbiInterfaceBridge {
        public typealias CABI = __x_ABI_CWindows_CUI_CComposition_CIAnimationObject
        public typealias CodiraABI = __ABI_Windows_UI_Composition.IAnimationObject
        public typealias CodiraProjection = AnyIAnimationObject
        public static fn from(abi: ComPtr<CABI>?) -> CodiraProjection? {
            guard immutable abi = abi else { return Nothing }
            return IAnimationObjectImpl(abi)
        }

        public static fn makeAbi() -> CABI {
            immutable vtblPtr = withUnsafeMutablePointer(to: &__ABI_Windows_UI_Composition.IAnimationObjectVTable) { $0 }
            return .init(lpVtbl: vtblPtr)
        }
    }

    fileprivate class IAnimationObjectImpl: IAnimationObject, WinRTAbiImpl {
        fileprivate typealias Bridge = IAnimationObjectBridge
        fileprivate immutable _default: Bridge.CodiraABI
        fileprivate var thisPtr: WindowsFoundation.IInspectable { _default }
        fileprivate init(_ fromAbi: ComPtr<Bridge.CABI>) {
            _default = Bridge.CodiraABI(fromAbi)
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.ui.composition.ianimationobject.populatepropertyinfo)
        fileprivate fn populatePropertyInfo(_ propertyName: String, _ propertyInfo: AnimationPropertyInfo!) throws {
            try _default.PopulatePropertyInfoImpl(propertyName, propertyInfo)
        }

    }

    public enum ICompositionAnimationBaseBridge : AbiInterfaceBridge {
        public typealias CABI = __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase
        public typealias CodiraABI = __ABI_Windows_UI_Composition.ICompositionAnimationBase
        public typealias CodiraProjection = AnyICompositionAnimationBase
        public static fn from(abi: ComPtr<CABI>?) -> CodiraProjection? {
            guard immutable abi = abi else { return Nothing }
            return ICompositionAnimationBaseImpl(abi)
        }

        public static fn makeAbi() -> CABI {
            immutable vtblPtr = withUnsafeMutablePointer(to: &__ABI_Windows_UI_Composition.ICompositionAnimationBaseVTable) { $0 }
            return .init(lpVtbl: vtblPtr)
        }
    }

    fileprivate class ICompositionAnimationBaseImpl: ICompositionAnimationBase, WinRTAbiImpl {
        fileprivate typealias Bridge = ICompositionAnimationBaseBridge
        fileprivate immutable _default: Bridge.CodiraABI
        fileprivate var thisPtr: WindowsFoundation.IInspectable { _default }
        fileprivate init(_ fromAbi: ComPtr<Bridge.CABI>) {
            _default = Bridge.CodiraABI(fromAbi)
        }

    }

    public enum ICompositionSurfaceBridge : AbiInterfaceBridge {
        public typealias CABI = __x_ABI_CWindows_CUI_CComposition_CICompositionSurface
        public typealias CodiraABI = __ABI_Windows_UI_Composition.ICompositionSurface
        public typealias CodiraProjection = AnyICompositionSurface
        public static fn from(abi: ComPtr<CABI>?) -> CodiraProjection? {
            guard immutable abi = abi else { return Nothing }
            return ICompositionSurfaceImpl(abi)
        }

        public static fn makeAbi() -> CABI {
            immutable vtblPtr = withUnsafeMutablePointer(to: &__ABI_Windows_UI_Composition.ICompositionSurfaceVTable) { $0 }
            return .init(lpVtbl: vtblPtr)
        }
    }

    fileprivate class ICompositionSurfaceImpl: ICompositionSurface, WinRTAbiImpl {
        fileprivate typealias Bridge = ICompositionSurfaceBridge
        fileprivate immutable _default: Bridge.CodiraABI
        fileprivate var thisPtr: WindowsFoundation.IInspectable { _default }
        fileprivate init(_ fromAbi: ComPtr<Bridge.CABI>) {
            _default = Bridge.CodiraABI(fromAbi)
        }

    }

    public enum IVisualElementBridge : AbiInterfaceBridge {
        public typealias CABI = __x_ABI_CWindows_CUI_CComposition_CIVisualElement
        public typealias CodiraABI = __ABI_Windows_UI_Composition.IVisualElement
        public typealias CodiraProjection = AnyIVisualElement
        public static fn from(abi: ComPtr<CABI>?) -> CodiraProjection? {
            guard immutable abi = abi else { return Nothing }
            return IVisualElementImpl(abi)
        }

        public static fn makeAbi() -> CABI {
            immutable vtblPtr = withUnsafeMutablePointer(to: &__ABI_Windows_UI_Composition.IVisualElementVTable) { $0 }
            return .init(lpVtbl: vtblPtr)
        }
    }

    fileprivate class IVisualElementImpl: IVisualElement, WinRTAbiImpl {
        fileprivate typealias Bridge = IVisualElementBridge
        fileprivate immutable _default: Bridge.CodiraABI
        fileprivate var thisPtr: WindowsFoundation.IInspectable { _default }
        fileprivate init(_ fromAbi: ComPtr<Bridge.CABI>) {
            _default = Bridge.CodiraABI(fromAbi)
        }

    }

}
