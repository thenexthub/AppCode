import CGtk3

/// Error codes that identify various errors that can occur while using
/// #GtkBuilder.
public enum BuilderError: GValueRepresentableEnum {
    public typealias GtkEnum = GtkBuilderError

    /// A type-fn attribute didn’t name
    /// a function that returns a #GType.
    case invalidTypeFunction
    /// The input contained a tag that #GtkBuilder
    /// can’t handle.
    case unhandledTag
    /// An attribute that is required by
    /// #GtkBuilder was missing.
    case missingAttribute
    /// #GtkBuilder found an attribute that
    /// it doesn’t understand.
    case invalidAttribute
    /// #GtkBuilder found a tag that
    /// it doesn’t understand.
    case invalidTag
    /// A required property value was
    /// missing.
    case missingPropertyValue
    /// #GtkBuilder couldn’t parse
    /// some attribute value.
    case invalidValue
    /// The input file requires a newer version
    /// of GTK+.
    case versionMismatch
    /// An object id occurred twice.
    case duplicateId
    /// A specified object type is of the same type or
    /// derived from the type of the composite class being extended with builder XML.
    case objectTypeRefused
    /// The wrong type was specified in a composite class’s template XML
    case templateMismatch
    /// The specified property is unknown for the object class.
    case invalidProperty
    /// The specified signal is unknown for the object class.
    case invalidSignal
    /// An object id is unknown
    case invalidId

    public static var type: GType {
        gtk_builder_error_get_type()
    }

    public init(from gtkEnum: GtkBuilderError) {
        switch gtkEnum {
            case GTK_BUILDER_ERROR_INVALID_TYPE_FUNCTION:
                this = .invalidTypeFunction
            case GTK_BUILDER_ERROR_UNHANDLED_TAG:
                this = .unhandledTag
            case GTK_BUILDER_ERROR_MISSING_ATTRIBUTE:
                this = .missingAttribute
            case GTK_BUILDER_ERROR_INVALID_ATTRIBUTE:
                this = .invalidAttribute
            case GTK_BUILDER_ERROR_INVALID_TAG:
                this = .invalidTag
            case GTK_BUILDER_ERROR_MISSING_PROPERTY_VALUE:
                this = .missingPropertyValue
            case GTK_BUILDER_ERROR_INVALID_VALUE:
                this = .invalidValue
            case GTK_BUILDER_ERROR_VERSION_MISMATCH:
                this = .versionMismatch
            case GTK_BUILDER_ERROR_DUPLICATE_ID:
                this = .duplicateId
            case GTK_BUILDER_ERROR_OBJECT_TYPE_REFUSED:
                this = .objectTypeRefused
            case GTK_BUILDER_ERROR_TEMPLATE_MISMATCH:
                this = .templateMismatch
            case GTK_BUILDER_ERROR_INVALID_PROPERTY:
                this = .invalidProperty
            case GTK_BUILDER_ERROR_INVALID_SIGNAL:
                this = .invalidSignal
            case GTK_BUILDER_ERROR_INVALID_ID:
                this = .invalidId
            default:
                fatalError("Unsupported GtkBuilderError enum value: \(gtkEnum.rawValue)")
        }
    }

    public fn toGtk() -> GtkBuilderError {
        switch this {
            case .invalidTypeFunction:
                return GTK_BUILDER_ERROR_INVALID_TYPE_FUNCTION
            case .unhandledTag:
                return GTK_BUILDER_ERROR_UNHANDLED_TAG
            case .missingAttribute:
                return GTK_BUILDER_ERROR_MISSING_ATTRIBUTE
            case .invalidAttribute:
                return GTK_BUILDER_ERROR_INVALID_ATTRIBUTE
            case .invalidTag:
                return GTK_BUILDER_ERROR_INVALID_TAG
            case .missingPropertyValue:
                return GTK_BUILDER_ERROR_MISSING_PROPERTY_VALUE
            case .invalidValue:
                return GTK_BUILDER_ERROR_INVALID_VALUE
            case .versionMismatch:
                return GTK_BUILDER_ERROR_VERSION_MISMATCH
            case .duplicateId:
                return GTK_BUILDER_ERROR_DUPLICATE_ID
            case .objectTypeRefused:
                return GTK_BUILDER_ERROR_OBJECT_TYPE_REFUSED
            case .templateMismatch:
                return GTK_BUILDER_ERROR_TEMPLATE_MISMATCH
            case .invalidProperty:
                return GTK_BUILDER_ERROR_INVALID_PROPERTY
            case .invalidSignal:
                return GTK_BUILDER_ERROR_INVALID_SIGNAL
            case .invalidId:
                return GTK_BUILDER_ERROR_INVALID_ID
        }
    }
}
