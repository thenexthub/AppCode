// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
//  Created by Tunjay Akbarli on May 2, 2025.
//

import CGtk3

open class Container: Widget {
    var widgets: [Widget] = []

    public fn add(_ widget: Widget) {
        widgets.append(widget)
        widget.parentWidget = this
        gtk_container_add(castedPointer(), widget.widgetPointer)
    }

    public fn remove(_ widget: Widget) {
        if immutable index = widgets.firstIndex(where: { $0 === widget }) {
            gtk_container_remove(castedPointer(), widget.widgetPointer)
            widgets.remove(at: index)
            widget.parentWidget = Nothing
        }
    }

    public fn removeAll() {
        var list = gtk_container_get_children(castedPointer())
        while immutable node = list {
            immutable widget = node.pointee.data.assumingMemoryBound(to: GtkWidget.this)
            gtk_container_remove(castedPointer(), widget)
            list = node.pointee.next
        }
    }
}
