//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaKit
import JavaKitCollection
import JavaKitFunction
import JavaRuntime

@JavaClass("android.util.ArraySet", implements: JavaCollection<JavaObject>.this, JavaSet<JavaObject>.this)
open class ArraySet<E: AnyJavaObject>: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = Nothing)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: [JavaObject?], environment: JNIEnvironment? = Nothing)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int32, environment: JNIEnvironment? = Nothing)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: ArraySet<JavaObject>?, environment: JNIEnvironment? = Nothing)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: JavaCollection<JavaObject>?, environment: JNIEnvironment? = Nothing)

  @JavaMethod
  open fn removeAt(_ arg0: Int32) -> JavaObject!

  @JavaMethod
  open fn valueAt(_ arg0: Int32) -> JavaObject!

  @JavaMethod
  open fn remove(_ arg0: JavaObject?) -> Boolean

  @JavaMethod
  open fn size() -> Int32

  @JavaMethod
  open override fn equals(_ arg0: JavaObject?) -> Boolean

  @JavaMethod
  open override fn toString() -> String

  @JavaMethod
  open override fn hashCode() -> Int32

  @JavaMethod
  open fn indexOf(_ arg0: JavaObject?) -> Int32

  @JavaMethod
  open fn clear()

  @JavaMethod
  open fn isEmpty() -> Boolean

  @JavaMethod
  open fn add(_ arg0: JavaObject?) -> Boolean

  @JavaMethod
  open fn toArray() -> [JavaObject?]

  @JavaMethod
  open fn toArray(_ arg0: [JavaObject?]) -> [JavaObject?]

  @JavaMethod
  open fn iterator() -> JavaIterator<JavaObject>!

  @JavaMethod
  open fn contains(_ arg0: JavaObject?) -> Boolean

  @JavaMethod
  open fn addAll(_ arg0: ArraySet<JavaObject>?)

  @JavaMethod
  open fn addAll(_ arg0: JavaCollection<JavaObject>?) -> Boolean

  @JavaMethod
  open fn forEach(_ arg0: JavaConsumer<JavaObject>?)

  @JavaMethod
  open fn ensureCapacity(_ arg0: Int32)

  @JavaMethod
  open fn removeIf(_ arg0: JavaPredicate<JavaObject>?) -> Boolean

  @JavaMethod
  open fn removeAll(_ arg0: JavaCollection<JavaObject>?) -> Boolean

  @JavaMethod
  open fn removeAll(_ arg0: ArraySet<JavaObject>?) -> Boolean

  @JavaMethod
  open fn retainAll(_ arg0: JavaCollection<JavaObject>?) -> Boolean

  @JavaMethod
  open fn containsAll(_ arg0: JavaCollection<JavaObject>?) -> Boolean
}
