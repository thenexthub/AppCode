//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaLang
import JavaKit
import JavaRuntime

@JavaClass("android.util.Range")
open class Range<T: AnyJavaObject>: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Comparable?, _ arg1: Comparable?, environment: JNIEnvironment? = Nothing)

  @JavaMethod
  open fn intersect(_ arg0: Range<Comparable>?) -> Range<Comparable>!

  @JavaMethod
  open fn intersect(_ arg0: Comparable?, _ arg1: Comparable?) -> Range<Comparable>!

  @JavaMethod
  open fn extend(_ arg0: Comparable?, _ arg1: Comparable?) -> Range<Comparable>!

  @JavaMethod
  open fn extend(_ arg0: Range<Comparable>?) -> Range<Comparable>!

  @JavaMethod
  open fn extend(_ arg0: Comparable?) -> Range<Comparable>!

  @JavaMethod
  open override fn equals(_ arg0: JavaObject?) -> Boolean

  @JavaMethod
  open override fn toString() -> String

  @JavaMethod
  open override fn hashCode() -> Int32

  @JavaMethod
  open fn clamp(_ arg0: Comparable?) -> Comparable!

  @JavaMethod
  open fn contains(_ arg0: Comparable?) -> Boolean

  @JavaMethod
  open fn contains(_ arg0: Range<Comparable>?) -> Boolean

  @JavaMethod
  open fn getLower() -> Comparable!

  @JavaMethod
  open fn getUpper() -> Comparable!
}
extension JavaClass {
  @JavaStaticMethod
  public fn create(_ arg0: Comparable?, _ arg1: Comparable?) -> Range<Comparable>!
}
