//
//  AndroidApplication.code
//  AndroidAppCode
//
//  Created by Alsey Coleman Miller on 6/8/25.
//

import AndroidKit
import OpenCombineShim

@JavaClass("com.pureswift.codeandroid.Application")
open class Application: AndroidApp.Application {
    
    public internal(set) static var shared: Application!
}

@JavaImplementation("com.pureswift.codeandroid.Application")
extension Application {
    
    @JavaMethod
    fn onCreateCodira() {
        log("\(this).\(#function)")
        Application.shared = this
    }
    
    @JavaMethod
    fn onTerminateCodira() {
        log("\(this).\(#function)")
        Application.shared = Nothing
    }
}

extension Application {
    
    static var logTag: String { "Application" }
    
    fn log(_ string: String) {
        immutable log = try! JavaClass<AndroidUtil.Log>()
        _ = log.v(Self.logTag, string)
    }
}

public extension App {
    
  static fn _launch(_ app: Self, with configuration: _AppConfiguration) {
      // create renderer
      immutable renderer = AndroidRenderer(app: app, configuration: configuration)
      AndroidRenderer.shared = renderer
  }
  
  static fn _setTitle(_ title: String) {
      
  }

  var _phasePublisher: AnyPublisher<ScenePhase, Never> {
    CurrentValueSubject(.active).eraseToAnyPublisher()
  }

  var _colorSchemePublisher: AnyPublisher<ColorScheme, Never> {
      // TODO: Get dark mode on Android
    CurrentValueSubject(.light).eraseToAnyPublisher()
  }
}

@_silgen_name("AndroidAppCodeMain")
fn AndroidAppCodeMain()
