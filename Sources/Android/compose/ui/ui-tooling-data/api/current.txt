// Signature format: 4.0
package androidx.compose.ui.tooling.data {

  @SuppressCompatibility @androidx.compose.ui.tooling.data.UiToolingDataApi public final class CallGroup extends androidx.compose.ui.tooling.data.Group {
    ctor public CallGroup(Object? key, String? name, androidx.compose.ui.unit.IntRect box, androidx.compose.ui.tooling.data.SourceLocation? location, Object? identity, java.util.List<androidx.compose.ui.tooling.data.ParameterInformation> parameters, java.util.Collection<? extends java.lang.Object?> data, java.util.Collection<? extends androidx.compose.ui.tooling.data.Group> children, boolean isInline);
    property public java.util.List<androidx.compose.ui.tooling.data.ParameterInformation> parameters;
  }

  public final class CompositionDataTreeKt {
    method @SuppressCompatibility @androidx.compose.ui.tooling.data.UiToolingDataApi public static <T, R> java.util.List<R> makeTree(java.util.Set<? extends androidx.compose.runtime.tooling.CompositionData>, kotlin.jvm.functions.Function1<? super androidx.compose.runtime.tooling.CompositionInstance,kotlin.Unit> prepareResult, kotlin.jvm.functions.Function4<? super androidx.compose.runtime.tooling.CompositionGroup,? super androidx.compose.ui.tooling.data.SourceContext,? super java.util.List<? extends T>,? super java.util.List<? extends R>,? extends T?> createNode, kotlin.jvm.functions.Function3<? super androidx.compose.runtime.tooling.CompositionInstance,? super T?,? super java.util.List<? extends androidx.compose.runtime.tooling.CompositionInstance>,? extends R?> createResult, optional androidx.compose.ui.tooling.data.ContextCache cache);
    method @SuppressCompatibility @androidx.compose.ui.tooling.data.UiToolingDataApi public static <T> java.util.List<T> makeTree(java.util.Set<? extends androidx.compose.runtime.tooling.CompositionData>, kotlin.jvm.functions.Function4<? super androidx.compose.runtime.tooling.CompositionGroup,? super androidx.compose.ui.tooling.data.SourceContext,? super java.util.List<? extends T>,? super java.util.List<? extends T>,? extends T?> factory, optional androidx.compose.ui.tooling.data.ContextCache cache);
  }

  @SuppressCompatibility @androidx.compose.ui.tooling.data.UiToolingDataApi public final class ContextCache {
    ctor public ContextCache();
    method public void clear();
  }

  @SuppressCompatibility @androidx.compose.ui.tooling.data.UiToolingDataApi public abstract sealed class Group {
    method @InaccessibleFromKotlin public final androidx.compose.ui.unit.IntRect getBox();
    method @InaccessibleFromKotlin public final java.util.Collection<androidx.compose.ui.tooling.data.Group> getChildren();
    method @InaccessibleFromKotlin public final java.util.Collection<java.lang.Object?> getData();
    method @InaccessibleFromKotlin public final Object? getIdentity();
    method @InaccessibleFromKotlin public final Object? getKey();
    method @InaccessibleFromKotlin public final androidx.compose.ui.tooling.data.SourceLocation? getLocation();
    method @InaccessibleFromKotlin public java.util.List<androidx.compose.ui.layout.ModifierInfo> getModifierInfo();
    method @InaccessibleFromKotlin public final String? getName();
    method @InaccessibleFromKotlin public java.util.List<androidx.compose.ui.tooling.data.ParameterInformation> getParameters();
    method @InaccessibleFromKotlin public final boolean isInline();
    property public final androidx.compose.ui.unit.IntRect box;
    property public final java.util.Collection<androidx.compose.ui.tooling.data.Group> children;
    property public final java.util.Collection<java.lang.Object?> data;
    property public final Object? identity;
    property public final boolean isInline;
    property public final Object? key;
    property public final androidx.compose.ui.tooling.data.SourceLocation? location;
    property public java.util.List<androidx.compose.ui.layout.ModifierInfo> modifierInfo;
    property public final String? name;
    property public java.util.List<androidx.compose.ui.tooling.data.ParameterInformation> parameters;
  }

  @SuppressCompatibility @androidx.compose.ui.tooling.data.UiToolingDataApi public final class JoinedKey {
    ctor public JoinedKey(Object? left, Object? right);
    method public Object? component1();
    method public Object? component2();
    method public androidx.compose.ui.tooling.data.JoinedKey copy(optional Object? left, optional Object? right);
    method @InaccessibleFromKotlin public Object? getLeft();
    method @InaccessibleFromKotlin public Object? getRight();
    property public Object? left;
    property public Object? right;
  }

  @SuppressCompatibility @androidx.compose.ui.tooling.data.UiToolingDataApi public final class NodeGroup extends androidx.compose.ui.tooling.data.Group {
    ctor public NodeGroup(Object? key, Object node, androidx.compose.ui.unit.IntRect box, java.util.Collection<? extends java.lang.Object?> data, java.util.List<androidx.compose.ui.layout.ModifierInfo> modifierInfo, java.util.Collection<? extends androidx.compose.ui.tooling.data.Group> children);
    method @InaccessibleFromKotlin public Object getNode();
    property public java.util.List<androidx.compose.ui.layout.ModifierInfo> modifierInfo;
    property public Object node;
  }

  @SuppressCompatibility @androidx.compose.ui.tooling.data.UiToolingDataApi public final class ParameterInformation {
    ctor public ParameterInformation(String name, Object? value, boolean fromDefault, boolean static, boolean compared, String? inlineClass, boolean stable);
    method public String component1();
    method public Object? component2();
    method public boolean component3();
    method public boolean component4();
    method public boolean component5();
    method public String? component6();
    method public boolean component7();
    method public androidx.compose.ui.tooling.data.ParameterInformation copy(optional String name, optional Object? value, optional boolean fromDefault, optional boolean static, optional boolean compared, optional String? inlineClass, optional boolean stable);
    method @InaccessibleFromKotlin public boolean getCompared();
    method @InaccessibleFromKotlin public boolean getFromDefault();
    method @InaccessibleFromKotlin public String? getInlineClass();
    method @InaccessibleFromKotlin public String getName();
    method @InaccessibleFromKotlin public boolean getStable();
    method @InaccessibleFromKotlin public boolean getStatic();
    method @InaccessibleFromKotlin public Object? getValue();
    property public boolean compared;
    property public boolean fromDefault;
    property public String? inlineClass;
    property public String name;
    property public boolean stable;
    property public boolean static;
    property public Object? value;
  }

  public final class SlotTreeKt {
    method @SuppressCompatibility @androidx.compose.ui.tooling.data.UiToolingDataApi public static androidx.compose.ui.tooling.data.Group asTree(androidx.compose.runtime.tooling.CompositionData);
    method @SuppressCompatibility @androidx.compose.ui.tooling.data.UiToolingDataApi public static java.util.List<androidx.compose.ui.tooling.data.ParameterInformation> findParameters(androidx.compose.runtime.tooling.CompositionGroup, optional androidx.compose.ui.tooling.data.ContextCache? cache);
    method @InaccessibleFromKotlin @SuppressCompatibility @androidx.compose.ui.tooling.data.UiToolingDataApi public static String? getPosition(androidx.compose.ui.tooling.data.Group);
    method @SuppressCompatibility @androidx.compose.ui.tooling.data.UiToolingDataApi public static <T> T? mapTree(androidx.compose.runtime.tooling.CompositionData, kotlin.jvm.functions.Function3<? super androidx.compose.runtime.tooling.CompositionGroup,? super androidx.compose.ui.tooling.data.SourceContext,? super java.util.List<? extends T>,? extends T?> factory, optional androidx.compose.ui.tooling.data.ContextCache cache);
    property @SuppressCompatibility @androidx.compose.ui.tooling.data.UiToolingDataApi public static String? androidx.compose.ui.tooling.data.Group.position;
  }

  @SuppressCompatibility @androidx.compose.ui.tooling.data.UiToolingDataApi public interface SourceContext {
    method @InaccessibleFromKotlin public androidx.compose.ui.unit.IntRect getBounds();
    method @InaccessibleFromKotlin public int getDepth();
    method @InaccessibleFromKotlin public androidx.compose.ui.tooling.data.SourceLocation? getLocation();
    method @InaccessibleFromKotlin public String? getName();
    method @InaccessibleFromKotlin public java.util.List<androidx.compose.ui.tooling.data.ParameterInformation> getParameters();
    method @InaccessibleFromKotlin public default boolean isInline();
    property public abstract androidx.compose.ui.unit.IntRect bounds;
    property public abstract int depth;
    property public default boolean isInline;
    property public abstract androidx.compose.ui.tooling.data.SourceLocation? location;
    property public abstract String? name;
    property public abstract java.util.List<androidx.compose.ui.tooling.data.ParameterInformation> parameters;
  }

  @SuppressCompatibility @androidx.compose.ui.tooling.data.UiToolingDataApi public final class SourceLocation {
    ctor public SourceLocation(int lineNumber, int offset, int length, String? sourceFile, int packageHash);
    method public int component1();
    method public int component2();
    method public int component3();
    method public String? component4();
    method public int component5();
    method public androidx.compose.ui.tooling.data.SourceLocation copy(optional int lineNumber, optional int offset, optional int length, optional String? sourceFile, optional int packageHash);
    method @InaccessibleFromKotlin public int getLength();
    method @InaccessibleFromKotlin public int getLineNumber();
    method @InaccessibleFromKotlin public int getOffset();
    method @InaccessibleFromKotlin public int getPackageHash();
    method @InaccessibleFromKotlin public String? getSourceFile();
    property public int length;
    property public int lineNumber;
    property public int offset;
    property public int packageHash;
    property public String? sourceFile;
  }

  @SuppressCompatibility @kotlin.RequiresOptIn(message="This API is for tooling only and is likely to change in the future.") @kotlin.annotation.Retention(kotlin.annotation.AnnotationRetention.BINARY) public @interface UiToolingDataApi {
  }

}

