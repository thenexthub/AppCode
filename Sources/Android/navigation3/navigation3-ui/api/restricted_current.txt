// Signature format: 4.0
package androidx.navigation3.scene {

  public final class DialogSceneStrategy<T> implements androidx.navigation3.scene.SceneStrategy<T> {
    ctor public DialogSceneStrategy();
    method public androidx.navigation3.scene.Scene<T>? calculateScene(androidx.navigation3.scene.SceneStrategyScope<T>, java.util.List<androidx.navigation3.runtime.NavEntry<T>> entries);
    field public static final androidx.navigation3.scene.DialogSceneStrategy.Companion Companion;
  }

  public static final class DialogSceneStrategy.Companion {
    method public java.util.Map<java.lang.String,java.lang.Object> dialog(optional androidx.compose.ui.window.DialogProperties dialogProperties);
  }

  public interface OverlayScene<T> extends androidx.navigation3.scene.Scene<T> {
    method @InaccessibleFromKotlin public java.util.List<androidx.navigation3.runtime.NavEntry<T>> getOverlaidEntries();
    property public abstract java.util.List<androidx.navigation3.runtime.NavEntry<T>> overlaidEntries;
  }

  public interface Scene<T> {
    method @InaccessibleFromKotlin public kotlin.jvm.functions.Function0<kotlin.Unit> getContent();
    method @InaccessibleFromKotlin public java.util.List<androidx.navigation3.runtime.NavEntry<T>> getEntries();
    method @InaccessibleFromKotlin public Object getKey();
    method @InaccessibleFromKotlin public default java.util.Map<java.lang.String,java.lang.Object> getMetadata();
    method @InaccessibleFromKotlin public java.util.List<androidx.navigation3.runtime.NavEntry<T>> getPreviousEntries();
    property public abstract kotlin.jvm.functions.Function0<kotlin.Unit> content;
    property public abstract java.util.List<androidx.navigation3.runtime.NavEntry<T>> entries;
    property public abstract Object key;
    property public default java.util.Map<java.lang.String,java.lang.Object> metadata;
    property public abstract java.util.List<androidx.navigation3.runtime.NavEntry<T>> previousEntries;
  }

  public final class SceneInfo<T> extends androidx.navigationevent.NavigationEventInfo {
    ctor public SceneInfo(androidx.navigation3.scene.Scene<T> scene);
    method @InaccessibleFromKotlin public androidx.navigation3.scene.Scene<T> getScene();
    property public androidx.navigation3.scene.Scene<T> scene;
  }

  @androidx.compose.runtime.Immutable public final class SceneState<T> {
    method @InaccessibleFromKotlin public androidx.navigation3.scene.Scene<T> getCurrentScene();
    method @InaccessibleFromKotlin public java.util.List<androidx.navigation3.runtime.NavEntry<T>> getEntries();
    method @InaccessibleFromKotlin public java.util.List<androidx.navigation3.scene.OverlayScene<T>> getOverlayScenes();
    method @InaccessibleFromKotlin public java.util.List<androidx.navigation3.scene.Scene<T>> getPreviousScenes();
    property public androidx.navigation3.scene.Scene<T> currentScene;
    property public java.util.List<androidx.navigation3.runtime.NavEntry<T>> entries;
    property public java.util.List<androidx.navigation3.scene.OverlayScene<T>> overlayScenes;
    property public java.util.List<androidx.navigation3.scene.Scene<T>> previousScenes;
  }

  public final class SceneStateKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static <T> androidx.navigation3.scene.SceneState<T> rememberSceneState(java.util.List<androidx.navigation3.runtime.NavEntry<T>> entries, androidx.navigation3.scene.SceneStrategy<T> sceneStrategy, kotlin.jvm.functions.Function0<kotlin.Unit> onBack);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static <T> androidx.navigation3.scene.SceneState<T!> rememberSceneState(java.util.List<androidx.navigation3.runtime.NavEntry<T!>!>, androidx.navigation3.scene.SceneStrategy<T!>, kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.runtime.Composer?, int);
  }

  public fun interface SceneStrategy<T> {
    method public androidx.navigation3.scene.Scene<T>? calculateScene(androidx.navigation3.scene.SceneStrategyScope<T>, java.util.List<androidx.navigation3.runtime.NavEntry<T>> entries);
    method public default infix androidx.navigation3.scene.SceneStrategy<T> then(androidx.navigation3.scene.SceneStrategy<T> sceneStrategy);
  }

  public final class SceneStrategyScope<T> {
    ctor public SceneStrategyScope();
    ctor public SceneStrategyScope(optional kotlin.jvm.functions.Function0<kotlin.Unit> onBack);
    method @InaccessibleFromKotlin public kotlin.jvm.functions.Function0<kotlin.Unit> getOnBack();
    property public kotlin.jvm.functions.Function0<kotlin.Unit> onBack;
  }

  public final class SinglePaneSceneStrategy<T> implements androidx.navigation3.scene.SceneStrategy<T> {
    ctor public SinglePaneSceneStrategy();
    method public androidx.navigation3.scene.Scene<T> calculateScene(androidx.navigation3.scene.SceneStrategyScope<T>, java.util.List<androidx.navigation3.runtime.NavEntry<T>> entries);
  }

}

package androidx.navigation3.ui {

  public final class LocalNavAnimatedContentScopeKt {
    method @InaccessibleFromKotlin public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.animation.AnimatedContentScope> getLocalNavAnimatedContentScope();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.animation.AnimatedContentScope> LocalNavAnimatedContentScope;
  }

  public final class NavDisplay {
    method public java.util.Map<java.lang.String,java.lang.Object> popTransitionSpec(kotlin.jvm.functions.Function1<? super androidx.compose.animation.AnimatedContentTransitionScope<androidx.navigation3.scene.Scene<? extends java.lang.Object?>>,androidx.compose.animation.ContentTransform?> popTransitionSpec);
    method public java.util.Map<java.lang.String,java.lang.Object> predictivePopTransitionSpec(kotlin.jvm.functions.Function2<? super androidx.compose.animation.AnimatedContentTransitionScope<androidx.navigation3.scene.Scene<? extends java.lang.Object?>>,? super java.lang.Integer,androidx.compose.animation.ContentTransform?> predictivePopTransitionSpec);
    method public java.util.Map<java.lang.String,java.lang.Object> transitionSpec(kotlin.jvm.functions.Function1<? super androidx.compose.animation.AnimatedContentTransitionScope<androidx.navigation3.scene.Scene<? extends java.lang.Object?>>,androidx.compose.animation.ContentTransform?> transitionSpec);
    field public static final androidx.navigation3.ui.NavDisplay INSTANCE;
  }

  public final class NavDisplayKt {
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static <T> void NavDisplay(androidx.navigation3.scene.SceneState<T!>, androidx.navigationevent.compose.NavigationEventState<androidx.navigation3.scene.SceneInfo<T!>!>, androidx.compose.ui.Modifier?, androidx.compose.ui.Alignment?, androidx.compose.animation.SizeTransform?, kotlin.jvm.functions.Function1<? super androidx.compose.animation.AnimatedContentTransitionScope<androidx.navigation3.scene.Scene<T!>!>!,androidx.compose.animation.ContentTransform!>?, kotlin.jvm.functions.Function1<? super androidx.compose.animation.AnimatedContentTransitionScope<androidx.navigation3.scene.Scene<T!>!>!,androidx.compose.animation.ContentTransform!>?, kotlin.jvm.functions.Function2<? super androidx.compose.animation.AnimatedContentTransitionScope<androidx.navigation3.scene.Scene<T!>!>!,? super java.lang.Integer!,androidx.compose.animation.ContentTransform!>?, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public static <T> void NavDisplay(androidx.navigation3.scene.SceneState<T> sceneState, androidx.navigationevent.compose.NavigationEventState<androidx.navigation3.scene.SceneInfo<T>> navigationEventState, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Alignment contentAlignment, optional androidx.compose.animation.SizeTransform? sizeTransform, optional kotlin.jvm.functions.Function1<androidx.compose.animation.AnimatedContentTransitionScope<androidx.navigation3.scene.Scene<T>>,androidx.compose.animation.ContentTransform> transitionSpec, optional kotlin.jvm.functions.Function1<androidx.compose.animation.AnimatedContentTransitionScope<androidx.navigation3.scene.Scene<T>>,androidx.compose.animation.ContentTransform> popTransitionSpec, optional kotlin.jvm.functions.Function2<androidx.compose.animation.AnimatedContentTransitionScope<androidx.navigation3.scene.Scene<T>>,java.lang.Integer,androidx.compose.animation.ContentTransform> predictivePopTransitionSpec);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static <T> void NavDisplay(java.util.List<? extends T!>, androidx.compose.ui.Modifier?, androidx.compose.ui.Alignment?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, java.util.List<? extends androidx.navigation3.runtime.NavEntryDecorator<T!>!>?, androidx.navigation3.scene.SceneStrategy<T!>?, androidx.compose.animation.SizeTransform?, kotlin.jvm.functions.Function1<? super androidx.compose.animation.AnimatedContentTransitionScope<androidx.navigation3.scene.Scene<T!>!>!,androidx.compose.animation.ContentTransform!>?, kotlin.jvm.functions.Function1<? super androidx.compose.animation.AnimatedContentTransitionScope<androidx.navigation3.scene.Scene<T!>!>!,androidx.compose.animation.ContentTransform!>?, kotlin.jvm.functions.Function2<? super androidx.compose.animation.AnimatedContentTransitionScope<androidx.navigation3.scene.Scene<T!>!>!,? super java.lang.Integer!,androidx.compose.animation.ContentTransform!>?, kotlin.jvm.functions.Function1<? super T!,androidx.navigation3.runtime.NavEntry<T!>!>, androidx.compose.runtime.Composer?, int, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static <T> void NavDisplay(java.util.List<androidx.navigation3.runtime.NavEntry<T!>!>, androidx.compose.ui.Modifier?, androidx.compose.ui.Alignment?, androidx.navigation3.scene.SceneStrategy<T!>?, androidx.compose.animation.SizeTransform?, kotlin.jvm.functions.Function1<? super androidx.compose.animation.AnimatedContentTransitionScope<androidx.navigation3.scene.Scene<T!>!>!,androidx.compose.animation.ContentTransform!>?, kotlin.jvm.functions.Function1<? super androidx.compose.animation.AnimatedContentTransitionScope<androidx.navigation3.scene.Scene<T!>!>!,androidx.compose.animation.ContentTransform!>?, kotlin.jvm.functions.Function2<? super androidx.compose.animation.AnimatedContentTransitionScope<androidx.navigation3.scene.Scene<T!>!>!,? super java.lang.Integer!,androidx.compose.animation.ContentTransform!>?, kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public static <T> void NavDisplay(java.util.List<androidx.navigation3.runtime.NavEntry<T>> entries, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Alignment contentAlignment, optional androidx.navigation3.scene.SceneStrategy<T> sceneStrategy, optional androidx.compose.animation.SizeTransform? sizeTransform, optional kotlin.jvm.functions.Function1<androidx.compose.animation.AnimatedContentTransitionScope<androidx.navigation3.scene.Scene<T>>,androidx.compose.animation.ContentTransform> transitionSpec, optional kotlin.jvm.functions.Function1<androidx.compose.animation.AnimatedContentTransitionScope<androidx.navigation3.scene.Scene<T>>,androidx.compose.animation.ContentTransform> popTransitionSpec, optional kotlin.jvm.functions.Function2<androidx.compose.animation.AnimatedContentTransitionScope<androidx.navigation3.scene.Scene<T>>,java.lang.Integer,androidx.compose.animation.ContentTransform> predictivePopTransitionSpec, kotlin.jvm.functions.Function0<kotlin.Unit> onBack);
    method @KotlinOnly @androidx.compose.runtime.Composable public static <T> void NavDisplay(java.util.List<T> backStack, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Alignment contentAlignment, optional kotlin.jvm.functions.Function0<kotlin.Unit> onBack, optional java.util.List<androidx.navigation3.runtime.NavEntryDecorator<T>> entryDecorators, optional androidx.navigation3.scene.SceneStrategy<T> sceneStrategy, optional androidx.compose.animation.SizeTransform? sizeTransform, optional kotlin.jvm.functions.Function1<androidx.compose.animation.AnimatedContentTransitionScope<androidx.navigation3.scene.Scene<T>>,androidx.compose.animation.ContentTransform> transitionSpec, optional kotlin.jvm.functions.Function1<androidx.compose.animation.AnimatedContentTransitionScope<androidx.navigation3.scene.Scene<T>>,androidx.compose.animation.ContentTransform> popTransitionSpec, optional kotlin.jvm.functions.Function2<androidx.compose.animation.AnimatedContentTransitionScope<androidx.navigation3.scene.Scene<T>>,java.lang.Integer,androidx.compose.animation.ContentTransform> predictivePopTransitionSpec, kotlin.jvm.functions.Function1<T,androidx.navigation3.runtime.NavEntry<T>> entryProvider);
    method public static <T> kotlin.jvm.functions.Function1<androidx.compose.animation.AnimatedContentTransitionScope<androidx.navigation3.scene.Scene<T>>,androidx.compose.animation.ContentTransform> defaultPopTransitionSpec();
    method public static <T> kotlin.jvm.functions.Function2<androidx.compose.animation.AnimatedContentTransitionScope<androidx.navigation3.scene.Scene<T>>,java.lang.Integer,androidx.compose.animation.ContentTransform> defaultPredictivePopTransitionSpec();
    method public static <T> kotlin.jvm.functions.Function1<androidx.compose.animation.AnimatedContentTransitionScope<androidx.navigation3.scene.Scene<T>>,androidx.compose.animation.ContentTransform> defaultTransitionSpec();
  }

}

