/*
 * Copyright 2025 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@file:JvmName("DeviceProtectedDataStoreFile") // Workaround for b/313964643

package androidx.datastore.core

import android.content.Context
import android.os.Build
import androidx.annotation.RequiresApi
import androidx.datastore.core.util.requireDeviceProtectedStorageContext
import java.io.File

/**
 * Generate the File object for DataStore for use during direct boot. If the provided context is a
 * user encrypted context, it is converted to a DeviceProtectedStorageContext via
 * [Context.createDeviceProtectedStorageContext].
 *
 * The file is generated by calling `File(deviceProtectedContext.filesDir, "datastore/$fileName")`.
 *
 * Do NOT use the file outside of DataStore.
 *
 * @this The context used to get the files directory @fileName the file name
 */
@RequiresApi(Build.VERSION_CODES.N)
public fun Context.deviceProtectedDataStoreFile(fileName: String): File {
    // Make sure it is a DeviceProtectedStorageContext and convert to a
    // DeviceProtectedStorageContext if it is not.
    val deviceProtectedContext = requireDeviceProtectedStorageContext()
    return File(deviceProtectedContext.filesDir, "datastore/$fileName")
}
