// Signature format: 4.0
package androidx.privacysandbox.activity.client {

  public final class LocalManagedSdkActivityLauncher<T extends android.app.Activity & androidx.lifecycle.LifecycleOwner> implements androidx.privacysandbox.activity.client.LocalSdkActivityLauncher {
    method public void dispose();
    method public suspend Object? launchSdkActivity(android.os.IBinder sdkActivityHandlerToken, kotlin.coroutines.Continuation<? super java.lang.Boolean>);
  }

  public interface LocalSdkActivityLauncher extends androidx.privacysandbox.activity.core.SdkActivityLauncher {
    method public void dispose();
  }

  public final class LocalUnmanagedSdkActivityLauncher<T extends android.app.Activity> implements androidx.privacysandbox.activity.client.LocalSdkActivityLauncher {
    method public void dispose();
    method public suspend Object? launchSdkActivity(android.os.IBinder sdkActivityHandlerToken, kotlin.coroutines.Continuation<? super java.lang.Boolean>);
  }

  public final class SdkActivityLaunchers {
    method public static <T extends android.app.Activity & androidx.lifecycle.LifecycleOwner> androidx.privacysandbox.activity.client.LocalManagedSdkActivityLauncher<T> createManagedSdkActivityLauncher(T, kotlin.jvm.functions.Function0<java.lang.Boolean> allowLaunch);
    method public static <T extends android.app.Activity> androidx.privacysandbox.activity.client.LocalUnmanagedSdkActivityLauncher<T> createUnmanagedSdkActivityLauncher(T, kotlin.jvm.functions.Function0<java.lang.Boolean> allowLaunch);
    method public static android.os.Bundle toLauncherInfo(androidx.privacysandbox.activity.core.SdkActivityLauncher);
  }

}

