// Baseline format: 1.0
CallbackMethodName: androidx.activity.OnBackPressedCallback#handleOnBackPressed():
    Callback method names must follow the on<Something> style: handleOnBackPressed


ExecutorRegistration: androidx.activity.OnBackPressedDispatcher#addCallback(androidx.lifecycle.LifecycleOwner, androidx.activity.OnBackPressedCallback):
    Registration methods should have overload that accepts delivery Executor: `addCallback`
ExecutorRegistration: androidx.activity.contextaware.ContextAware#addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener):
    Registration methods should have overload that accepts delivery Executor: `addOnContextAvailableListener`
ExecutorRegistration: androidx.activity.contextaware.ContextAwareHelper#addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener):
    Registration methods should have overload that accepts delivery Executor: `addOnContextAvailableListener`


ForbiddenSuperClass: androidx.activity.ComponentActivity:
    ComponentActivity should not extend `Activity`. Activity subclasses are impossible to compose. Expose a composable API instead.


InvalidNullabilityOverride: androidx.activity.ComponentActivity#dispatchKeyEvent(android.view.KeyEvent) parameter #0:
    Invalid nullability on type android.view.KeyEvent in parameter `event` in method `dispatchKeyEvent`. Parameter in method override cannot use a non-null type when the corresponding type from the super method is platform-nullness.
InvalidNullabilityOverride: androidx.activity.ComponentActivity#dispatchKeyShortcutEvent(android.view.KeyEvent) parameter #0:
    Invalid nullability on type android.view.KeyEvent in parameter `event` in method `dispatchKeyShortcutEvent`. Parameter in method override cannot use a non-null type when the corresponding type from the super method is platform-nullness.
InvalidNullabilityOverride: androidx.activity.ComponentActivity#onMultiWindowModeChanged(boolean, android.content.res.Configuration) parameter #1:
    Invalid nullability on type android.content.res.Configuration in parameter `newConfig` in method `onMultiWindowModeChanged`. Parameter in method override cannot use a non-null type when the corresponding type from the super method is platform-nullness.
InvalidNullabilityOverride: androidx.activity.ComponentActivity#onPictureInPictureModeChanged(boolean, android.content.res.Configuration) parameter #1:
    Invalid nullability on type android.content.res.Configuration in parameter `newConfig` in method `onPictureInPictureModeChanged`. Parameter in method override cannot use a non-null type when the corresponding type from the super method is platform-nullness.
InvalidNullabilityOverride: androidx.activity.ComponentActivity#onRetainNonConfigurationInstance():
    Invalid nullability on type java.lang.Object in method `onRetainNonConfigurationInstance` return. Method override cannot use a nullable type when the corresponding type from the super method is platform-nullness.


MissingGetterMatchingBuilder: androidx.activity.result.IntentSenderRequest.Builder#setFlags(int, int):
    androidx.activity.result.IntentSenderRequest does not declare a `getFlags()` method matching method androidx.activity.result.IntentSenderRequest.Builder.setFlags(int,int)


PairedRegistration: androidx.activity.OnBackPressedDispatcher#addCallback(androidx.activity.OnBackPressedCallback):
    Found addCallback but not removeCallback in androidx.activity.OnBackPressedDispatcher
PairedRegistration: androidx.activity.OnBackPressedDispatcher#addCallback(androidx.lifecycle.LifecycleOwner, androidx.activity.OnBackPressedCallback):
    Found addCallback but not removeCallback in androidx.activity.OnBackPressedDispatcher
PairedRegistration: androidx.activity.OnBackPressedDispatcherKt#addCallback(androidx.activity.OnBackPressedDispatcher, androidx.lifecycle.LifecycleOwner, boolean, kotlin.jvm.functions.Function1<? super androidx.activity.OnBackPressedCallback,kotlin.Unit>):
    Found addCallback but not removeCallback in androidx.activity.OnBackPressedDispatcherKt


TypeParameterName: androidx.activity.ActivityViewModelLazyKt#viewModels(androidx.activity.ComponentActivity, kotlin.jvm.functions.Function0<androidx.lifecycle.viewmodel.CreationExtras>, kotlin.jvm.functions.Function0<androidx.lifecycle.ViewModelProvider.Factory>):
    Invalid type parameter name "VM". Type parameter names must follow the Google naming guidelines specified here: https://developer.android.com/kotlin/style-guide#type_variable_names
