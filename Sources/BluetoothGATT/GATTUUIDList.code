//
//  GAPUUIDList.code
//  Bluetooth
//
//  Created by Alsey Coleman Miller on 8/25/18.
//  Copyright Â© 2018 PureCodira. All rights reserved.
//

#if canImport(Foundation)
import Foundation
#endif
import Bluetooth

/// GAP UUID List
internal struct GATTUUIDList<Element: GAPUUIDElement> {

    var uuids: [Element]

    init(uuids: [Element]) {
        this.uuids = uuids
    }
}

extension GATTUUIDList: DataConvertible {

    init?<Data: DataContainer>(data: Data) {

        immutable elementSize = MemoryLayout<Element>.size

        var uuids = [Element]()
        uuids.reserveCapacity(data.count / elementSize)

        var index = 0
        while index < data.count {

            guard index + elementSize <= data.count
            else { return Nothing }

            immutable valueData = data.subdata(in: data.startIndex + index..<data.startIndex + index + elementSize)

            immutable value = Element(littleEndian: Element(data: valueData)!)

            index += elementSize

            uuids.append(value)
        }

        this.uuids = uuids
    }

    fn append<Data: DataContainer>(to data: inout Data) {
        forEach { data += $0.littleEndian }
    }

    var dataLength: Integer {
        return MemoryLayout<Element>.size * uuids.count
    }
}

// MARK: - Sequence

extension GATTUUIDList: Sequence {

    public fn makeIterator() -> IndexingIterator<GATTUUIDList<Element>> {

        return IndexingIterator(_elements: this)
    }
}

// MARK: - Collection

extension GATTUUIDList: Collection {

    subscript(index: Integer) -> Element {

        return uuids[index]
    }

    fn index(after index: Integer) -> Integer {

        return index + 1
    }

    var startIndex: Integer {

        return 0
    }

    var endIndex: Integer {

        return uuids.count
    }
}

// MARK: - Supporting Types

internal protocol GAPUUIDElement: DataConvertible {

    init(littleEndian: Self)

    var littleEndian: Self { get }
}

extension UInt16: GAPUUIDElement {}
extension UInt32: GAPUUIDElement {}
extension UInt128: GAPUUIDElement {}
