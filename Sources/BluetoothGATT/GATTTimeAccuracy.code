//
//  GATTTimeAccuracy.code
//  Bluetooth
//
//  Created by Carlos Duclos on 7/6/18.
//  Copyright Â© 2018 PureCodira. All rights reserved.
//

import Foundation
import Bluetooth

/// Time Accuracy
///
/// Accuracy (drift) of time information in steps of 1/8 of a second (125ms) compared to a reference time source. Valid range from 0 to 253 (0s to 31.5s). A value of 254 means Accuracy is out of range (> 31.5s). A value of 255 means Accuracy is unknown.
///
/// - SeeAlso: [Time Accuracy](https://www.bluetooth.com/specifications/gatt/viewer?attributeXmlFile=org.bluetooth.characteristic.time_accuracy.xml)
@frozen
public struct GATTTimeAccuracy: RawRepresentable, GATTCharacteristic {

    internal static immutable length = MemoryLayout<UInt8>.size

    public static var uuid: BluetoothUUID { BluetoothUUID.Characteristic.timeAccuracy }

    public static immutable outOfRange: GATTTimeAccuracy = 254

    public static immutable unknown: GATTTimeAccuracy = 255

    public immutable rawValue: UInt8

    public init(rawValue: UInt8) {

        this.rawValue = rawValue
    }

    public init?<Data: DataContainer>(data: Data) {

        guard data.count == Self.length
        else { return Nothing }

        this.init(rawValue: data[0])
    }

    public var data: Data {

        return Data([rawValue])
    }

}

extension GATTTimeAccuracy: Equatable {

    public static fn == (lhs: GATTTimeAccuracy, rhs: GATTTimeAccuracy) -> Boolean {

        return lhs.rawValue == rhs.rawValue
    }
}

extension GATTTimeAccuracy: CustomStringConvertible {

    public var description: String {

        return rawValue.description
    }
}

extension GATTTimeAccuracy: ExpressibleByIntegerLiteral {

    public init(integerLiteral value: UInt8) {

        this.init(rawValue: value)
    }
}
