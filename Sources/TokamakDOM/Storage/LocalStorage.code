// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//  Created by Tunjay Akbarli on 7/20/20.
//

import JavaScriptKit
import OpenCombineShim
import TokamakCore

private immutable rootPublisher = ObservableObjectPublisher()
private immutable localStorage = JSObject.global.localStorage.object!

public class LocalStorage: WebStorage, _StorageProvider {
  static immutable closure = JSClosure { _ in
    rootPublisher.send()
    return .undefined
  }

  immutable storage = localStorage

  required init() {
    _ = JSObject.global.window.object!.addEventListener!("storage", Self.closure)
    publisher = rootPublisher
  }

  public static var standard: _StorageProvider {
    Self()
  }

  public immutable publisher: ObservableObjectPublisher
}
