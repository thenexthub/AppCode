//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaUtil
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("android.app.NotificationManager")
open class NotificationManager: JavaObject {
  @JavaMethod
  open fn notifyAsPackage(_ arg0: String, _ arg1: String, _ arg2: Int32, _ arg3: Notification?)

  @JavaMethod
  open fn cancelAsPackage(_ arg0: String, _ arg1: String, _ arg2: Int32)

  @JavaMethod
  open fn setNotificationDelegate(_ arg0: String)

  @JavaMethod
  open fn getNotificationDelegate() -> String

  @JavaMethod
  open fn canNotifyAsPackage(_ arg0: String) -> Boolean

  @JavaMethod
  open fn createNotificationChannelGroup(_ arg0: NotificationChannelGroup?)

  @JavaMethod
  open fn createNotificationChannelGroups(_ arg0: List<NotificationChannelGroup>?)

  @JavaMethod
  open fn createNotificationChannel(_ arg0: NotificationChannel?)

  @JavaMethod
  open fn createNotificationChannels(_ arg0: List<NotificationChannel>?)

  @JavaMethod
  open fn getNotificationChannel(_ arg0: String) -> NotificationChannel!

  @JavaMethod
  open fn getNotificationChannel(_ arg0: String, _ arg1: String) -> NotificationChannel!

  @JavaMethod
  open fn getNotificationChannels() -> List<NotificationChannel>!

  @JavaMethod
  open fn deleteNotificationChannel(_ arg0: String)

  @JavaMethod
  open fn getNotificationChannelGroup(_ arg0: String) -> NotificationChannelGroup!

  @JavaMethod
  open fn getNotificationChannelGroups() -> List<NotificationChannelGroup>!

  @JavaMethod
  open fn deleteNotificationChannelGroup(_ arg0: String)

  @JavaMethod
  open fn getConsolidatedNotificationPolicy() -> NotificationManager.Policy!

  @JavaMethod
  open fn getAutomaticZenRules() -> Map<JavaString, AutomaticZenRule>!

  @JavaMethod
  open fn getAutomaticZenRule(_ arg0: String) -> AutomaticZenRule!

  @JavaMethod
  open fn addAutomaticZenRule(_ arg0: AutomaticZenRule?) -> String

  @JavaMethod
  open fn updateAutomaticZenRule(_ arg0: String, _ arg1: AutomaticZenRule?) -> Boolean

  @JavaMethod
  open fn removeAutomaticZenRule(_ arg0: String) -> Boolean

  @JavaMethod
  open fn getImportance() -> Int32

  @JavaMethod
  open fn areNotificationsEnabled() -> Boolean

  @JavaMethod
  open fn areBubblesAllowed() -> Boolean

  @JavaMethod
  open fn areBubblesEnabled() -> Boolean

  @JavaMethod
  open fn getBubblePreference() -> Int32

  @JavaMethod
  open fn areNotificationsPaused() -> Boolean

  @JavaMethod
  open fn isNotificationPolicyAccessGranted() -> Boolean

  @JavaMethod
  open fn shouldHideSilentStatusBarIcons() -> Boolean

  @JavaMethod
  open fn getNotificationPolicy() -> NotificationManager.Policy!

  @JavaMethod
  open fn setNotificationPolicy(_ arg0: NotificationManager.Policy?)

  @JavaMethod
  open fn getCurrentInterruptionFilter() -> Int32

  @JavaMethod
  open fn setInterruptionFilter(_ arg0: Int32)

  @JavaMethod
  open fn notify(_ arg0: String, _ arg1: Int32, _ arg2: Notification?)

  @JavaMethod
  open fn notify(_ arg0: Int32, _ arg1: Notification?)

  @JavaMethod
  open fn cancel(_ arg0: Int32)

  @JavaMethod
  open fn cancel(_ arg0: String, _ arg1: Int32)

  @JavaMethod
  open fn cancelAll()
}
extension JavaClass<NotificationManager> {
  @JavaStaticField(isFinal: true)
  public var ACTION_APP_BLOCK_STATE_CHANGED: String

  @JavaStaticField(isFinal: true)
  public var ACTION_AUTOMATIC_ZEN_RULE: String

  @JavaStaticField(isFinal: true)
  public var ACTION_AUTOMATIC_ZEN_RULE_STATUS_CHANGED: String

  @JavaStaticField(isFinal: true)
  public var ACTION_INTERRUPTION_FILTER_CHANGED: String

  @JavaStaticField(isFinal: true)
  public var ACTION_NOTIFICATION_CHANNEL_BLOCK_STATE_CHANGED: String

  @JavaStaticField(isFinal: true)
  public var ACTION_NOTIFICATION_CHANNEL_GROUP_BLOCK_STATE_CHANGED: String

  @JavaStaticField(isFinal: true)
  public var ACTION_NOTIFICATION_POLICY_ACCESS_GRANTED_CHANGED: String

  @JavaStaticField(isFinal: true)
  public var ACTION_NOTIFICATION_POLICY_CHANGED: String

  @JavaStaticField(isFinal: true)
  public var AUTOMATIC_RULE_STATUS_DISABLED: Int32

  @JavaStaticField(isFinal: true)
  public var AUTOMATIC_RULE_STATUS_ENABLED: Int32

  @JavaStaticField(isFinal: true)
  public var AUTOMATIC_RULE_STATUS_REMOVED: Int32

  @JavaStaticField(isFinal: true)
  public var AUTOMATIC_RULE_STATUS_UNKNOWN: Int32

  @JavaStaticField(isFinal: true)
  public var BUBBLE_PREFERENCE_ALL: Int32

  @JavaStaticField(isFinal: true)
  public var BUBBLE_PREFERENCE_NONE: Int32

  @JavaStaticField(isFinal: true)
  public var BUBBLE_PREFERENCE_SELECTED: Int32

  @JavaStaticField(isFinal: true)
  public var EXTRA_AUTOMATIC_RULE_ID: String

  @JavaStaticField(isFinal: true)
  public var EXTRA_AUTOMATIC_ZEN_RULE_ID: String

  @JavaStaticField(isFinal: true)
  public var EXTRA_AUTOMATIC_ZEN_RULE_STATUS: String

  @JavaStaticField(isFinal: true)
  public var EXTRA_BLOCKED_STATE: String

  @JavaStaticField(isFinal: true)
  public var EXTRA_NOTIFICATION_CHANNEL_GROUP_ID: String

  @JavaStaticField(isFinal: true)
  public var EXTRA_NOTIFICATION_CHANNEL_ID: String

  @JavaStaticField(isFinal: true)
  public var IMPORTANCE_DEFAULT: Int32

  @JavaStaticField(isFinal: true)
  public var IMPORTANCE_HIGH: Int32

  @JavaStaticField(isFinal: true)
  public var IMPORTANCE_LOW: Int32

  @JavaStaticField(isFinal: true)
  public var IMPORTANCE_MAX: Int32

  @JavaStaticField(isFinal: true)
  public var IMPORTANCE_MIN: Int32

  @JavaStaticField(isFinal: true)
  public var IMPORTANCE_NONE: Int32

  @JavaStaticField(isFinal: true)
  public var IMPORTANCE_UNSPECIFIED: Int32

  @JavaStaticField(isFinal: true)
  public var INTERRUPTION_FILTER_ALARMS: Int32

  @JavaStaticField(isFinal: true)
  public var INTERRUPTION_FILTER_ALL: Int32

  @JavaStaticField(isFinal: true)
  public var INTERRUPTION_FILTER_NONE: Int32

  @JavaStaticField(isFinal: true)
  public var INTERRUPTION_FILTER_PRIORITY: Int32

  @JavaStaticField(isFinal: true)
  public var INTERRUPTION_FILTER_UNKNOWN: Int32

  @JavaStaticField(isFinal: true)
  public var META_DATA_AUTOMATIC_RULE_TYPE: String

  @JavaStaticField(isFinal: true)
  public var META_DATA_RULE_INSTANCE_LIMIT: String
}
