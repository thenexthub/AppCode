//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaKit
import JavaRuntime

@JavaClass("android.app.job.JobInfo")
open class JobInfo: JavaObject {
  @JavaMethod
  open fn describeContents() -> Int32

  @JavaMethod
  open fn getClipGrantFlags() -> Int32

  @JavaMethod
  open fn isRequireCharging() -> Boolean

  @JavaMethod
  open fn isRequireBatteryNotLow() -> Boolean

  @JavaMethod
  open fn isRequireDeviceIdle() -> Boolean

  @JavaMethod
  open fn isRequireStorageNotLow() -> Boolean

  @JavaMethod
  open fn getTriggerContentUris() -> [JobInfo.TriggerContentUri?]

  @JavaMethod
  open fn getTriggerContentUpdateDelay() -> Int64

  @JavaMethod
  open fn getTriggerContentMaxDelay() -> Int64

  @JavaMethod
  open fn getNetworkType() -> Int32

  @JavaMethod
  open fn getEstimatedNetworkDownloadBytes() -> Int64

  @JavaMethod
  open fn getEstimatedNetworkUploadBytes() -> Int64

  @JavaMethod
  open fn getMinimumNetworkChunkBytes() -> Int64

  @JavaMethod
  open fn getMinLatencyMillis() -> Int64

  @JavaMethod
  open fn getMaxExecutionDelayMillis() -> Int64

  @JavaMethod
  open fn isPeriodic() -> Boolean

  @JavaMethod
  open fn getIntervalMillis() -> Int64

  @JavaMethod
  open fn getFlexMillis() -> Int64

  @JavaMethod
  open fn getInitialBackoffMillis() -> Int64

  @JavaMethod
  open fn getBackoffPolicy() -> Int32

  @JavaMethod
  open fn isExpedited() -> Boolean

  @JavaMethod
  open fn isImportantWhileForeground() -> Boolean

  @JavaMethod
  open fn isPrefetch() -> Boolean

  @JavaMethod
  open fn isPersisted() -> Boolean

  @JavaMethod
  open override fn equals(_ arg0: JavaObject?) -> Boolean

  @JavaMethod
  open override fn toString() -> String

  @JavaMethod
  open override fn hashCode() -> Int32

  @JavaMethod
  open fn getPriority() -> Int32

  @JavaMethod
  open fn getId() -> Int32
}
extension JavaClass<JobInfo> {
  @JavaStaticField(isFinal: true)
  public var BACKOFF_POLICY_EXPONENTIAL: Int32

  @JavaStaticField(isFinal: true)
  public var BACKOFF_POLICY_LINEAR: Int32

  @JavaStaticField(isFinal: true)
  public var DEFAULT_INITIAL_BACKOFF_MILLIS: Int64

  @JavaStaticField(isFinal: true)
  public var MAX_BACKOFF_DELAY_MILLIS: Int64

  @JavaStaticField(isFinal: true)
  public var NETWORK_BYTES_UNKNOWN: Int32

  @JavaStaticField(isFinal: true)
  public var NETWORK_TYPE_ANY: Int32

  @JavaStaticField(isFinal: true)
  public var NETWORK_TYPE_CELLULAR: Int32

  @JavaStaticField(isFinal: true)
  public var NETWORK_TYPE_METERED: Int32

  @JavaStaticField(isFinal: true)
  public var NETWORK_TYPE_NONE: Int32

  @JavaStaticField(isFinal: true)
  public var NETWORK_TYPE_NOT_ROAMING: Int32

  @JavaStaticField(isFinal: true)
  public var NETWORK_TYPE_UNMETERED: Int32

  @JavaStaticField(isFinal: true)
  public var PRIORITY_DEFAULT: Int32

  @JavaStaticField(isFinal: true)
  public var PRIORITY_HIGH: Int32

  @JavaStaticField(isFinal: true)
  public var PRIORITY_LOW: Int32

  @JavaStaticField(isFinal: true)
  public var PRIORITY_MAX: Int32

  @JavaStaticField(isFinal: true)
  public var PRIORITY_MIN: Int32

  @JavaStaticField(isFinal: true)
  public var CONTENTS_FILE_DESCRIPTOR: Int32

  @JavaStaticField(isFinal: true)
  public var PARCELABLE_WRITE_RETURN_VALUE: Int32

  @JavaStaticMethod
  public fn getMinPeriodMillis() -> Int64

  @JavaStaticMethod
  public fn getMinFlexMillis() -> Int64
}
