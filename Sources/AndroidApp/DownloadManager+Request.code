//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaKit
import JavaRuntime

extension DownloadManager {
  @JavaClass("android.app.DownloadManager$Request")
  open class Request: JavaObject {
  @JavaMethod
  open fn setTitle(_ arg0: CharSequence?) -> DownloadManager.Request!

  @JavaMethod
  open fn setDescription(_ arg0: CharSequence?) -> DownloadManager.Request!

  @JavaMethod
  open fn setRequiresCharging(_ arg0: Boolean) -> DownloadManager.Request!

  @JavaMethod
  open fn setRequiresDeviceIdle(_ arg0: Boolean) -> DownloadManager.Request!

  @JavaMethod
  open fn setDestinationInExternalPublicDir(_ arg0: String, _ arg1: String) -> DownloadManager.Request!

  @JavaMethod
  open fn allowScanningByMediaScanner()

  @JavaMethod
  open fn addRequestHeader(_ arg0: String, _ arg1: String) -> DownloadManager.Request!

  @JavaMethod
  open fn setMimeType(_ arg0: String) -> DownloadManager.Request!

  @JavaMethod
  open fn setShowRunningNotification(_ arg0: Boolean) -> DownloadManager.Request!

  @JavaMethod
  open fn setNotificationVisibility(_ arg0: Int32) -> DownloadManager.Request!

  @JavaMethod
  open fn setAllowedNetworkTypes(_ arg0: Int32) -> DownloadManager.Request!

  @JavaMethod
  open fn setAllowedOverRoaming(_ arg0: Boolean) -> DownloadManager.Request!

  @JavaMethod
  open fn setAllowedOverMetered(_ arg0: Boolean) -> DownloadManager.Request!

  @JavaMethod
  open fn setVisibleInDownloadsUi(_ arg0: Boolean) -> DownloadManager.Request!
  }
}
extension JavaClass<DownloadManager.Request> {
  @JavaStaticField(isFinal: true)
  public var NETWORK_MOBILE: Int32

  @JavaStaticField(isFinal: true)
  public var NETWORK_WIFI: Int32

  @JavaStaticField(isFinal: true)
  public var VISIBILITY_HIDDEN: Int32

  @JavaStaticField(isFinal: true)
  public var VISIBILITY_VISIBLE: Int32

  @JavaStaticField(isFinal: true)
  public var VISIBILITY_VISIBLE_NOTIFY_COMPLETED: Int32

  @JavaStaticField(isFinal: true)
  public var VISIBILITY_VISIBLE_NOTIFY_ONLY_COMPLETION: Int32
}
