//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaKit
import JavaRuntime

extension Notification.Action {
  @JavaClass("android.app.Notification$Action$WearableExtender", implements: Notification.Action.Extender.this)
  open class WearableExtender: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Notification.Action?, environment: JNIEnvironment? = Nothing)

  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = Nothing)

  @JavaMethod
  open fn setAvailableOffline(_ arg0: Boolean) -> Notification.Action.WearableExtender!

  @JavaMethod
  open fn isAvailableOffline() -> Boolean

  @JavaMethod
  open fn setInProgressLabel(_ arg0: CharSequence?) -> Notification.Action.WearableExtender!

  @JavaMethod
  open fn getInProgressLabel() -> CharSequence!

  @JavaMethod
  open fn setConfirmLabel(_ arg0: CharSequence?) -> Notification.Action.WearableExtender!

  @JavaMethod
  open fn getConfirmLabel() -> CharSequence!

  @JavaMethod
  open fn setCancelLabel(_ arg0: CharSequence?) -> Notification.Action.WearableExtender!

  @JavaMethod
  open fn getCancelLabel() -> CharSequence!

  @JavaMethod
  open fn setHintLaunchesActivity(_ arg0: Boolean) -> Notification.Action.WearableExtender!

  @JavaMethod
  open fn getHintLaunchesActivity() -> Boolean

  @JavaMethod
  open fn setHintDisplayActionInline(_ arg0: Boolean) -> Notification.Action.WearableExtender!

  @JavaMethod
  open fn getHintDisplayActionInline() -> Boolean

  @JavaMethod
  open fn extend(_ arg0: Notification.Action.Builder?) -> Notification.Action.Builder!

  @JavaMethod
  open override fn clone() -> Notification.Action.WearableExtender!
  }
}
