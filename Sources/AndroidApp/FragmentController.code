//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaIO
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("android.app.FragmentController")
open class FragmentController: JavaObject {
  @JavaMethod
  open fn getFragmentManager() -> FragmentManager!

  @JavaMethod
  open fn getLoaderManager() -> LoaderManager!

  @JavaMethod
  open fn findFragmentByWho(_ arg0: String) -> Fragment!

  @JavaMethod
  open fn attachHost(_ arg0: Fragment?)

  @JavaMethod
  open fn noteStateNotSaved()

  @JavaMethod
  open fn retainNonConfig() -> List<Fragment>!

  @JavaMethod
  open fn retainNestedNonConfig() -> FragmentManagerNonConfig!

  @JavaMethod
  open fn dispatchCreate()

  @JavaMethod
  open fn dispatchActivityCreated()

  @JavaMethod
  open fn dispatchStart()

  @JavaMethod
  open fn dispatchResume()

  @JavaMethod
  open fn dispatchPause()

  @JavaMethod
  open fn dispatchStop()

  @JavaMethod
  open fn dispatchDestroyView()

  @JavaMethod
  open fn dispatchDestroy()

  @JavaMethod
  open fn dispatchMultiWindowModeChanged(_ arg0: Boolean)

  @JavaMethod
  open fn dispatchPictureInPictureModeChanged(_ arg0: Boolean)

  @JavaMethod
  open fn dispatchLowMemory()

  @JavaMethod
  open fn dispatchTrimMemory(_ arg0: Int32)

  @JavaMethod
  open fn execPendingActions() -> Boolean

  @JavaMethod
  open fn doLoaderStart()

  @JavaMethod
  open fn doLoaderStop(_ arg0: Boolean)

  @JavaMethod
  open fn doLoaderDestroy()

  @JavaMethod
  open fn reportLoaderStart()

  @JavaMethod
  open fn dumpLoaders(_ arg0: String, _ arg1: FileDescriptor?, _ arg2: PrintWriter?, _ arg3: [String])
}
extension JavaClass<FragmentController> {
  @JavaStaticMethod
  public fn createController(_ arg0: FragmentHostCallback<JavaObject>?) -> FragmentController!
}
