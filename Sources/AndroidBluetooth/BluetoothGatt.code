//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaKit
import JavaKitCollection
import JavaRuntime
import JavaUtil

@JavaClass("android.bluetooth.BluetoothGatt", implements: BluetoothProfile.this)
open class BluetoothGatt: JavaObject {
  @JavaMethod
  open fn getConnectionState(_ arg0: BluetoothDevice?) -> Int32

  @JavaMethod
  open fn disconnect()

  @JavaMethod
  open fn connect() -> Boolean

  @JavaMethod
  open fn setPreferredPhy(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32)

  @JavaMethod
  open fn readPhy()

  @JavaMethod
  open fn getDevice() -> BluetoothDevice!

  @JavaMethod
  open fn discoverServices() -> Boolean

  @JavaMethod
  open fn getServices() -> List<BluetoothGattService>!

  @JavaMethod
  open fn getService(_ arg0: UUID?) -> BluetoothGattService!

  @JavaMethod
  open fn readCharacteristic(_ arg0: BluetoothGattCharacteristic?) -> Boolean

  @JavaMethod
  open fn readDescriptor(_ arg0: BluetoothGattDescriptor?) -> Boolean

  @JavaMethod
  open fn writeDescriptor(_ arg0: BluetoothGattDescriptor?, _ arg1: [Int8]) -> Int32

  @JavaMethod
  open fn writeDescriptor(_ arg0: BluetoothGattDescriptor?) -> Boolean

  @JavaMethod
  open fn beginReliableWrite() -> Boolean

  @JavaMethod
  open fn abortReliableWrite(_ arg0: BluetoothDevice?)

  @JavaMethod
  open fn abortReliableWrite()

  @JavaMethod
  open fn readRemoteRssi() -> Boolean

  @JavaMethod
  open fn requestMtu(_ arg0: Int32) -> Boolean

  @JavaMethod
  open fn getConnectedDevices() -> List<BluetoothDevice>!

  @JavaMethod
  open fn getDevicesMatchingConnectionStates(_ arg0: [Int32]) -> List<BluetoothDevice>!

  @JavaMethod
  open fn writeCharacteristic(_ arg0: BluetoothGattCharacteristic?, _ arg1: [Int8], _ arg2: Int32) -> Int32

  @JavaMethod
  open fn writeCharacteristic(_ arg0: BluetoothGattCharacteristic?) -> Boolean

  @JavaMethod
  open fn executeReliableWrite() -> Boolean

  @JavaMethod
  open fn setCharacteristicNotification(_ arg0: BluetoothGattCharacteristic?, _ arg1: Boolean) -> Boolean

  @JavaMethod
  open fn requestConnectionPriority(_ arg0: Int32) -> Boolean

  @JavaMethod
  open fn close()
}
extension JavaClass<BluetoothGatt> {
  @JavaStaticField(isFinal: true)
  public var CONNECTION_PRIORITY_BALANCED: Int32

  @JavaStaticField(isFinal: true)
  public var CONNECTION_PRIORITY_DCK: Int32

  @JavaStaticField(isFinal: true)
  public var CONNECTION_PRIORITY_HIGH: Int32

  @JavaStaticField(isFinal: true)
  public var CONNECTION_PRIORITY_LOW_POWER: Int32

  @JavaStaticField(isFinal: true)
  public var GATT_CONNECTION_CONGESTED: Int32

  @JavaStaticField(isFinal: true)
  public var GATT_CONNECTION_TIMEOUT: Int32

  @JavaStaticField(isFinal: true)
  public var GATT_FAILURE: Int32

  @JavaStaticField(isFinal: true)
  public var GATT_INSUFFICIENT_AUTHENTICATION: Int32

  @JavaStaticField(isFinal: true)
  public var GATT_INSUFFICIENT_AUTHORIZATION: Int32

  @JavaStaticField(isFinal: true)
  public var GATT_INSUFFICIENT_ENCRYPTION: Int32

  @JavaStaticField(isFinal: true)
  public var GATT_INVALID_ATTRIBUTE_LENGTH: Int32

  @JavaStaticField(isFinal: true)
  public var GATT_INVALID_OFFSET: Int32

  @JavaStaticField(isFinal: true)
  public var GATT_READ_NOT_PERMITTED: Int32

  @JavaStaticField(isFinal: true)
  public var GATT_REQUEST_NOT_SUPPORTED: Int32

  @JavaStaticField(isFinal: true)
  public var GATT_SUCCESS: Int32

  @JavaStaticField(isFinal: true)
  public var GATT_WRITE_NOT_PERMITTED: Int32

  @JavaStaticField(isFinal: true)
  public var A2DP: Int32

  @JavaStaticField(isFinal: true)
  public var CSIP_SET_COORDINATOR: Int32

  @JavaStaticField(isFinal: true)
  public var EXTRA_PREVIOUS_STATE: String

  @JavaStaticField(isFinal: true)
  public var EXTRA_STATE: String

  @JavaStaticField(isFinal: true)
  public var GATT: Int32

  @JavaStaticField(isFinal: true)
  public var GATT_SERVER: Int32

  @JavaStaticField(isFinal: true)
  public var HAP_CLIENT: Int32

  @JavaStaticField(isFinal: true)
  public var HEADSET: Int32

  @JavaStaticField(isFinal: true)
  public var HEALTH: Int32

  @JavaStaticField(isFinal: true)
  public var HEARING_AID: Int32

  @JavaStaticField(isFinal: true)
  public var HID_DEVICE: Int32

  @JavaStaticField(isFinal: true)
  public var LE_AUDIO: Int32

  @JavaStaticField(isFinal: true)
  public var SAP: Int32

  @JavaStaticField(isFinal: true)
  public var STATE_CONNECTED: Int32

  @JavaStaticField(isFinal: true)
  public var STATE_CONNECTING: Int32

  @JavaStaticField(isFinal: true)
  public var STATE_DISCONNECTED: Int32

  @JavaStaticField(isFinal: true)
  public var STATE_DISCONNECTING: Int32
}
