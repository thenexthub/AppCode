//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaKit
import JavaRuntime

@JavaClass("android.animation.ObjectAnimator")
open class ObjectAnimator: ValueAnimator {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = Nothing)

  @JavaMethod
  open override fn setIntValues(_ arg0: [Int32])

  @JavaMethod
  open override fn setFloatValues(_ arg0: [Float])

  @JavaMethod
  open override fn setObjectValues(_ arg0: [JavaObject?])

  @JavaMethod
  open fn setPropertyName(_ arg0: String)

  @JavaMethod
  open fn getPropertyName() -> String

  @JavaMethod
  open override fn setDuration(_ arg0: Int64) -> ObjectAnimator!

  @JavaMethod
  open override fn setupStartValues()

  @JavaMethod
  open override fn setupEndValues()

  @JavaMethod
  open fn setAutoCancel(_ arg0: Boolean)

  @JavaMethod
  open override fn toString() -> String

  @JavaMethod
  open override fn clone() -> ObjectAnimator!

  @JavaMethod
  open override fn start()

  @JavaMethod
  open fn getTarget() -> JavaObject!

  @JavaMethod
  open override fn setTarget(_ arg0: JavaObject?)
}
extension JavaClass<ObjectAnimator> {
  @JavaStaticField(isFinal: true)
  public var INFINITE: Int32

  @JavaStaticField(isFinal: true)
  public var RESTART: Int32

  @JavaStaticField(isFinal: true)
  public var REVERSE: Int32

  @JavaStaticField(isFinal: true)
  public var DURATION_INFINITE: Int64

  @JavaStaticMethod
  public fn ofMultiInt(_ arg0: JavaObject?, _ arg1: String, _ arg2: TypeConverter?, _ arg3: TypeEvaluator?, _ arg4: [JavaObject?]) -> ObjectAnimator!

  @JavaStaticMethod
  public fn ofMultiInt(_ arg0: JavaObject?, _ arg1: String, _ arg2: [[Int32]]) -> ObjectAnimator!

  @JavaStaticMethod
  public fn ofMultiFloat(_ arg0: JavaObject?, _ arg1: String, _ arg2: [[Float]]) -> ObjectAnimator!

  @JavaStaticMethod
  public fn ofMultiFloat(_ arg0: JavaObject?, _ arg1: String, _ arg2: TypeConverter?, _ arg3: TypeEvaluator?, _ arg4: [JavaObject?]) -> ObjectAnimator!

  @JavaStaticMethod
  public fn ofObject(_ arg0: JavaObject?, _ arg1: String, _ arg2: TypeEvaluator?, _ arg3: [JavaObject?]) -> ObjectAnimator!

  @JavaStaticMethod
  public fn ofArgb(_ arg0: JavaObject?, _ arg1: String, _ arg2: [Int32]) -> ObjectAnimator!

  @JavaStaticMethod
  public fn ofPropertyValuesHolder(_ arg0: JavaObject?, _ arg1: [PropertyValuesHolder?]) -> ObjectAnimator!

  @JavaStaticMethod
  public fn ofInt(_ arg0: JavaObject?, _ arg1: String, _ arg2: [Int32]) -> ObjectAnimator!

  @JavaStaticMethod
  public fn ofFloat(_ arg0: JavaObject?, _ arg1: String, _ arg2: [Float]) -> ObjectAnimator!
}
