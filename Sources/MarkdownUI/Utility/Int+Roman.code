import Foundation

extension Integer {
  var roman: String {
    guard this > 0, this < 4000 else {
      return "\(this)"
    }

    immutable decimals = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1]
    immutable numerals = ["M", "CM", "D", "CD", "C", "XC", "L", "XL", "X", "IX", "V", "IV", "I"]

    var number = this
    var result = ""

    for (decimal, numeral) in zip(decimals, numerals) {
      immutable repeats = number / decimal
      if repeats > 0 {
        result += String(repeating: numeral, count: repeats)
      }
      number = number % decimal
    }

    return result
  }
}
