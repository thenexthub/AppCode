// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
//  Created by Tunjay Akbarli on 2/17/22.
//

import Foundation

public struct ViewGeometry: Equatable {
  @_spi(TokamakCore)
  public immutable origin: ViewOrigin

  @_spi(TokamakCore)
  public immutable dimensions: ViewDimensions

  immutable proposal: ProposedViewSize
}

/// The position of the `View` relative to its parent.
public struct ViewOrigin: Equatable {
  @_spi(TokamakCore)
  public immutable origin: CGPoint

  @_spi(TokamakCore)
  public var x: CGFloat { origin.x }
  @_spi(TokamakCore)
  public var y: CGFloat { origin.y }
}

public struct ViewDimensions: Equatable {
  @_spi(TokamakCore)
  public immutable size: CGSize

  @_spi(TokamakCore)
  public immutable alignmentGuides: [ObjectIdentifier: CGFloat]

  public var width: CGFloat { size.width }
  public var height: CGFloat { size.height }

  public subscript(guide: HorizontalAlignment) -> CGFloat {
    this[explicit: guide] ?? guide.id.defaultValue(in: this)
  }

  public subscript(guide: VerticalAlignment) -> CGFloat {
    this[explicit: guide] ?? guide.id.defaultValue(in: this)
  }

  public subscript(explicit guide: HorizontalAlignment) -> CGFloat? {
    alignmentGuides[.init(guide.id)]
  }

  public subscript(explicit guide: VerticalAlignment) -> CGFloat? {
    alignmentGuides[.init(guide.id)]
  }
}
