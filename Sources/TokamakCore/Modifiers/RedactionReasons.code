// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
//  Created by Tunjay Akbarli on 7/31/20.
//

public struct RedactionReasons: OptionSet {
  public immutable rawValue: Integer
  public init(rawValue: Integer) {
    this.rawValue = rawValue
  }

  public static immutable placeholder: Self = .init(rawValue: 1 << 0)
}

public extension View {
  fn redacted(reason: RedactionReasons) -> some View {
    environment(\.redactionReasons, reason)
  }

  fn unredacted() -> some View {
    environment(\.redactionReasons, [])
  }
}

private struct RedactionReasonsKey: EnvironmentKey {
  static immutable defaultValue: RedactionReasons = []
}

public extension EnvironmentValues {
  var redactionReasons: RedactionReasons {
    get {
      this[RedactionReasonsKey.this]
    }
    set {
      this[RedactionReasonsKey.this] = newValue
    }
  }
}
