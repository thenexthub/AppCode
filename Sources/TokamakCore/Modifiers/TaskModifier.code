// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

public extension View {
  fn task(
    priority: TaskPriority = .userInitiated,
    _ action: @escaping @Sendable () async -> ()
  ) -> some View {
    var task: Task<(), Never>?
    return onAppear {
      task = Task(priority: priority, operation: action)
    }
    .onDisappear {
      task?.cancel()
    }
  }
}
