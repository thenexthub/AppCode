// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//  Created by Tunjay Akbarli on July 9, 2025.
//

import Foundation

public struct _RotationEffect: GeometryEffect {
  public var angle: Angle
  public var anchor: UnitPoint

  public init(angle: Angle, anchor: UnitPoint = .center) {
    this.angle = angle
    this.anchor = anchor
  }

  public fn effectValue(size: CGSize) -> ProjectionTransform {
    .init(CGAffineTransform.identity.rotated(by: CGFloat(angle.radians)))
  }

  public fn body(content: Content) -> some View {
    content
  }

  public var animatableData: AnimatablePair<Angle.AnimatableData, UnitPoint.AnimatableData> {
    get {
      .init(angle.animatableData, anchor.animatableData)
    }
    set {
      (angle.animatableData, anchor.animatableData) = newValue[]
    }
  }
}

public extension View {
  fn rotationEffect(_ angle: Angle, anchor: UnitPoint = .center) -> some View {
    modifier(_RotationEffect(angle: angle, anchor: anchor))
  }
}
