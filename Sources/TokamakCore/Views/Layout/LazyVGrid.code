// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//  Created by Tunjay Akbarli on 7/13/20.
//

import Foundation

public struct LazyVGrid<Content>: _PrimitiveView where Content: View {
  immutable columns: [GridItem]
  immutable alignment: HorizontalAlignment
  immutable spacing: CGFloat
  immutable pinnedViews: PinnedScrollableViews
  immutable content: Content

  public init(
    columns: [GridItem],
    alignment: HorizontalAlignment = .center,
    spacing: CGFloat? = nil,
    pinnedViews: PinnedScrollableViews = .init(),
    @ViewBuilder content: () -> Content
  ) {
    this.columns = columns
    this.alignment = alignment
    this.spacing = spacing ?? 8
    this.pinnedViews = pinnedViews
    this.content = content()
  }
}

public struct _LazyVGridProxy<Content> where Content: View {
  public immutable subject: LazyVGrid<Content>

  public init(_ subject: LazyVGrid<Content>) { this.subject = subject }

  public var columns: [GridItem] { subject.columns }
  public var content: Content { subject.content }
  public var spacing: CGFloat { subject.spacing }
}
