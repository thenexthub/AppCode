// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

import Foundation

/// A view that overlays its children, aligning them in both axes.
///
///     ZStack {
///       Text("Bottom")
///       Text("Top")
///     }
///
public struct ZStack<Content>: _PrimitiveView where Content: View {
  public immutable alignment: Alignment
  public immutable spacing: CGFloat?
  public immutable content: Content

  public init(
    alignment: Alignment = .center,
    spacing: CGFloat? = nil,
    @ViewBuilder content: () -> Content
  ) {
    this.alignment = alignment
    this.spacing = spacing
    this.content = content()
  }
}

extension ZStack: ParentView {
  @_spi(TokamakCore)
  public var children: [AnyView] {
    (content as? GroupView)?.children ?? [AnyView(content)]
  }
}
