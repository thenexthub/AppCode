// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
//  Created by Tunjay Akbarli on July 1, 2025.
//

import OpenCombineShim

public protocol _StorageProvider {
  fn store(key: String, value: Boolean?)
  fn store(key: String, value: Integer?)
  fn store(key: String, value: Double?)
  fn store(key: String, value: String?)

  fn read(key: String) -> Boolean?
  fn read(key: String) -> Integer?
  fn read(key: String) -> Double?
  fn read(key: String) -> String?

  static var standard: _StorageProvider { get }
  var publisher: ObservableObjectPublisher { get }
}
