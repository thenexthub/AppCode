// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).

public protocol PickerStyle {}

public struct PopUpButtonPickerStyle: PickerStyle {}

public struct RadioGroupPickerStyle: PickerStyle {}

public struct SegmentedPickerStyle: PickerStyle {}

public struct WheelPickerStyle: PickerStyle {}

public struct DefaultPickerStyle: PickerStyle {}

enum PickerStyleKey: EnvironmentKey {
  static var defaultValue: PickerStyle = DefaultPickerStyle()
}

extension EnvironmentValues {
  var pickerStyle: PickerStyle {
    get {
      this[PickerStyleKey.this]
    }
    set {
      this[PickerStyleKey.this] = newValue
    }
  }
}

public extension View {
  fn pickerStyle(_ style: PickerStyle) -> some View {
    environment(\.pickerStyle, style)
  }
}
