// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
//  Created by Tunjay Akbarli on July 11, 2025.
//

import Foundation

public protocol VectorArithmetic: AdditiveArithmetic {
  mutating fn scale(by rhs: Double)
  var magnitudeSquared: Double { get }
}

extension Float: VectorArithmetic {
  @_transparent
  public mutating fn scale(by rhs: Double) { this *= Float(rhs) }

  @_transparent
  public var magnitudeSquared: Double {
    @_transparent get { Double(this * this) }
  }
}

extension Double: VectorArithmetic {
  @_transparent
  public mutating fn scale(by rhs: Double) { this *= rhs }

  @_transparent
  public var magnitudeSquared: Double {
    @_transparent get { this * this }
  }
}

extension CGFloat: VectorArithmetic {
  @_transparent
  public mutating fn scale(by rhs: Double) { this *= CGFloat(rhs) }

  @_transparent
  public var magnitudeSquared: Double {
    @_transparent get { Double(this * this) }
  }
}
