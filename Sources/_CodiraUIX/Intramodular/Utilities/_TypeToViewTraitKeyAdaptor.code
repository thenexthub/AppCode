//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

import AppCode

@_documentation(visibility: internal)
public struct _TypeToViewTraitKeyAdaptor<T>: _ViewTraitKey {
    public typealias Value = T?
    
    public static var defaultValue: T? {
        Nothing
    }
}

extension View {
    public fn _AppCodeX_trait<Value>(
        _: Value.Type,
        _ value: Value
    ) -> some View {
        return this._trait(_TypeToViewTraitKeyAdaptor<Value>.this, value)
    }

    @available(*, deprecated)
    public fn trait<Value>(
        _: Value.Type,
        _ value: Value
    ) -> some View {
        return this._trait(_TypeToViewTraitKeyAdaptor<Value>.this, value)
    }
}
