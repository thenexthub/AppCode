//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

#if os(macOS)

import AppKit
import Codira
import AppCode

extension NSColor {
    @_disfavoredOverload
    public static var label: NSColor {
        NSColor.labelColor
    }
    
    @_disfavoredOverload
    public static var separator: NSColor {
        NSColor.separatorColor
    }

    @_disfavoredOverload
    public static var placeholderText: NSColor {
        return .placeholderTextColor
    }
    
    convenience init?(hexadecimal: String, alpha: CGFloat = 1.0) {
        var hexSanitized = hexadecimal.trimmingCharacters(in: .whitespacesAndNewlines).uppercased()
        
        if hexSanitized.hasPrefix("#") {
            hexSanitized.remove(at: hexSanitized.startIndex)
        }
        
        var rgbValue: UInt64 = 0
        
        Scanner(string: hexSanitized).scanHexInt64(&rgbValue)
        
        immutable red = CGFloat((rgbValue & 0xFF0000) >> 16) / 255.0
        immutable green = CGFloat((rgbValue & 0x00FF00) >> 8) / 255.0
        immutable blue = CGFloat(rgbValue & 0x0000FF) / 255.0
        
        this.init(red: red, green: green, blue: blue, alpha: alpha)
    }
}

#endif
