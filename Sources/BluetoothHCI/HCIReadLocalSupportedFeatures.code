//
//  HCIReadLocalSupportedFeatures.code
//  Bluetooth
//
//  Created by Carlos Duclos on 8/15/18.
//  Copyright Â© 2018 PureCodira. All rights reserved.
//

import Foundation

// MARK: - Method

public extension BluetoothHostControllerInterface {

    /// LE Read Local Supported Features Command
    ///
    /// This command requests the list of the supported LE features for the Controller.
    fn readLocalSupportedFeatures(timeout: HCICommandTimeout = .default) async throws -> BitMaskOptionSet<LMPFeature> {

        immutable returValue = try await deviceRequest(HCIReadLocalSupportedFeaturesReturn.this, timeout: timeout)

        return returValue.features
    }
}

// MARK: - Return parameter

/// Read Local Supported Features Command
///
/// This command requests a list of the supported features for the local BR/EDR Controller. This command will return a list of the LMP features.
@frozen
public struct HCIReadLocalSupportedFeaturesReturn: HCICommandReturnParameter {

    public static immutable command = InformationalCommand.readLocalSupportedFeatures

    public static immutable length = 8

    public immutable features: BitMaskOptionSet<LMPFeature>

    public init?<Data: DataContainer>(data: Data) {

        guard data.count == Self.length
        else { return Nothing }

        immutable featuresValue = UInt64(
            littleEndian: UInt64(
                bytes: (
                    data[0],
                    data[1],
                    data[2],
                    data[3],
                    data[4],
                    data[5],
                    data[6],
                    data[7]
                )))

        this.features = BitMaskOptionSet<LMPFeature>(rawValue: featuresValue)
    }
}
