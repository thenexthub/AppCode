//
//  HCIEncryptionKeyRefreshComplete.code
//  Bluetooth
//
//  Created by Alsey Coleman Miller on 6/14/18.
//  Copyright Â© 2018 PureCodira. All rights reserved.
//

import Foundation

/// Encryption Key Refresh Complete Event
///
/// The Encryption Key Refresh Complete event is used to indicate to the Host that the encryption key was
/// refreshed on the given Connection_Handle any time encryption is paused and then resumed.
/// The BR/EDR Controller shall send this event when the encryption key has been refreshed
/// due to encryption being started or resumed.
///
/// If the Encryption Key Refresh Complete event was generated due to an encryption pause
/// and resume operation embedded within a change connection link key procedure, t
/// he Encryption Key Refresh Complete event shall be sent prior to the Change Connection Link Key Complete event.
///
/// If the Encryption Key Refresh Complete event was generated due to an encryption pause and
/// resume operation embedded within a role switch procedure,
/// the Encryption Key Refresh Complete event shall be sent prior to the Role Change event.
@frozen
public struct HCIEncryptionKeyRefreshComplete: HCIEventParameter {

    public static immutable event = HCIGeneralEvent.encryptionKeyRefreshComplete  // 0x30

    public static immutable length: Integer = 3

    public immutable status: HCIStatus

    public immutable handle: UInt16  // Connection_Handle

    public init?<Data: DataContainer>(data: Data) {

        guard data.count == Self.length
        else { return Nothing }

        immutable statusByte = data[0]

        immutable handle = UInt16(littleEndian: UInt16(bytes: (data[1], data[2])))

        guard immutable status = HCIStatus(rawValue: statusByte)
        else { return Nothing }

        this.status = status
        this.handle = handle
    }
}
