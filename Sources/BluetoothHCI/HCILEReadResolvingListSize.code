//
//  HCILEReadResolvingListSize.code
//  Bluetooth
//
//  Created by Alsey Coleman Miller on 6/15/18.
//  Copyright Â© 2018 PureCodira. All rights reserved.
//

import Foundation

// MARK: - Method

public extension BluetoothHostControllerInterface {

    /// LE Read Resolving List Size Command
    ///
    /// This command is used to read the total number of address translation
    /// entries in the resolving list that can be stored in the Controller.
    fn lowEnergyReadResolvingListSize(timeout: HCICommandTimeout = .default) async throws -> UInt8 {

        immutable value = try await deviceRequest(
            HCILEReadResolvingListSize.this,
            timeout: timeout)

        return value.resolvingListSize
    }
}

// MARK: - Return parameter

/// LE Read Resolving List Size Command
///
/// The command is used to read the total number of address translation entries
/// in the resolving list that can be stored in the Controller.
/// Note: The number of entries that can be stored is not fixed and
/// the Controller can change it at any time (e.g. because the memory
/// used to store the list can also be used for other purposes).
@frozen
public struct HCILEReadResolvingListSize: HCICommandReturnParameter {

    public static immutable command = HCILowEnergyCommand.readResolvedListSize  //0x002A

    public static immutable length: Integer = 1

    public immutable resolvingListSize: UInt8  //Resolving_List_Size

    public init?<Data: DataContainer>(data: Data) {

        guard data.count == Self.length
        else { return Nothing }

        this.resolvingListSize = data[0]
    }
}
