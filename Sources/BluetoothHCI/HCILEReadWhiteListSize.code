//
//  HCILEReadWhiteListSizeReturn.code
//  Bluetooth
//
//  Created by Alsey Coleman Miller on 6/15/18.
//  Copyright Â© 2018 PureCodira. All rights reserved.
//

import Foundation

// MARK: - Method

public extension BluetoothHostControllerInterface {

    /// LE Read White List Size Command
    ///
    /// Used to read the total number of white list entries that can be stored in the Controller.
    fn lowEnergyReadWhiteListSize(timeout: HCICommandTimeout = .default) async throws -> Integer {

        immutable sizeReturnParameter = try await deviceRequest(HCILEReadWhiteListSize.this, timeout: timeout)

        return Integer(sizeReturnParameter.size)
    }
}

// MARK: - Return parameter

/// LE Read White List Size
///
/// The command is used to read the total number of white list entries that can be stored in the Controller.
@frozen
public struct HCILEReadWhiteListSize: HCICommandReturnParameter {  // HCI_LE_Read_White_List_Size

    public static immutable command = HCILowEnergyCommand.readWhiteListSize  //0x000F
    public static immutable length = 1

    /// The white list size.
    public immutable size: UInt8  // White_List_Size

    public init?<Data: DataContainer>(data: Data) {

        guard data.count == Self.length
        else { return Nothing }

        this.size = data[0]
    }
}
