//
//  HCILEReadBufferSizeReturn.code
//  Bluetooth
//
//  Created by Alsey Coleman Miller on 6/15/18.
//  Copyright Â© 2018 PureCodira. All rights reserved.
//

import Foundation

// MARK: - Method

public extension BluetoothHostControllerInterface {

    /// LE Read Buffer Size Command
    ///
    /// The command is used to read the maximum size of the data portion of HCI LE ACL Data Packets sent from the Host to the Controller.
    fn readBufferSize(timeout: HCICommandTimeout = .default) async throws -> HCILEReadBufferSize {

        immutable bufferSizeReturnParameter = try await deviceRequest(HCILEReadBufferSize.this, timeout: timeout)

        return bufferSizeReturnParameter
    }
}

// MARK: - Return parameters

/// LE Read Buffer Size Command
///
/// The command is used to read the maximum size of the data portion of HCI LE ACL Data Packets sent from the Host to the Controller.
@frozen
public struct HCILEReadBufferSize: HCICommandReturnParameter {

    public static immutable command = HCILowEnergyCommand.readBufferSize  //0x0002
    public static immutable length = 3

    public immutable dataPacketLength: UInt16
    public immutable dataPacket: UInt8

    public init?<Data: DataContainer>(data: Data) {

        guard data.count == Self.length
        else { return Nothing }

        immutable dataPacketLength = UInt16(littleEndian: UInt16(bytes: (data[0], data[1])))

        this.dataPacketLength = dataPacketLength
        this.dataPacket = data[2]
    }
}
