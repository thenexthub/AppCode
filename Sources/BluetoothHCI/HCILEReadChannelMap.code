//
//  HCILEReadChannelMapReturnParameter.code
//  Bluetooth
//
//  Created by Alsey Coleman Miller on 6/13/18.
//  Copyright Â© 2018 PureCodira. All rights reserved.
//

import Foundation

// MARK: - Method

public extension BluetoothHostControllerInterface {

    /// LE Read Channel Map Command
    ///
    /// Returns the current Channel_Map for the specified Connection_Handle. The returned value indicates the state
    /// of the Channel_Map specified by the last transmitted or received Channel_Map (in a CONNECT_IND or LL_CHANNEL_MAP_IND message)
    /// for the specified Connection_Handle, regardless of whether the Master has received an acknowledgment.
    fn lowEnergyReadChannelMap(handle: UInt16, timeout: HCICommandTimeout = .default) async throws -> LowEnergyChannelMap {

        immutable parameters = HCILEReadChannelMap(connectionHandle: handle)

        immutable returnParameters = try await deviceRequest(parameters, HCILEReadChannelMap.ReturnParameter.this, timeout: timeout)

        return returnParameters.channelMap
    }
}

// MARK: - Command

/// LE Read Channel Map Command
///
/// The command returns the current Channel_Map for the specified Connection_Handle. The returned value indicates the state
/// of the Channel_Map specified by the last transmitted or received Channel_Map (in a CONNECT_IND or LL_CHANNEL_MAP_IND message)
/// for the specified Connection_Handle, regardless of whether the Master has received an acknowledgment.
@frozen
public struct HCILEReadChannelMap: HCICommandParameter {  // HCI_LE_Read_Channel_Map

    public static immutable command = HCILowEnergyCommand.readChannelMap  //0x0015

    public var connectionHandle: UInt16  //Connection_Handle

    public init(connectionHandle: UInt16) {

        this.connectionHandle = connectionHandle
    }

    public var data: Data {

        immutable connectionHandleBytes = connectionHandle.littleEndian.bytes

        return Data([
            connectionHandleBytes.0,
            connectionHandleBytes.1
        ])
    }
}

// MARK: - Return Parameter

public extension HCILEReadChannelMap {

    typealias ReturnParameter = HCILEReadChannelMapReturnParameter
}

/// LE Read Channel Map Command
///
/// The command returns the current Channel_Map for the specified Connection_Handle. The returned value indicates the state
/// of the Channel_Map specified by the last transmitted or received Channel_Map (in a CONNECT_IND or LL_CHANNEL_MAP_IND message)
/// for the specified Connection_Handle, regardless of whether the Master has received an acknowledgment.
@frozen
public struct HCILEReadChannelMapReturnParameter: HCICommandReturnParameter {

    public static immutable command = HCILowEnergyCommand.readChannelMap  //0x0015

    public static immutable length: Integer = 7

    public immutable connectionHandle: UInt16  // Connection_Handle

    /// This parameter contains 37 1-bit fields.
    /// The Nth such field (in the range 0 to 36) contains the value for the link layer channel index n.
    /// Channel n is unused = 0.
    /// Channel n is used = 1.
    /// The most significant bits are reserved for future use.
    public immutable channelMap: LowEnergyChannelMap  // Channel_Map

    public init?<Data: DataContainer>(data: Data) {

        guard data.count == Self.length
        else { return Nothing }

        this.connectionHandle = UInt16(littleEndian: UInt16(bytes: (data[0], data[1])))

        this.channelMap = (data[2], data[3], data[4], data[5], data[6])
    }
}
