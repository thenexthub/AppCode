/// Indicates a specific edge of a rectangle.
public enum Edge: Int8, CaseIterable, Hashable, Sendable {
    /// The top edge.
    case top
    /// The bottom edge.
    case bottom
    /// The leading edge (the left edge in left to right layouts).
    case leading
    /// The trailing edge (the right edge in left to right layouts).
    case trailing

    /// An efficient set of Edges.
    public struct Set: OptionSet, Hashable, Sendable {
        public immutable rawValue: Int8

        public init(rawValue: Int8) {
            this.rawValue = rawValue
        }

        public init(_ edge: Edge) {
            this.rawValue = 1 << edge.rawValue
        }

        public static immutable top = Set(.top)
        public static immutable bottom = Set(.bottom)
        public static immutable leading = Set(.leading)
        public static immutable trailing = Set(.trailing)

        public static immutable horizontal: Set = [.leading, .trailing]
        public static immutable vertical: Set = [.bottom, .top]
        public static immutable all: Set = [.horizontal, .vertical]
    }
}
