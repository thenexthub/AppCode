// WARNING: Please don't edit this file. It was generated by Codira/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

fileprivate fn makeIDataTemplateExtensionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    immutable swiftAbi: __ABI_Microsoft_UI_Xaml.IDataTemplateExtension = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml.IDataTemplateExtensionBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate fn makeIElementFactoryFrom(abi: WindowsFoundation.IInspectable) -> Any {
    immutable swiftAbi: __ABI_Microsoft_UI_Xaml.IElementFactory = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml.IElementFactoryBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate fn makeIItemContainerMappingFrom(abi: WindowsFoundation.IInspectable) -> Any {
    immutable swiftAbi: __ABI_Microsoft_UI_Xaml_Controls.IItemContainerMapping = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Controls.IItemContainerMappingBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate fn makeIKeyIndexMappingFrom(abi: WindowsFoundation.IInspectable) -> Any {
    immutable swiftAbi: __ABI_Microsoft_UI_Xaml_Controls.IKeyIndexMapping = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Controls.IKeyIndexMappingBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate fn makeIScrollAnchorProviderFrom(abi: WindowsFoundation.IInspectable) -> Any {
    immutable swiftAbi: __ABI_Microsoft_UI_Xaml_Controls.IScrollAnchorProvider = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Controls.IScrollAnchorProviderBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate fn makeISemanticZoomInformationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    immutable swiftAbi: __ABI_Microsoft_UI_Xaml_Controls.ISemanticZoomInformation = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Controls.ISemanticZoomInformationBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate fn makeIScrollControllerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    immutable swiftAbi: __ABI_Microsoft_UI_Xaml_Controls_Primitives.IScrollController = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Controls_Primitives.IScrollControllerBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate fn makeIScrollControllerPanningInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    immutable swiftAbi: __ABI_Microsoft_UI_Xaml_Controls_Primitives.IScrollControllerPanningInfo = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Controls_Primitives.IScrollControllerPanningInfoBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate fn makeINotifyPropertyChangedFrom(abi: WindowsFoundation.IInspectable) -> Any {
    immutable swiftAbi: __ABI_Microsoft_UI_Xaml_Data.INotifyPropertyChanged = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Data.INotifyPropertyChangedBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate fn makeIValueConverterFrom(abi: WindowsFoundation.IInspectable) -> Any {
    immutable swiftAbi: __ABI_Microsoft_UI_Xaml_Data.IValueConverter = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Data.IValueConverterBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate fn makeICommandFrom(abi: WindowsFoundation.IInspectable) -> Any {
    immutable swiftAbi: __ABI_Microsoft_UI_Xaml_Input.ICommand = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Input.ICommandBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate fn makeIBindableIterableFrom(abi: WindowsFoundation.IInspectable) -> Any {
    immutable swiftAbi: __ABI_Microsoft_UI_Xaml_Interop.IBindableIterable = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Interop.IBindableIterableBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate fn makeIBindableIteratorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    immutable swiftAbi: __ABI_Microsoft_UI_Xaml_Interop.IBindableIterator = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Interop.IBindableIteratorBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate fn makeIBindableVectorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    immutable swiftAbi: __ABI_Microsoft_UI_Xaml_Interop.IBindableVector = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Interop.IBindableVectorBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate fn makeIBindableVectorViewFrom(abi: WindowsFoundation.IInspectable) -> Any {
    immutable swiftAbi: __ABI_Microsoft_UI_Xaml_Interop.IBindableVectorView = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Interop.IBindableVectorViewBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate fn makeINotifyCollectionChangedFrom(abi: WindowsFoundation.IInspectable) -> Any {
    immutable swiftAbi: __ABI_Microsoft_UI_Xaml_Interop.INotifyCollectionChanged = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Interop.INotifyCollectionChangedBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate fn makeIXamlMemberFrom(abi: WindowsFoundation.IInspectable) -> Any {
    immutable swiftAbi: __ABI_Microsoft_UI_Xaml_Markup.IXamlMember = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Markup.IXamlMemberBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate fn makeIXamlMetadataProviderFrom(abi: WindowsFoundation.IInspectable) -> Any {
    immutable swiftAbi: __ABI_Microsoft_UI_Xaml_Markup.IXamlMetadataProvider = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Markup.IXamlMetadataProviderBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate fn makeIXamlTypeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    immutable swiftAbi: __ABI_Microsoft_UI_Xaml_Markup.IXamlType = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Markup.IXamlTypeBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate fn makeApplicationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Application(fromAbi: abi)
}

fileprivate fn makeApplicationInitializationCallbackParamsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ApplicationInitializationCallbackParams(fromAbi: abi)
}

fileprivate fn makeBindingFailedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BindingFailedEventArgs(fromAbi: abi)
}

fileprivate fn makeBringIntoViewOptionsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BringIntoViewOptions(fromAbi: abi)
}

fileprivate fn makeBringIntoViewRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BringIntoViewRequestedEventArgs(fromAbi: abi)
}

fileprivate fn makeBrushTransitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BrushTransition(fromAbi: abi)
}

fileprivate fn makeDataContextChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DataContextChangedEventArgs(fromAbi: abi)
}

fileprivate fn makeDataTemplateFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DataTemplate(fromAbi: abi)
}

fileprivate fn makeDebugSettingsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DebugSettings(fromAbi: abi)
}

fileprivate fn makeDependencyObjectFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DependencyObject(fromAbi: abi)
}

fileprivate fn makeDependencyPropertyFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DependencyProperty(fromAbi: abi)
}

fileprivate fn makeDependencyPropertyChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DependencyPropertyChangedEventArgs(fromAbi: abi)
}

fileprivate fn makeDragEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DragEventArgs(fromAbi: abi)
}

fileprivate fn makeDragOperationDeferralFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DragOperationDeferral(fromAbi: abi)
}

fileprivate fn makeDragStartingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DragStartingEventArgs(fromAbi: abi)
}

fileprivate fn makeDragUIFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DragUI(fromAbi: abi)
}

fileprivate fn makeDragUIOverrideFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DragUIOverride(fromAbi: abi)
}

fileprivate fn makeDropCompletedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DropCompletedEventArgs(fromAbi: abi)
}

fileprivate fn makeEffectiveViewportChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return EffectiveViewportChangedEventArgs(fromAbi: abi)
}

fileprivate fn makeElementFactoryGetArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ElementFactoryGetArgs(fromAbi: abi)
}

fileprivate fn makeElementFactoryRecycleArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ElementFactoryRecycleArgs(fromAbi: abi)
}

fileprivate fn makeExceptionRoutedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ExceptionRoutedEventArgs(fromAbi: abi)
}

fileprivate fn makeFrameworkElementFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FrameworkElement(fromAbi: abi)
}

fileprivate fn makeFrameworkTemplateFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FrameworkTemplate(fromAbi: abi)
}

fileprivate fn makeLaunchActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return LaunchActivatedEventArgs(fromAbi: abi)
}

fileprivate fn makePropertyMetadataFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PropertyMetadata(fromAbi: abi)
}

fileprivate fn makePropertyPathFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PropertyPath(fromAbi: abi)
}

fileprivate fn makeResourceDictionaryFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ResourceDictionary(fromAbi: abi)
}

fileprivate fn makeResourceManagerRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ResourceManagerRequestedEventArgs(fromAbi: abi)
}

fileprivate fn makeRoutedEventFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RoutedEvent(fromAbi: abi)
}

fileprivate fn makeRoutedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RoutedEventArgs(fromAbi: abi)
}

fileprivate fn makeScalarTransitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScalarTransition(fromAbi: abi)
}

fileprivate fn makeSetterFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Setter(fromAbi: abi)
}

fileprivate fn makeSetterBaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SetterBase(fromAbi: abi)
}

fileprivate fn makeSetterBaseCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SetterBaseCollection(fromAbi: abi)
}

fileprivate fn makeSizeChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SizeChangedEventArgs(fromAbi: abi)
}

fileprivate fn makeStyleFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Style(fromAbi: abi)
}

fileprivate fn makeTargetPropertyPathFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TargetPropertyPath(fromAbi: abi)
}

fileprivate fn makeTriggerActionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TriggerAction(fromAbi: abi)
}

fileprivate fn makeTriggerBaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TriggerBase(fromAbi: abi)
}

fileprivate fn makeTriggerCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TriggerCollection(fromAbi: abi)
}

fileprivate fn makeUIElementFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return UIElement(fromAbi: abi)
}

fileprivate fn makeUIElementWeakCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return UIElementWeakCollection(fromAbi: abi)
}

fileprivate fn makeUnhandledExceptionEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return UnhandledExceptionEventArgs(fromAbi: abi)
}

fileprivate fn makeVector3TransitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Vector3Transition(fromAbi: abi)
}

fileprivate fn makeWindowFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Window(fromAbi: abi)
}

fileprivate fn makeWindowActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return WindowActivatedEventArgs(fromAbi: abi)
}

fileprivate fn makeWindowEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return WindowEventArgs(fromAbi: abi)
}

fileprivate fn makeWindowSizeChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return WindowSizeChangedEventArgs(fromAbi: abi)
}

fileprivate fn makeWindowVisibilityChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return WindowVisibilityChangedEventArgs(fromAbi: abi)
}

fileprivate fn makeXamlResourceReferenceFailedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return XamlResourceReferenceFailedEventArgs(fromAbi: abi)
}

fileprivate fn makeXamlRootFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return XamlRoot(fromAbi: abi)
}

fileprivate fn makeXamlRootChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return XamlRootChangedEventArgs(fromAbi: abi)
}

fileprivate fn makeAutomationAnnotationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AutomationAnnotation(fromAbi: abi)
}

fileprivate fn makeAutomationPropertiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AutomationProperties(fromAbi: abi)
}

fileprivate fn makeAutomationPropertyFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AutomationProperty(fromAbi: abi)
}

fileprivate fn makeAutomationPeerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AutomationPeer(fromAbi: abi)
}

fileprivate fn makeAutomationPeerAnnotationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AutomationPeerAnnotation(fromAbi: abi)
}

fileprivate fn makeIRawElementProviderSimpleFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return IRawElementProviderSimple(fromAbi: abi)
}

fileprivate fn makeAnchorRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AnchorRequestedEventArgs(fromAbi: abi)
}

fileprivate fn makeAutoSuggestBoxFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AutoSuggestBox(fromAbi: abi)
}

fileprivate fn makeAutoSuggestBoxQuerySubmittedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AutoSuggestBoxQuerySubmittedEventArgs(fromAbi: abi)
}

fileprivate fn makeAutoSuggestBoxSuggestionChosenEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AutoSuggestBoxSuggestionChosenEventArgs(fromAbi: abi)
}

fileprivate fn makeAutoSuggestBoxTextChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AutoSuggestBoxTextChangedEventArgs(fromAbi: abi)
}

fileprivate fn makeBorderFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Border(fromAbi: abi)
}

fileprivate fn makeButtonFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Button(fromAbi: abi)
}

fileprivate fn makeCandidateWindowBoundsChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CandidateWindowBoundsChangedEventArgs(fromAbi: abi)
}

fileprivate fn makeCanvasFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Canvas(fromAbi: abi)
}

fileprivate fn makeCheckBoxFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CheckBox(fromAbi: abi)
}

fileprivate fn makeChoosingGroupHeaderContainerEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ChoosingGroupHeaderContainerEventArgs(fromAbi: abi)
}

fileprivate fn makeChoosingItemContainerEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ChoosingItemContainerEventArgs(fromAbi: abi)
}

fileprivate fn makeColumnDefinitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ColumnDefinition(fromAbi: abi)
}

fileprivate fn makeColumnDefinitionCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ColumnDefinitionCollection(fromAbi: abi)
}

fileprivate fn makeComboBoxFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ComboBox(fromAbi: abi)
}

fileprivate fn makeComboBoxTextSubmittedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ComboBoxTextSubmittedEventArgs(fromAbi: abi)
}

fileprivate fn makeContainerContentChangingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContainerContentChangingEventArgs(fromAbi: abi)
}

fileprivate fn makeContentControlFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContentControl(fromAbi: abi)
}

fileprivate fn makeContentDialogFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContentDialog(fromAbi: abi)
}

fileprivate fn makeContentDialogButtonClickDeferralFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContentDialogButtonClickDeferral(fromAbi: abi)
}

fileprivate fn makeContentDialogButtonClickEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContentDialogButtonClickEventArgs(fromAbi: abi)
}

fileprivate fn makeContentDialogClosedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContentDialogClosedEventArgs(fromAbi: abi)
}

fileprivate fn makeContentDialogClosingDeferralFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContentDialogClosingDeferral(fromAbi: abi)
}

fileprivate fn makeContentDialogClosingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContentDialogClosingEventArgs(fromAbi: abi)
}

fileprivate fn makeContentDialogOpenedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContentDialogOpenedEventArgs(fromAbi: abi)
}

fileprivate fn makeContentPresenterFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContentPresenter(fromAbi: abi)
}

fileprivate fn makeContextMenuEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContextMenuEventArgs(fromAbi: abi)
}

fileprivate fn makeControlFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Control(fromAbi: abi)
}

fileprivate fn makeControlTemplateFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ControlTemplate(fromAbi: abi)
}

fileprivate fn makeCoreWebView2InitializedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CoreWebView2InitializedEventArgs(fromAbi: abi)
}

fileprivate fn makeDataTemplateSelectorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DataTemplateSelector(fromAbi: abi)
}

fileprivate fn makeDragItemsCompletedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DragItemsCompletedEventArgs(fromAbi: abi)
}

fileprivate fn makeDragItemsStartingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DragItemsStartingEventArgs(fromAbi: abi)
}

fileprivate fn makeFlyoutFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Flyout(fromAbi: abi)
}

fileprivate fn makeFlyoutPresenterFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FlyoutPresenter(fromAbi: abi)
}

fileprivate fn makeFocusDisengagedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FocusDisengagedEventArgs(fromAbi: abi)
}

fileprivate fn makeFocusEngagedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FocusEngagedEventArgs(fromAbi: abi)
}

fileprivate fn makeGridFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Grid(fromAbi: abi)
}

fileprivate fn makeGroupStyleFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return GroupStyle(fromAbi: abi)
}

fileprivate fn makeGroupStyleSelectorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return GroupStyleSelector(fromAbi: abi)
}

fileprivate fn makeHyperlinkButtonFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HyperlinkButton(fromAbi: abi)
}

fileprivate fn makeIconElementFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return IconElement(fromAbi: abi)
}

fileprivate fn makeIconSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return IconSource(fromAbi: abi)
}

fileprivate fn makeImageFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Image(fromAbi: abi)
}

fileprivate fn makeInfoBadgeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InfoBadge(fromAbi: abi)
}

fileprivate fn makeInfoBadgeTemplateSettingsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InfoBadgeTemplateSettings(fromAbi: abi)
}

fileprivate fn makeIsTextTrimmedChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return IsTextTrimmedChangedEventArgs(fromAbi: abi)
}

fileprivate fn makeItemClickEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ItemClickEventArgs(fromAbi: abi)
}

fileprivate fn makeItemCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ItemCollection(fromAbi: abi)
}

fileprivate fn makeItemContainerGeneratorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ItemContainerGenerator(fromAbi: abi)
}

fileprivate fn makeItemsControlFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ItemsControl(fromAbi: abi)
}

fileprivate fn makeItemsPanelTemplateFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ItemsPanelTemplate(fromAbi: abi)
}

fileprivate fn makeListViewFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ListView(fromAbi: abi)
}

fileprivate fn makeListViewBaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ListViewBase(fromAbi: abi)
}

fileprivate fn makeListViewBaseHeaderItemFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ListViewBaseHeaderItem(fromAbi: abi)
}

fileprivate fn makeListViewItemFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ListViewItem(fromAbi: abi)
}

fileprivate fn makeMenuBarFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MenuBar(fromAbi: abi)
}

fileprivate fn makeMenuBarItemFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MenuBarItem(fromAbi: abi)
}

fileprivate fn makeMenuFlyoutFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MenuFlyout(fromAbi: abi)
}

fileprivate fn makeMenuFlyoutItemFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MenuFlyoutItem(fromAbi: abi)
}

fileprivate fn makeMenuFlyoutItemBaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MenuFlyoutItemBase(fromAbi: abi)
}

fileprivate fn makeMenuFlyoutSeparatorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MenuFlyoutSeparator(fromAbi: abi)
}

fileprivate fn makeMenuFlyoutSubItemFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MenuFlyoutSubItem(fromAbi: abi)
}

fileprivate fn makeNavigationViewFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return NavigationView(fromAbi: abi)
}

fileprivate fn makeNavigationViewBackRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return NavigationViewBackRequestedEventArgs(fromAbi: abi)
}

fileprivate fn makeNavigationViewDisplayModeChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return NavigationViewDisplayModeChangedEventArgs(fromAbi: abi)
}

fileprivate fn makeNavigationViewItemFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return NavigationViewItem(fromAbi: abi)
}

fileprivate fn makeNavigationViewItemBaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return NavigationViewItemBase(fromAbi: abi)
}

fileprivate fn makeNavigationViewItemCollapsedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return NavigationViewItemCollapsedEventArgs(fromAbi: abi)
}

fileprivate fn makeNavigationViewItemExpandingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return NavigationViewItemExpandingEventArgs(fromAbi: abi)
}

fileprivate fn makeNavigationViewItemInvokedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return NavigationViewItemInvokedEventArgs(fromAbi: abi)
}

fileprivate fn makeNavigationViewPaneClosingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return NavigationViewPaneClosingEventArgs(fromAbi: abi)
}

fileprivate fn makeNavigationViewSelectionChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return NavigationViewSelectionChangedEventArgs(fromAbi: abi)
}

fileprivate fn makeNavigationViewTemplateSettingsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return NavigationViewTemplateSettings(fromAbi: abi)
}

fileprivate fn makePanelFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Panel(fromAbi: abi)
}

fileprivate fn makePasswordBoxFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PasswordBox(fromAbi: abi)
}

fileprivate fn makePasswordBoxPasswordChangingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PasswordBoxPasswordChangingEventArgs(fromAbi: abi)
}

fileprivate fn makeProgressBarFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ProgressBar(fromAbi: abi)
}

fileprivate fn makeProgressBarTemplateSettingsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ProgressBarTemplateSettings(fromAbi: abi)
}

fileprivate fn makeProgressRingFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ProgressRing(fromAbi: abi)
}

fileprivate fn makeProgressRingTemplateSettingsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ProgressRingTemplateSettings(fromAbi: abi)
}

fileprivate fn makeRadioButtonFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RadioButton(fromAbi: abi)
}

fileprivate fn makeRadioButtonsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RadioButtons(fromAbi: abi)
}

fileprivate fn makeRowDefinitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RowDefinition(fromAbi: abi)
}

fileprivate fn makeRowDefinitionCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RowDefinitionCollection(fromAbi: abi)
}

fileprivate fn makeScrollViewFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollView(fromAbi: abi)
}

fileprivate fn makeScrollViewerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollViewer(fromAbi: abi)
}

fileprivate fn makeScrollViewerViewFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollViewerView(fromAbi: abi)
}

fileprivate fn makeScrollViewerViewChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollViewerViewChangedEventArgs(fromAbi: abi)
}

fileprivate fn makeScrollViewerViewChangingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollViewerViewChangingEventArgs(fromAbi: abi)
}

fileprivate fn makeScrollingAnchorRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollingAnchorRequestedEventArgs(fromAbi: abi)
}

fileprivate fn makeScrollingBringingIntoViewEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollingBringingIntoViewEventArgs(fromAbi: abi)
}

fileprivate fn makeScrollingScrollAnimationStartingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollingScrollAnimationStartingEventArgs(fromAbi: abi)
}

fileprivate fn makeScrollingScrollCompletedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollingScrollCompletedEventArgs(fromAbi: abi)
}

fileprivate fn makeScrollingScrollOptionsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollingScrollOptions(fromAbi: abi)
}

fileprivate fn makeScrollingZoomAnimationStartingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollingZoomAnimationStartingEventArgs(fromAbi: abi)
}

fileprivate fn makeScrollingZoomCompletedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollingZoomCompletedEventArgs(fromAbi: abi)
}

fileprivate fn makeScrollingZoomOptionsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollingZoomOptions(fromAbi: abi)
}

fileprivate fn makeSelectionChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SelectionChangedEventArgs(fromAbi: abi)
}

fileprivate fn makeSemanticZoomFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SemanticZoom(fromAbi: abi)
}

fileprivate fn makeSemanticZoomLocationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SemanticZoomLocation(fromAbi: abi)
}

fileprivate fn makeSemanticZoomViewChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SemanticZoomViewChangedEventArgs(fromAbi: abi)
}

fileprivate fn makeSliderFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Slider(fromAbi: abi)
}

fileprivate fn makeSplitViewFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SplitView(fromAbi: abi)
}

fileprivate fn makeSplitViewPaneClosingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SplitViewPaneClosingEventArgs(fromAbi: abi)
}

fileprivate fn makeStyleSelectorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return StyleSelector(fromAbi: abi)
}

fileprivate fn makeTextBlockFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TextBlock(fromAbi: abi)
}

fileprivate fn makeTextBoxFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TextBox(fromAbi: abi)
}

fileprivate fn makeTextBoxBeforeTextChangingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TextBoxBeforeTextChangingEventArgs(fromAbi: abi)
}

fileprivate fn makeTextBoxSelectionChangingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TextBoxSelectionChangingEventArgs(fromAbi: abi)
}

fileprivate fn makeTextBoxTextChangingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TextBoxTextChangingEventArgs(fromAbi: abi)
}

fileprivate fn makeTextChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TextChangedEventArgs(fromAbi: abi)
}

fileprivate fn makeTextCompositionChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TextCompositionChangedEventArgs(fromAbi: abi)
}

fileprivate fn makeTextCompositionEndedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TextCompositionEndedEventArgs(fromAbi: abi)
}

fileprivate fn makeTextCompositionStartedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TextCompositionStartedEventArgs(fromAbi: abi)
}

fileprivate fn makeTextControlCopyingToClipboardEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TextControlCopyingToClipboardEventArgs(fromAbi: abi)
}

fileprivate fn makeTextControlCuttingToClipboardEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TextControlCuttingToClipboardEventArgs(fromAbi: abi)
}

fileprivate fn makeTextControlPasteEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TextControlPasteEventArgs(fromAbi: abi)
}

fileprivate fn makeToggleMenuFlyoutItemFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ToggleMenuFlyoutItem(fromAbi: abi)
}

fileprivate fn makeToggleSwitchFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ToggleSwitch(fromAbi: abi)
}

fileprivate fn makeUIElementCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return UIElementCollection(fromAbi: abi)
}

fileprivate fn makeWebView2From(abi: WindowsFoundation.IInspectable) -> Any {
    return WebView2(fromAbi: abi)
}

fileprivate fn makeXamlControlsResourcesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return XamlControlsResources(fromAbi: abi)
}

fileprivate fn makeButtonBaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ButtonBase(fromAbi: abi)
}

fileprivate fn makeComboBoxTemplateSettingsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ComboBoxTemplateSettings(fromAbi: abi)
}

fileprivate fn makeFlyoutBaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FlyoutBase(fromAbi: abi)
}

fileprivate fn makeFlyoutBaseClosingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FlyoutBaseClosingEventArgs(fromAbi: abi)
}

fileprivate fn makeFlyoutShowOptionsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FlyoutShowOptions(fromAbi: abi)
}

fileprivate fn makeItemsChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ItemsChangedEventArgs(fromAbi: abi)
}

fileprivate fn makeListViewItemTemplateSettingsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ListViewItemTemplateSettings(fromAbi: abi)
}

fileprivate fn makeMenuFlyoutItemTemplateSettingsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MenuFlyoutItemTemplateSettings(fromAbi: abi)
}

fileprivate fn makePopupFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Popup(fromAbi: abi)
}

fileprivate fn makeRangeBaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RangeBase(fromAbi: abi)
}

fileprivate fn makeRangeBaseValueChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RangeBaseValueChangedEventArgs(fromAbi: abi)
}

fileprivate fn makeScrollControllerAddScrollVelocityRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollControllerAddScrollVelocityRequestedEventArgs(fromAbi: abi)
}

fileprivate fn makeScrollControllerPanRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollControllerPanRequestedEventArgs(fromAbi: abi)
}

fileprivate fn makeScrollControllerScrollByRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollControllerScrollByRequestedEventArgs(fromAbi: abi)
}

fileprivate fn makeScrollControllerScrollToRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollControllerScrollToRequestedEventArgs(fromAbi: abi)
}

fileprivate fn makeScrollPresenterFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollPresenter(fromAbi: abi)
}

fileprivate fn makeScrollSnapPointBaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollSnapPointBase(fromAbi: abi)
}

fileprivate fn makeSelectorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Selector(fromAbi: abi)
}

fileprivate fn makeSelectorItemFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SelectorItem(fromAbi: abi)
}

fileprivate fn makeSnapPointBaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SnapPointBase(fromAbi: abi)
}

fileprivate fn makeSplitViewTemplateSettingsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SplitViewTemplateSettings(fromAbi: abi)
}

fileprivate fn makeToggleButtonFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ToggleButton(fromAbi: abi)
}

fileprivate fn makeToggleSwitchTemplateSettingsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ToggleSwitchTemplateSettings(fromAbi: abi)
}

fileprivate fn makeZoomSnapPointBaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ZoomSnapPointBase(fromAbi: abi)
}

fileprivate fn makeBindingFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Binding(fromAbi: abi)
}

fileprivate fn makeBindingBaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BindingBase(fromAbi: abi)
}

fileprivate fn makeBindingExpressionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BindingExpression(fromAbi: abi)
}

fileprivate fn makeBindingExpressionBaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BindingExpressionBase(fromAbi: abi)
}

fileprivate fn makeItemIndexRangeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ItemIndexRange(fromAbi: abi)
}

fileprivate fn makePropertyChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PropertyChangedEventArgs(fromAbi: abi)
}

fileprivate fn makeRelativeSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RelativeSource(fromAbi: abi)
}

fileprivate fn makeHyperlinkFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Hyperlink(fromAbi: abi)
}

fileprivate fn makeHyperlinkClickEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HyperlinkClickEventArgs(fromAbi: abi)
}

fileprivate fn makeInlineFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Inline(fromAbi: abi)
}

fileprivate fn makeInlineCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InlineCollection(fromAbi: abi)
}

fileprivate fn makeRunFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Run(fromAbi: abi)
}

fileprivate fn makeSpanFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Span(fromAbi: abi)
}

fileprivate fn makeTextElementFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TextElement(fromAbi: abi)
}

fileprivate fn makeTextHighlighterFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TextHighlighter(fromAbi: abi)
}

fileprivate fn makeTextPointerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TextPointer(fromAbi: abi)
}

fileprivate fn makeAccessKeyDisplayDismissedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AccessKeyDisplayDismissedEventArgs(fromAbi: abi)
}

fileprivate fn makeAccessKeyDisplayRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AccessKeyDisplayRequestedEventArgs(fromAbi: abi)
}

fileprivate fn makeAccessKeyInvokedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AccessKeyInvokedEventArgs(fromAbi: abi)
}

fileprivate fn makeCharacterReceivedRoutedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CharacterReceivedRoutedEventArgs(fromAbi: abi)
}

fileprivate fn makeContextRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContextRequestedEventArgs(fromAbi: abi)
}

fileprivate fn makeDoubleTappedRoutedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DoubleTappedRoutedEventArgs(fromAbi: abi)
}

fileprivate fn makeFindNextElementOptionsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FindNextElementOptions(fromAbi: abi)
}

fileprivate fn makeFocusManagerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FocusManager(fromAbi: abi)
}

fileprivate fn makeFocusManagerGotFocusEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FocusManagerGotFocusEventArgs(fromAbi: abi)
}

fileprivate fn makeFocusManagerLostFocusEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FocusManagerLostFocusEventArgs(fromAbi: abi)
}

fileprivate fn makeFocusMovementResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FocusMovementResult(fromAbi: abi)
}

fileprivate fn makeGettingFocusEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return GettingFocusEventArgs(fromAbi: abi)
}

fileprivate fn makeHoldingRoutedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HoldingRoutedEventArgs(fromAbi: abi)
}

fileprivate fn makeInertiaExpansionBehaviorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InertiaExpansionBehavior(fromAbi: abi)
}

fileprivate fn makeInertiaRotationBehaviorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InertiaRotationBehavior(fromAbi: abi)
}

fileprivate fn makeInertiaTranslationBehaviorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InertiaTranslationBehavior(fromAbi: abi)
}

fileprivate fn makeInputScopeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InputScope(fromAbi: abi)
}

fileprivate fn makeInputScopeNameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InputScopeName(fromAbi: abi)
}

fileprivate fn makeKeyRoutedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return KeyRoutedEventArgs(fromAbi: abi)
}

fileprivate fn makeKeyboardAcceleratorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return KeyboardAccelerator(fromAbi: abi)
}

fileprivate fn makeKeyboardAcceleratorInvokedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return KeyboardAcceleratorInvokedEventArgs(fromAbi: abi)
}

fileprivate fn makeLosingFocusEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return LosingFocusEventArgs(fromAbi: abi)
}

fileprivate fn makeManipulationCompletedRoutedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ManipulationCompletedRoutedEventArgs(fromAbi: abi)
}

fileprivate fn makeManipulationDeltaRoutedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ManipulationDeltaRoutedEventArgs(fromAbi: abi)
}

fileprivate fn makeManipulationInertiaStartingRoutedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ManipulationInertiaStartingRoutedEventArgs(fromAbi: abi)
}

fileprivate fn makeManipulationPivotFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ManipulationPivot(fromAbi: abi)
}

fileprivate fn makeManipulationStartedRoutedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ManipulationStartedRoutedEventArgs(fromAbi: abi)
}

fileprivate fn makeManipulationStartingRoutedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ManipulationStartingRoutedEventArgs(fromAbi: abi)
}

fileprivate fn makeNoFocusCandidateFoundEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return NoFocusCandidateFoundEventArgs(fromAbi: abi)
}

fileprivate fn makePointerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Pointer(fromAbi: abi)
}

fileprivate fn makePointerRoutedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PointerRoutedEventArgs(fromAbi: abi)
}

fileprivate fn makeProcessKeyboardAcceleratorEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ProcessKeyboardAcceleratorEventArgs(fromAbi: abi)
}

fileprivate fn makeRightTappedRoutedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RightTappedRoutedEventArgs(fromAbi: abi)
}

fileprivate fn makeTappedRoutedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TappedRoutedEventArgs(fromAbi: abi)
}

fileprivate fn makeNotifyCollectionChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return NotifyCollectionChangedEventArgs(fromAbi: abi)
}

fileprivate fn makeAcrylicBrushFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AcrylicBrush(fromAbi: abi)
}

fileprivate fn makeArcSegmentFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ArcSegment(fromAbi: abi)
}

fileprivate fn makeBezierSegmentFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BezierSegment(fromAbi: abi)
}

fileprivate fn makeBrushFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Brush(fromAbi: abi)
}

fileprivate fn makeCacheModeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CacheMode(fromAbi: abi)
}

fileprivate fn makeCompositeTransformFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositeTransform(fromAbi: abi)
}

fileprivate fn makeCompositionTargetFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionTarget(fromAbi: abi)
}

fileprivate fn makeDoubleCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DoubleCollection(fromAbi: abi)
}

fileprivate fn makeEllipseGeometryFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return EllipseGeometry(fromAbi: abi)
}

fileprivate fn makeFontFamilyFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FontFamily(fromAbi: abi)
}

fileprivate fn makeGeneralTransformFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return GeneralTransform(fromAbi: abi)
}

fileprivate fn makeGeometryFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Geometry(fromAbi: abi)
}

fileprivate fn makeGeometryCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return GeometryCollection(fromAbi: abi)
}

fileprivate fn makeGeometryGroupFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return GeometryGroup(fromAbi: abi)
}

fileprivate fn makeGradientBrushFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return GradientBrush(fromAbi: abi)
}

fileprivate fn makeGradientStopFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return GradientStop(fromAbi: abi)
}

fileprivate fn makeGradientStopCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return GradientStopCollection(fromAbi: abi)
}

fileprivate fn makeImageSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ImageSource(fromAbi: abi)
}

fileprivate fn makeLineSegmentFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return LineSegment(fromAbi: abi)
}

fileprivate fn makeLinearGradientBrushFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return LinearGradientBrush(fromAbi: abi)
}

fileprivate fn makeMatrixTransformFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MatrixTransform(fromAbi: abi)
}

fileprivate fn makeMicaBackdropFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MicaBackdrop(fromAbi: abi)
}

fileprivate fn makePathFigureFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PathFigure(fromAbi: abi)
}

fileprivate fn makePathFigureCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PathFigureCollection(fromAbi: abi)
}

fileprivate fn makePathGeometryFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PathGeometry(fromAbi: abi)
}

fileprivate fn makePathSegmentFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PathSegment(fromAbi: abi)
}

fileprivate fn makePathSegmentCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PathSegmentCollection(fromAbi: abi)
}

fileprivate fn makePointCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PointCollection(fromAbi: abi)
}

fileprivate fn makePolyBezierSegmentFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PolyBezierSegment(fromAbi: abi)
}

fileprivate fn makeProjectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Projection(fromAbi: abi)
}

fileprivate fn makeQuadraticBezierSegmentFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return QuadraticBezierSegment(fromAbi: abi)
}

fileprivate fn makeRectangleGeometryFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RectangleGeometry(fromAbi: abi)
}

fileprivate fn makeRenderedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RenderedEventArgs(fromAbi: abi)
}

fileprivate fn makeShadowFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Shadow(fromAbi: abi)
}

fileprivate fn makeSolidColorBrushFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SolidColorBrush(fromAbi: abi)
}

fileprivate fn makeSystemBackdropFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SystemBackdrop(fromAbi: abi)
}

fileprivate fn makeThemeShadowFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ThemeShadow(fromAbi: abi)
}

fileprivate fn makeTransformFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Transform(fromAbi: abi)
}

fileprivate fn makeTransformCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TransformCollection(fromAbi: abi)
}

fileprivate fn makeTransformGroupFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TransformGroup(fromAbi: abi)
}

fileprivate fn makeTranslateTransformFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TranslateTransform(fromAbi: abi)
}

fileprivate fn makeVisualTreeHelperFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return VisualTreeHelper(fromAbi: abi)
}

fileprivate fn makeXamlCompositionBrushBaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return XamlCompositionBrushBase(fromAbi: abi)
}

fileprivate fn makeXamlLightFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return XamlLight(fromAbi: abi)
}

fileprivate fn makeAddDeleteThemeTransitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AddDeleteThemeTransition(fromAbi: abi)
}

fileprivate fn makeBackEaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BackEase(fromAbi: abi)
}

fileprivate fn makeBasicConnectedAnimationConfigurationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BasicConnectedAnimationConfiguration(fromAbi: abi)
}

fileprivate fn makeBeginStoryboardFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BeginStoryboard(fromAbi: abi)
}

fileprivate fn makeBounceEaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BounceEase(fromAbi: abi)
}

fileprivate fn makeCircleEaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CircleEase(fromAbi: abi)
}

fileprivate fn makeColorAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ColorAnimation(fromAbi: abi)
}

fileprivate fn makeColorAnimationUsingKeyFramesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ColorAnimationUsingKeyFrames(fromAbi: abi)
}

fileprivate fn makeColorKeyFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ColorKeyFrame(fromAbi: abi)
}

fileprivate fn makeColorKeyFrameCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ColorKeyFrameCollection(fromAbi: abi)
}

fileprivate fn makeCommonNavigationTransitionInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CommonNavigationTransitionInfo(fromAbi: abi)
}

fileprivate fn makeConnectedAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ConnectedAnimation(fromAbi: abi)
}

fileprivate fn makeConnectedAnimationConfigurationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ConnectedAnimationConfiguration(fromAbi: abi)
}

fileprivate fn makeConnectedAnimationServiceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ConnectedAnimationService(fromAbi: abi)
}

fileprivate fn makeContentThemeTransitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContentThemeTransition(fromAbi: abi)
}

fileprivate fn makeContinuumNavigationTransitionInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContinuumNavigationTransitionInfo(fromAbi: abi)
}

fileprivate fn makeCubicEaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CubicEase(fromAbi: abi)
}

fileprivate fn makeDirectConnectedAnimationConfigurationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DirectConnectedAnimationConfiguration(fromAbi: abi)
}

fileprivate fn makeDiscreteColorKeyFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DiscreteColorKeyFrame(fromAbi: abi)
}

fileprivate fn makeDiscreteDoubleKeyFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DiscreteDoubleKeyFrame(fromAbi: abi)
}

fileprivate fn makeDiscreteObjectKeyFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DiscreteObjectKeyFrame(fromAbi: abi)
}

fileprivate fn makeDiscretePointKeyFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DiscretePointKeyFrame(fromAbi: abi)
}

fileprivate fn makeDoubleAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DoubleAnimation(fromAbi: abi)
}

fileprivate fn makeDoubleAnimationUsingKeyFramesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DoubleAnimationUsingKeyFrames(fromAbi: abi)
}

fileprivate fn makeDoubleKeyFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DoubleKeyFrame(fromAbi: abi)
}

fileprivate fn makeDoubleKeyFrameCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DoubleKeyFrameCollection(fromAbi: abi)
}

fileprivate fn makeDragItemThemeAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DragItemThemeAnimation(fromAbi: abi)
}

fileprivate fn makeDragOverThemeAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DragOverThemeAnimation(fromAbi: abi)
}

fileprivate fn makeDrillInNavigationTransitionInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DrillInNavigationTransitionInfo(fromAbi: abi)
}

fileprivate fn makeDrillInThemeAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DrillInThemeAnimation(fromAbi: abi)
}

fileprivate fn makeDrillOutThemeAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DrillOutThemeAnimation(fromAbi: abi)
}

fileprivate fn makeDropTargetItemThemeAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DropTargetItemThemeAnimation(fromAbi: abi)
}

fileprivate fn makeEasingColorKeyFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return EasingColorKeyFrame(fromAbi: abi)
}

fileprivate fn makeEasingDoubleKeyFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return EasingDoubleKeyFrame(fromAbi: abi)
}

fileprivate fn makeEasingFunctionBaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return EasingFunctionBase(fromAbi: abi)
}

fileprivate fn makeEasingPointKeyFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return EasingPointKeyFrame(fromAbi: abi)
}

fileprivate fn makeEdgeUIThemeTransitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return EdgeUIThemeTransition(fromAbi: abi)
}

fileprivate fn makeElasticEaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ElasticEase(fromAbi: abi)
}

fileprivate fn makeEntranceNavigationTransitionInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return EntranceNavigationTransitionInfo(fromAbi: abi)
}

fileprivate fn makeEntranceThemeTransitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return EntranceThemeTransition(fromAbi: abi)
}

fileprivate fn makeExponentialEaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ExponentialEase(fromAbi: abi)
}

fileprivate fn makeFadeInThemeAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FadeInThemeAnimation(fromAbi: abi)
}

fileprivate fn makeFadeOutThemeAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FadeOutThemeAnimation(fromAbi: abi)
}

fileprivate fn makeGravityConnectedAnimationConfigurationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return GravityConnectedAnimationConfiguration(fromAbi: abi)
}

fileprivate fn makeKeySplineFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return KeySpline(fromAbi: abi)
}

fileprivate fn makeKeyTimeHelperFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return KeyTimeHelper(fromAbi: abi)
}

fileprivate fn makeLinearColorKeyFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return LinearColorKeyFrame(fromAbi: abi)
}

fileprivate fn makeLinearDoubleKeyFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return LinearDoubleKeyFrame(fromAbi: abi)
}

fileprivate fn makeLinearPointKeyFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return LinearPointKeyFrame(fromAbi: abi)
}

fileprivate fn makeNavigationThemeTransitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return NavigationThemeTransition(fromAbi: abi)
}

fileprivate fn makeNavigationTransitionInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return NavigationTransitionInfo(fromAbi: abi)
}

fileprivate fn makeObjectAnimationUsingKeyFramesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ObjectAnimationUsingKeyFrames(fromAbi: abi)
}

fileprivate fn makeObjectKeyFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ObjectKeyFrame(fromAbi: abi)
}

fileprivate fn makeObjectKeyFrameCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ObjectKeyFrameCollection(fromAbi: abi)
}

fileprivate fn makePaneThemeTransitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PaneThemeTransition(fromAbi: abi)
}

fileprivate fn makePointAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PointAnimation(fromAbi: abi)
}

fileprivate fn makePointAnimationUsingKeyFramesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PointAnimationUsingKeyFrames(fromAbi: abi)
}

fileprivate fn makePointKeyFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PointKeyFrame(fromAbi: abi)
}

fileprivate fn makePointKeyFrameCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PointKeyFrameCollection(fromAbi: abi)
}

fileprivate fn makePointerDownThemeAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PointerDownThemeAnimation(fromAbi: abi)
}

fileprivate fn makePointerUpThemeAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PointerUpThemeAnimation(fromAbi: abi)
}

fileprivate fn makePopInThemeAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PopInThemeAnimation(fromAbi: abi)
}

fileprivate fn makePopOutThemeAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PopOutThemeAnimation(fromAbi: abi)
}

fileprivate fn makePopupThemeTransitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PopupThemeTransition(fromAbi: abi)
}

fileprivate fn makePowerEaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PowerEase(fromAbi: abi)
}

fileprivate fn makeQuadraticEaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return QuadraticEase(fromAbi: abi)
}

fileprivate fn makeQuarticEaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return QuarticEase(fromAbi: abi)
}

fileprivate fn makeQuinticEaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return QuinticEase(fromAbi: abi)
}

fileprivate fn makeReorderThemeTransitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ReorderThemeTransition(fromAbi: abi)
}

fileprivate fn makeRepeatBehaviorHelperFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RepeatBehaviorHelper(fromAbi: abi)
}

fileprivate fn makeRepositionThemeAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RepositionThemeAnimation(fromAbi: abi)
}

fileprivate fn makeRepositionThemeTransitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RepositionThemeTransition(fromAbi: abi)
}

fileprivate fn makeSineEaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SineEase(fromAbi: abi)
}

fileprivate fn makeSlideNavigationTransitionInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SlideNavigationTransitionInfo(fromAbi: abi)
}

fileprivate fn makeSplineColorKeyFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SplineColorKeyFrame(fromAbi: abi)
}

fileprivate fn makeSplineDoubleKeyFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SplineDoubleKeyFrame(fromAbi: abi)
}

fileprivate fn makeSplinePointKeyFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SplinePointKeyFrame(fromAbi: abi)
}

fileprivate fn makeSplitCloseThemeAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SplitCloseThemeAnimation(fromAbi: abi)
}

fileprivate fn makeSplitOpenThemeAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SplitOpenThemeAnimation(fromAbi: abi)
}

fileprivate fn makeStoryboardFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Storyboard(fromAbi: abi)
}

fileprivate fn makeSuppressNavigationTransitionInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SuppressNavigationTransitionInfo(fromAbi: abi)
}

fileprivate fn makeSwipeBackThemeAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SwipeBackThemeAnimation(fromAbi: abi)
}

fileprivate fn makeSwipeHintThemeAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SwipeHintThemeAnimation(fromAbi: abi)
}

fileprivate fn makeTimelineFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Timeline(fromAbi: abi)
}

fileprivate fn makeTimelineCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TimelineCollection(fromAbi: abi)
}

fileprivate fn makeTransitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Transition(fromAbi: abi)
}

fileprivate fn makeTransitionCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TransitionCollection(fromAbi: abi)
}

fileprivate fn makeBitmapImageFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BitmapImage(fromAbi: abi)
}

fileprivate fn makeBitmapSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BitmapSource(fromAbi: abi)
}

fileprivate fn makeDownloadProgressEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DownloadProgressEventArgs(fromAbi: abi)
}

fileprivate fn makeRenderTargetBitmapFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RenderTargetBitmap(fromAbi: abi)
}

fileprivate fn makeSoftwareBitmapSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SoftwareBitmapSource(fromAbi: abi)
}

fileprivate fn makeSurfaceImageSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SurfaceImageSource(fromAbi: abi)
}

fileprivate fn makeSvgImageSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SvgImageSource(fromAbi: abi)
}

fileprivate fn makeSvgImageSourceFailedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SvgImageSourceFailedEventArgs(fromAbi: abi)
}

fileprivate fn makeSvgImageSourceOpenedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SvgImageSourceOpenedEventArgs(fromAbi: abi)
}

fileprivate fn makeVirtualSurfaceImageSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return VirtualSurfaceImageSource(fromAbi: abi)
}

fileprivate fn makeWriteableBitmapFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return WriteableBitmap(fromAbi: abi)
}

fileprivate fn makeXamlRenderingBackgroundTaskFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return XamlRenderingBackgroundTask(fromAbi: abi)
}

fileprivate fn makeTransform3DFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Transform3D(fromAbi: abi)
}

fileprivate fn makeEllipseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Ellipse(fromAbi: abi)
}

fileprivate fn makePathFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Path(fromAbi: abi)
}

fileprivate fn makeRectangleFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Rectangle(fromAbi: abi)
}

fileprivate fn makeShapeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Shape(fromAbi: abi)
}

fileprivate fn makeXamlControlsXamlMetaDataProviderFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return XamlControlsXamlMetaDataProvider(fromAbi: abi)
}

@_spi(__MakeFromAbi_DoNotImport)
public class __MakeFromAbi: MakeFromAbi {
    public static fn from(typeName: String, abi: WindowsFoundation.IInspectable) -> Any? {
        switch typeName {
            case "IDataTemplateExtension": return makeIDataTemplateExtensionFrom(abi: abi)
            case "IElementFactory": return makeIElementFactoryFrom(abi: abi)
            case "IItemContainerMapping": return makeIItemContainerMappingFrom(abi: abi)
            case "IKeyIndexMapping": return makeIKeyIndexMappingFrom(abi: abi)
            case "IScrollAnchorProvider": return makeIScrollAnchorProviderFrom(abi: abi)
            case "ISemanticZoomInformation": return makeISemanticZoomInformationFrom(abi: abi)
            case "IScrollController": return makeIScrollControllerFrom(abi: abi)
            case "IScrollControllerPanningInfo": return makeIScrollControllerPanningInfoFrom(abi: abi)
            case "INotifyPropertyChanged": return makeINotifyPropertyChangedFrom(abi: abi)
            case "IValueConverter": return makeIValueConverterFrom(abi: abi)
            case "ICommand": return makeICommandFrom(abi: abi)
            case "IBindableIterable": return makeIBindableIterableFrom(abi: abi)
            case "IBindableIterator": return makeIBindableIteratorFrom(abi: abi)
            case "IBindableVector": return makeIBindableVectorFrom(abi: abi)
            case "IBindableVectorView": return makeIBindableVectorViewFrom(abi: abi)
            case "INotifyCollectionChanged": return makeINotifyCollectionChangedFrom(abi: abi)
            case "IXamlMember": return makeIXamlMemberFrom(abi: abi)
            case "IXamlMetadataProvider": return makeIXamlMetadataProviderFrom(abi: abi)
            case "IXamlType": return makeIXamlTypeFrom(abi: abi)
            case "Application": return makeApplicationFrom(abi: abi)
            case "ApplicationInitializationCallbackParams": return makeApplicationInitializationCallbackParamsFrom(abi: abi)
            case "BindingFailedEventArgs": return makeBindingFailedEventArgsFrom(abi: abi)
            case "BringIntoViewOptions": return makeBringIntoViewOptionsFrom(abi: abi)
            case "BringIntoViewRequestedEventArgs": return makeBringIntoViewRequestedEventArgsFrom(abi: abi)
            case "BrushTransition": return makeBrushTransitionFrom(abi: abi)
            case "DataContextChangedEventArgs": return makeDataContextChangedEventArgsFrom(abi: abi)
            case "DataTemplate": return makeDataTemplateFrom(abi: abi)
            case "DebugSettings": return makeDebugSettingsFrom(abi: abi)
            case "DependencyObject": return makeDependencyObjectFrom(abi: abi)
            case "DependencyProperty": return makeDependencyPropertyFrom(abi: abi)
            case "DependencyPropertyChangedEventArgs": return makeDependencyPropertyChangedEventArgsFrom(abi: abi)
            case "DragEventArgs": return makeDragEventArgsFrom(abi: abi)
            case "DragOperationDeferral": return makeDragOperationDeferralFrom(abi: abi)
            case "DragStartingEventArgs": return makeDragStartingEventArgsFrom(abi: abi)
            case "DragUI": return makeDragUIFrom(abi: abi)
            case "DragUIOverride": return makeDragUIOverrideFrom(abi: abi)
            case "DropCompletedEventArgs": return makeDropCompletedEventArgsFrom(abi: abi)
            case "EffectiveViewportChangedEventArgs": return makeEffectiveViewportChangedEventArgsFrom(abi: abi)
            case "ElementFactoryGetArgs": return makeElementFactoryGetArgsFrom(abi: abi)
            case "ElementFactoryRecycleArgs": return makeElementFactoryRecycleArgsFrom(abi: abi)
            case "ExceptionRoutedEventArgs": return makeExceptionRoutedEventArgsFrom(abi: abi)
            case "FrameworkElement": return makeFrameworkElementFrom(abi: abi)
            case "FrameworkTemplate": return makeFrameworkTemplateFrom(abi: abi)
            case "LaunchActivatedEventArgs": return makeLaunchActivatedEventArgsFrom(abi: abi)
            case "PropertyMetadata": return makePropertyMetadataFrom(abi: abi)
            case "PropertyPath": return makePropertyPathFrom(abi: abi)
            case "ResourceDictionary": return makeResourceDictionaryFrom(abi: abi)
            case "ResourceManagerRequestedEventArgs": return makeResourceManagerRequestedEventArgsFrom(abi: abi)
            case "RoutedEvent": return makeRoutedEventFrom(abi: abi)
            case "RoutedEventArgs": return makeRoutedEventArgsFrom(abi: abi)
            case "ScalarTransition": return makeScalarTransitionFrom(abi: abi)
            case "Setter": return makeSetterFrom(abi: abi)
            case "SetterBase": return makeSetterBaseFrom(abi: abi)
            case "SetterBaseCollection": return makeSetterBaseCollectionFrom(abi: abi)
            case "SizeChangedEventArgs": return makeSizeChangedEventArgsFrom(abi: abi)
            case "Style": return makeStyleFrom(abi: abi)
            case "TargetPropertyPath": return makeTargetPropertyPathFrom(abi: abi)
            case "TriggerAction": return makeTriggerActionFrom(abi: abi)
            case "TriggerBase": return makeTriggerBaseFrom(abi: abi)
            case "TriggerCollection": return makeTriggerCollectionFrom(abi: abi)
            case "UIElement": return makeUIElementFrom(abi: abi)
            case "UIElementWeakCollection": return makeUIElementWeakCollectionFrom(abi: abi)
            case "UnhandledExceptionEventArgs": return makeUnhandledExceptionEventArgsFrom(abi: abi)
            case "Vector3Transition": return makeVector3TransitionFrom(abi: abi)
            case "Window": return makeWindowFrom(abi: abi)
            case "WindowActivatedEventArgs": return makeWindowActivatedEventArgsFrom(abi: abi)
            case "WindowEventArgs": return makeWindowEventArgsFrom(abi: abi)
            case "WindowSizeChangedEventArgs": return makeWindowSizeChangedEventArgsFrom(abi: abi)
            case "WindowVisibilityChangedEventArgs": return makeWindowVisibilityChangedEventArgsFrom(abi: abi)
            case "XamlResourceReferenceFailedEventArgs": return makeXamlResourceReferenceFailedEventArgsFrom(abi: abi)
            case "XamlRoot": return makeXamlRootFrom(abi: abi)
            case "XamlRootChangedEventArgs": return makeXamlRootChangedEventArgsFrom(abi: abi)
            case "AutomationAnnotation": return makeAutomationAnnotationFrom(abi: abi)
            case "AutomationProperties": return makeAutomationPropertiesFrom(abi: abi)
            case "AutomationProperty": return makeAutomationPropertyFrom(abi: abi)
            case "AutomationPeer": return makeAutomationPeerFrom(abi: abi)
            case "AutomationPeerAnnotation": return makeAutomationPeerAnnotationFrom(abi: abi)
            case "IRawElementProviderSimple": return makeIRawElementProviderSimpleFrom(abi: abi)
            case "AnchorRequestedEventArgs": return makeAnchorRequestedEventArgsFrom(abi: abi)
            case "AutoSuggestBox": return makeAutoSuggestBoxFrom(abi: abi)
            case "AutoSuggestBoxQuerySubmittedEventArgs": return makeAutoSuggestBoxQuerySubmittedEventArgsFrom(abi: abi)
            case "AutoSuggestBoxSuggestionChosenEventArgs": return makeAutoSuggestBoxSuggestionChosenEventArgsFrom(abi: abi)
            case "AutoSuggestBoxTextChangedEventArgs": return makeAutoSuggestBoxTextChangedEventArgsFrom(abi: abi)
            case "Border": return makeBorderFrom(abi: abi)
            case "Button": return makeButtonFrom(abi: abi)
            case "CandidateWindowBoundsChangedEventArgs": return makeCandidateWindowBoundsChangedEventArgsFrom(abi: abi)
            case "Canvas": return makeCanvasFrom(abi: abi)
            case "CheckBox": return makeCheckBoxFrom(abi: abi)
            case "ChoosingGroupHeaderContainerEventArgs": return makeChoosingGroupHeaderContainerEventArgsFrom(abi: abi)
            case "ChoosingItemContainerEventArgs": return makeChoosingItemContainerEventArgsFrom(abi: abi)
            case "ColumnDefinition": return makeColumnDefinitionFrom(abi: abi)
            case "ColumnDefinitionCollection": return makeColumnDefinitionCollectionFrom(abi: abi)
            case "ComboBox": return makeComboBoxFrom(abi: abi)
            case "ComboBoxTextSubmittedEventArgs": return makeComboBoxTextSubmittedEventArgsFrom(abi: abi)
            case "ContainerContentChangingEventArgs": return makeContainerContentChangingEventArgsFrom(abi: abi)
            case "ContentControl": return makeContentControlFrom(abi: abi)
            case "ContentDialog": return makeContentDialogFrom(abi: abi)
            case "ContentDialogButtonClickDeferral": return makeContentDialogButtonClickDeferralFrom(abi: abi)
            case "ContentDialogButtonClickEventArgs": return makeContentDialogButtonClickEventArgsFrom(abi: abi)
            case "ContentDialogClosedEventArgs": return makeContentDialogClosedEventArgsFrom(abi: abi)
            case "ContentDialogClosingDeferral": return makeContentDialogClosingDeferralFrom(abi: abi)
            case "ContentDialogClosingEventArgs": return makeContentDialogClosingEventArgsFrom(abi: abi)
            case "ContentDialogOpenedEventArgs": return makeContentDialogOpenedEventArgsFrom(abi: abi)
            case "ContentPresenter": return makeContentPresenterFrom(abi: abi)
            case "ContextMenuEventArgs": return makeContextMenuEventArgsFrom(abi: abi)
            case "Control": return makeControlFrom(abi: abi)
            case "ControlTemplate": return makeControlTemplateFrom(abi: abi)
            case "CoreWebView2InitializedEventArgs": return makeCoreWebView2InitializedEventArgsFrom(abi: abi)
            case "DataTemplateSelector": return makeDataTemplateSelectorFrom(abi: abi)
            case "DragItemsCompletedEventArgs": return makeDragItemsCompletedEventArgsFrom(abi: abi)
            case "DragItemsStartingEventArgs": return makeDragItemsStartingEventArgsFrom(abi: abi)
            case "Flyout": return makeFlyoutFrom(abi: abi)
            case "FlyoutPresenter": return makeFlyoutPresenterFrom(abi: abi)
            case "FocusDisengagedEventArgs": return makeFocusDisengagedEventArgsFrom(abi: abi)
            case "FocusEngagedEventArgs": return makeFocusEngagedEventArgsFrom(abi: abi)
            case "Grid": return makeGridFrom(abi: abi)
            case "GroupStyle": return makeGroupStyleFrom(abi: abi)
            case "GroupStyleSelector": return makeGroupStyleSelectorFrom(abi: abi)
            case "HyperlinkButton": return makeHyperlinkButtonFrom(abi: abi)
            case "IconElement": return makeIconElementFrom(abi: abi)
            case "IconSource": return makeIconSourceFrom(abi: abi)
            case "Image": return makeImageFrom(abi: abi)
            case "InfoBadge": return makeInfoBadgeFrom(abi: abi)
            case "InfoBadgeTemplateSettings": return makeInfoBadgeTemplateSettingsFrom(abi: abi)
            case "IsTextTrimmedChangedEventArgs": return makeIsTextTrimmedChangedEventArgsFrom(abi: abi)
            case "ItemClickEventArgs": return makeItemClickEventArgsFrom(abi: abi)
            case "ItemCollection": return makeItemCollectionFrom(abi: abi)
            case "ItemContainerGenerator": return makeItemContainerGeneratorFrom(abi: abi)
            case "ItemsControl": return makeItemsControlFrom(abi: abi)
            case "ItemsPanelTemplate": return makeItemsPanelTemplateFrom(abi: abi)
            case "ListView": return makeListViewFrom(abi: abi)
            case "ListViewBase": return makeListViewBaseFrom(abi: abi)
            case "ListViewBaseHeaderItem": return makeListViewBaseHeaderItemFrom(abi: abi)
            case "ListViewItem": return makeListViewItemFrom(abi: abi)
            case "MenuBar": return makeMenuBarFrom(abi: abi)
            case "MenuBarItem": return makeMenuBarItemFrom(abi: abi)
            case "MenuFlyout": return makeMenuFlyoutFrom(abi: abi)
            case "MenuFlyoutItem": return makeMenuFlyoutItemFrom(abi: abi)
            case "MenuFlyoutItemBase": return makeMenuFlyoutItemBaseFrom(abi: abi)
            case "MenuFlyoutSeparator": return makeMenuFlyoutSeparatorFrom(abi: abi)
            case "MenuFlyoutSubItem": return makeMenuFlyoutSubItemFrom(abi: abi)
            case "NavigationView": return makeNavigationViewFrom(abi: abi)
            case "NavigationViewBackRequestedEventArgs": return makeNavigationViewBackRequestedEventArgsFrom(abi: abi)
            case "NavigationViewDisplayModeChangedEventArgs": return makeNavigationViewDisplayModeChangedEventArgsFrom(abi: abi)
            case "NavigationViewItem": return makeNavigationViewItemFrom(abi: abi)
            case "NavigationViewItemBase": return makeNavigationViewItemBaseFrom(abi: abi)
            case "NavigationViewItemCollapsedEventArgs": return makeNavigationViewItemCollapsedEventArgsFrom(abi: abi)
            case "NavigationViewItemExpandingEventArgs": return makeNavigationViewItemExpandingEventArgsFrom(abi: abi)
            case "NavigationViewItemInvokedEventArgs": return makeNavigationViewItemInvokedEventArgsFrom(abi: abi)
            case "NavigationViewPaneClosingEventArgs": return makeNavigationViewPaneClosingEventArgsFrom(abi: abi)
            case "NavigationViewSelectionChangedEventArgs": return makeNavigationViewSelectionChangedEventArgsFrom(abi: abi)
            case "NavigationViewTemplateSettings": return makeNavigationViewTemplateSettingsFrom(abi: abi)
            case "Panel": return makePanelFrom(abi: abi)
            case "PasswordBox": return makePasswordBoxFrom(abi: abi)
            case "PasswordBoxPasswordChangingEventArgs": return makePasswordBoxPasswordChangingEventArgsFrom(abi: abi)
            case "ProgressBar": return makeProgressBarFrom(abi: abi)
            case "ProgressBarTemplateSettings": return makeProgressBarTemplateSettingsFrom(abi: abi)
            case "ProgressRing": return makeProgressRingFrom(abi: abi)
            case "ProgressRingTemplateSettings": return makeProgressRingTemplateSettingsFrom(abi: abi)
            case "RadioButton": return makeRadioButtonFrom(abi: abi)
            case "RadioButtons": return makeRadioButtonsFrom(abi: abi)
            case "RowDefinition": return makeRowDefinitionFrom(abi: abi)
            case "RowDefinitionCollection": return makeRowDefinitionCollectionFrom(abi: abi)
            case "ScrollView": return makeScrollViewFrom(abi: abi)
            case "ScrollViewer": return makeScrollViewerFrom(abi: abi)
            case "ScrollViewerView": return makeScrollViewerViewFrom(abi: abi)
            case "ScrollViewerViewChangedEventArgs": return makeScrollViewerViewChangedEventArgsFrom(abi: abi)
            case "ScrollViewerViewChangingEventArgs": return makeScrollViewerViewChangingEventArgsFrom(abi: abi)
            case "ScrollingAnchorRequestedEventArgs": return makeScrollingAnchorRequestedEventArgsFrom(abi: abi)
            case "ScrollingBringingIntoViewEventArgs": return makeScrollingBringingIntoViewEventArgsFrom(abi: abi)
            case "ScrollingScrollAnimationStartingEventArgs": return makeScrollingScrollAnimationStartingEventArgsFrom(abi: abi)
            case "ScrollingScrollCompletedEventArgs": return makeScrollingScrollCompletedEventArgsFrom(abi: abi)
            case "ScrollingScrollOptions": return makeScrollingScrollOptionsFrom(abi: abi)
            case "ScrollingZoomAnimationStartingEventArgs": return makeScrollingZoomAnimationStartingEventArgsFrom(abi: abi)
            case "ScrollingZoomCompletedEventArgs": return makeScrollingZoomCompletedEventArgsFrom(abi: abi)
            case "ScrollingZoomOptions": return makeScrollingZoomOptionsFrom(abi: abi)
            case "SelectionChangedEventArgs": return makeSelectionChangedEventArgsFrom(abi: abi)
            case "SemanticZoom": return makeSemanticZoomFrom(abi: abi)
            case "SemanticZoomLocation": return makeSemanticZoomLocationFrom(abi: abi)
            case "SemanticZoomViewChangedEventArgs": return makeSemanticZoomViewChangedEventArgsFrom(abi: abi)
            case "Slider": return makeSliderFrom(abi: abi)
            case "SplitView": return makeSplitViewFrom(abi: abi)
            case "SplitViewPaneClosingEventArgs": return makeSplitViewPaneClosingEventArgsFrom(abi: abi)
            case "StyleSelector": return makeStyleSelectorFrom(abi: abi)
            case "TextBlock": return makeTextBlockFrom(abi: abi)
            case "TextBox": return makeTextBoxFrom(abi: abi)
            case "TextBoxBeforeTextChangingEventArgs": return makeTextBoxBeforeTextChangingEventArgsFrom(abi: abi)
            case "TextBoxSelectionChangingEventArgs": return makeTextBoxSelectionChangingEventArgsFrom(abi: abi)
            case "TextBoxTextChangingEventArgs": return makeTextBoxTextChangingEventArgsFrom(abi: abi)
            case "TextChangedEventArgs": return makeTextChangedEventArgsFrom(abi: abi)
            case "TextCompositionChangedEventArgs": return makeTextCompositionChangedEventArgsFrom(abi: abi)
            case "TextCompositionEndedEventArgs": return makeTextCompositionEndedEventArgsFrom(abi: abi)
            case "TextCompositionStartedEventArgs": return makeTextCompositionStartedEventArgsFrom(abi: abi)
            case "TextControlCopyingToClipboardEventArgs": return makeTextControlCopyingToClipboardEventArgsFrom(abi: abi)
            case "TextControlCuttingToClipboardEventArgs": return makeTextControlCuttingToClipboardEventArgsFrom(abi: abi)
            case "TextControlPasteEventArgs": return makeTextControlPasteEventArgsFrom(abi: abi)
            case "ToggleMenuFlyoutItem": return makeToggleMenuFlyoutItemFrom(abi: abi)
            case "ToggleSwitch": return makeToggleSwitchFrom(abi: abi)
            case "UIElementCollection": return makeUIElementCollectionFrom(abi: abi)
            case "WebView2": return makeWebView2From(abi: abi)
            case "XamlControlsResources": return makeXamlControlsResourcesFrom(abi: abi)
            case "ButtonBase": return makeButtonBaseFrom(abi: abi)
            case "ComboBoxTemplateSettings": return makeComboBoxTemplateSettingsFrom(abi: abi)
            case "FlyoutBase": return makeFlyoutBaseFrom(abi: abi)
            case "FlyoutBaseClosingEventArgs": return makeFlyoutBaseClosingEventArgsFrom(abi: abi)
            case "FlyoutShowOptions": return makeFlyoutShowOptionsFrom(abi: abi)
            case "ItemsChangedEventArgs": return makeItemsChangedEventArgsFrom(abi: abi)
            case "ListViewItemTemplateSettings": return makeListViewItemTemplateSettingsFrom(abi: abi)
            case "MenuFlyoutItemTemplateSettings": return makeMenuFlyoutItemTemplateSettingsFrom(abi: abi)
            case "Popup": return makePopupFrom(abi: abi)
            case "RangeBase": return makeRangeBaseFrom(abi: abi)
            case "RangeBaseValueChangedEventArgs": return makeRangeBaseValueChangedEventArgsFrom(abi: abi)
            case "ScrollControllerAddScrollVelocityRequestedEventArgs": return makeScrollControllerAddScrollVelocityRequestedEventArgsFrom(abi: abi)
            case "ScrollControllerPanRequestedEventArgs": return makeScrollControllerPanRequestedEventArgsFrom(abi: abi)
            case "ScrollControllerScrollByRequestedEventArgs": return makeScrollControllerScrollByRequestedEventArgsFrom(abi: abi)
            case "ScrollControllerScrollToRequestedEventArgs": return makeScrollControllerScrollToRequestedEventArgsFrom(abi: abi)
            case "ScrollPresenter": return makeScrollPresenterFrom(abi: abi)
            case "ScrollSnapPointBase": return makeScrollSnapPointBaseFrom(abi: abi)
            case "Selector": return makeSelectorFrom(abi: abi)
            case "SelectorItem": return makeSelectorItemFrom(abi: abi)
            case "SnapPointBase": return makeSnapPointBaseFrom(abi: abi)
            case "SplitViewTemplateSettings": return makeSplitViewTemplateSettingsFrom(abi: abi)
            case "ToggleButton": return makeToggleButtonFrom(abi: abi)
            case "ToggleSwitchTemplateSettings": return makeToggleSwitchTemplateSettingsFrom(abi: abi)
            case "ZoomSnapPointBase": return makeZoomSnapPointBaseFrom(abi: abi)
            case "Binding": return makeBindingFrom(abi: abi)
            case "BindingBase": return makeBindingBaseFrom(abi: abi)
            case "BindingExpression": return makeBindingExpressionFrom(abi: abi)
            case "BindingExpressionBase": return makeBindingExpressionBaseFrom(abi: abi)
            case "ItemIndexRange": return makeItemIndexRangeFrom(abi: abi)
            case "PropertyChangedEventArgs": return makePropertyChangedEventArgsFrom(abi: abi)
            case "RelativeSource": return makeRelativeSourceFrom(abi: abi)
            case "Hyperlink": return makeHyperlinkFrom(abi: abi)
            case "HyperlinkClickEventArgs": return makeHyperlinkClickEventArgsFrom(abi: abi)
            case "Inline": return makeInlineFrom(abi: abi)
            case "InlineCollection": return makeInlineCollectionFrom(abi: abi)
            case "Run": return makeRunFrom(abi: abi)
            case "Span": return makeSpanFrom(abi: abi)
            case "TextElement": return makeTextElementFrom(abi: abi)
            case "TextHighlighter": return makeTextHighlighterFrom(abi: abi)
            case "TextPointer": return makeTextPointerFrom(abi: abi)
            case "AccessKeyDisplayDismissedEventArgs": return makeAccessKeyDisplayDismissedEventArgsFrom(abi: abi)
            case "AccessKeyDisplayRequestedEventArgs": return makeAccessKeyDisplayRequestedEventArgsFrom(abi: abi)
            case "AccessKeyInvokedEventArgs": return makeAccessKeyInvokedEventArgsFrom(abi: abi)
            case "CharacterReceivedRoutedEventArgs": return makeCharacterReceivedRoutedEventArgsFrom(abi: abi)
            case "ContextRequestedEventArgs": return makeContextRequestedEventArgsFrom(abi: abi)
            case "DoubleTappedRoutedEventArgs": return makeDoubleTappedRoutedEventArgsFrom(abi: abi)
            case "FindNextElementOptions": return makeFindNextElementOptionsFrom(abi: abi)
            case "FocusManager": return makeFocusManagerFrom(abi: abi)
            case "FocusManagerGotFocusEventArgs": return makeFocusManagerGotFocusEventArgsFrom(abi: abi)
            case "FocusManagerLostFocusEventArgs": return makeFocusManagerLostFocusEventArgsFrom(abi: abi)
            case "FocusMovementResult": return makeFocusMovementResultFrom(abi: abi)
            case "GettingFocusEventArgs": return makeGettingFocusEventArgsFrom(abi: abi)
            case "HoldingRoutedEventArgs": return makeHoldingRoutedEventArgsFrom(abi: abi)
            case "InertiaExpansionBehavior": return makeInertiaExpansionBehaviorFrom(abi: abi)
            case "InertiaRotationBehavior": return makeInertiaRotationBehaviorFrom(abi: abi)
            case "InertiaTranslationBehavior": return makeInertiaTranslationBehaviorFrom(abi: abi)
            case "InputScope": return makeInputScopeFrom(abi: abi)
            case "InputScopeName": return makeInputScopeNameFrom(abi: abi)
            case "KeyRoutedEventArgs": return makeKeyRoutedEventArgsFrom(abi: abi)
            case "KeyboardAccelerator": return makeKeyboardAcceleratorFrom(abi: abi)
            case "KeyboardAcceleratorInvokedEventArgs": return makeKeyboardAcceleratorInvokedEventArgsFrom(abi: abi)
            case "LosingFocusEventArgs": return makeLosingFocusEventArgsFrom(abi: abi)
            case "ManipulationCompletedRoutedEventArgs": return makeManipulationCompletedRoutedEventArgsFrom(abi: abi)
            case "ManipulationDeltaRoutedEventArgs": return makeManipulationDeltaRoutedEventArgsFrom(abi: abi)
            case "ManipulationInertiaStartingRoutedEventArgs": return makeManipulationInertiaStartingRoutedEventArgsFrom(abi: abi)
            case "ManipulationPivot": return makeManipulationPivotFrom(abi: abi)
            case "ManipulationStartedRoutedEventArgs": return makeManipulationStartedRoutedEventArgsFrom(abi: abi)
            case "ManipulationStartingRoutedEventArgs": return makeManipulationStartingRoutedEventArgsFrom(abi: abi)
            case "NoFocusCandidateFoundEventArgs": return makeNoFocusCandidateFoundEventArgsFrom(abi: abi)
            case "Pointer": return makePointerFrom(abi: abi)
            case "PointerRoutedEventArgs": return makePointerRoutedEventArgsFrom(abi: abi)
            case "ProcessKeyboardAcceleratorEventArgs": return makeProcessKeyboardAcceleratorEventArgsFrom(abi: abi)
            case "RightTappedRoutedEventArgs": return makeRightTappedRoutedEventArgsFrom(abi: abi)
            case "TappedRoutedEventArgs": return makeTappedRoutedEventArgsFrom(abi: abi)
            case "NotifyCollectionChangedEventArgs": return makeNotifyCollectionChangedEventArgsFrom(abi: abi)
            case "AcrylicBrush": return makeAcrylicBrushFrom(abi: abi)
            case "ArcSegment": return makeArcSegmentFrom(abi: abi)
            case "BezierSegment": return makeBezierSegmentFrom(abi: abi)
            case "Brush": return makeBrushFrom(abi: abi)
            case "CacheMode": return makeCacheModeFrom(abi: abi)
            case "CompositeTransform": return makeCompositeTransformFrom(abi: abi)
            case "CompositionTarget": return makeCompositionTargetFrom(abi: abi)
            case "DoubleCollection": return makeDoubleCollectionFrom(abi: abi)
            case "EllipseGeometry": return makeEllipseGeometryFrom(abi: abi)
            case "FontFamily": return makeFontFamilyFrom(abi: abi)
            case "GeneralTransform": return makeGeneralTransformFrom(abi: abi)
            case "Geometry": return makeGeometryFrom(abi: abi)
            case "GeometryCollection": return makeGeometryCollectionFrom(abi: abi)
            case "GeometryGroup": return makeGeometryGroupFrom(abi: abi)
            case "GradientBrush": return makeGradientBrushFrom(abi: abi)
            case "GradientStop": return makeGradientStopFrom(abi: abi)
            case "GradientStopCollection": return makeGradientStopCollectionFrom(abi: abi)
            case "ImageSource": return makeImageSourceFrom(abi: abi)
            case "LineSegment": return makeLineSegmentFrom(abi: abi)
            case "LinearGradientBrush": return makeLinearGradientBrushFrom(abi: abi)
            case "MatrixTransform": return makeMatrixTransformFrom(abi: abi)
            case "MicaBackdrop": return makeMicaBackdropFrom(abi: abi)
            case "PathFigure": return makePathFigureFrom(abi: abi)
            case "PathFigureCollection": return makePathFigureCollectionFrom(abi: abi)
            case "PathGeometry": return makePathGeometryFrom(abi: abi)
            case "PathSegment": return makePathSegmentFrom(abi: abi)
            case "PathSegmentCollection": return makePathSegmentCollectionFrom(abi: abi)
            case "PointCollection": return makePointCollectionFrom(abi: abi)
            case "PolyBezierSegment": return makePolyBezierSegmentFrom(abi: abi)
            case "Projection": return makeProjectionFrom(abi: abi)
            case "QuadraticBezierSegment": return makeQuadraticBezierSegmentFrom(abi: abi)
            case "RectangleGeometry": return makeRectangleGeometryFrom(abi: abi)
            case "RenderedEventArgs": return makeRenderedEventArgsFrom(abi: abi)
            case "Shadow": return makeShadowFrom(abi: abi)
            case "SolidColorBrush": return makeSolidColorBrushFrom(abi: abi)
            case "SystemBackdrop": return makeSystemBackdropFrom(abi: abi)
            case "ThemeShadow": return makeThemeShadowFrom(abi: abi)
            case "Transform": return makeTransformFrom(abi: abi)
            case "TransformCollection": return makeTransformCollectionFrom(abi: abi)
            case "TransformGroup": return makeTransformGroupFrom(abi: abi)
            case "TranslateTransform": return makeTranslateTransformFrom(abi: abi)
            case "VisualTreeHelper": return makeVisualTreeHelperFrom(abi: abi)
            case "XamlCompositionBrushBase": return makeXamlCompositionBrushBaseFrom(abi: abi)
            case "XamlLight": return makeXamlLightFrom(abi: abi)
            case "AddDeleteThemeTransition": return makeAddDeleteThemeTransitionFrom(abi: abi)
            case "BackEase": return makeBackEaseFrom(abi: abi)
            case "BasicConnectedAnimationConfiguration": return makeBasicConnectedAnimationConfigurationFrom(abi: abi)
            case "BeginStoryboard": return makeBeginStoryboardFrom(abi: abi)
            case "BounceEase": return makeBounceEaseFrom(abi: abi)
            case "CircleEase": return makeCircleEaseFrom(abi: abi)
            case "ColorAnimation": return makeColorAnimationFrom(abi: abi)
            case "ColorAnimationUsingKeyFrames": return makeColorAnimationUsingKeyFramesFrom(abi: abi)
            case "ColorKeyFrame": return makeColorKeyFrameFrom(abi: abi)
            case "ColorKeyFrameCollection": return makeColorKeyFrameCollectionFrom(abi: abi)
            case "CommonNavigationTransitionInfo": return makeCommonNavigationTransitionInfoFrom(abi: abi)
            case "ConnectedAnimation": return makeConnectedAnimationFrom(abi: abi)
            case "ConnectedAnimationConfiguration": return makeConnectedAnimationConfigurationFrom(abi: abi)
            case "ConnectedAnimationService": return makeConnectedAnimationServiceFrom(abi: abi)
            case "ContentThemeTransition": return makeContentThemeTransitionFrom(abi: abi)
            case "ContinuumNavigationTransitionInfo": return makeContinuumNavigationTransitionInfoFrom(abi: abi)
            case "CubicEase": return makeCubicEaseFrom(abi: abi)
            case "DirectConnectedAnimationConfiguration": return makeDirectConnectedAnimationConfigurationFrom(abi: abi)
            case "DiscreteColorKeyFrame": return makeDiscreteColorKeyFrameFrom(abi: abi)
            case "DiscreteDoubleKeyFrame": return makeDiscreteDoubleKeyFrameFrom(abi: abi)
            case "DiscreteObjectKeyFrame": return makeDiscreteObjectKeyFrameFrom(abi: abi)
            case "DiscretePointKeyFrame": return makeDiscretePointKeyFrameFrom(abi: abi)
            case "DoubleAnimation": return makeDoubleAnimationFrom(abi: abi)
            case "DoubleAnimationUsingKeyFrames": return makeDoubleAnimationUsingKeyFramesFrom(abi: abi)
            case "DoubleKeyFrame": return makeDoubleKeyFrameFrom(abi: abi)
            case "DoubleKeyFrameCollection": return makeDoubleKeyFrameCollectionFrom(abi: abi)
            case "DragItemThemeAnimation": return makeDragItemThemeAnimationFrom(abi: abi)
            case "DragOverThemeAnimation": return makeDragOverThemeAnimationFrom(abi: abi)
            case "DrillInNavigationTransitionInfo": return makeDrillInNavigationTransitionInfoFrom(abi: abi)
            case "DrillInThemeAnimation": return makeDrillInThemeAnimationFrom(abi: abi)
            case "DrillOutThemeAnimation": return makeDrillOutThemeAnimationFrom(abi: abi)
            case "DropTargetItemThemeAnimation": return makeDropTargetItemThemeAnimationFrom(abi: abi)
            case "EasingColorKeyFrame": return makeEasingColorKeyFrameFrom(abi: abi)
            case "EasingDoubleKeyFrame": return makeEasingDoubleKeyFrameFrom(abi: abi)
            case "EasingFunctionBase": return makeEasingFunctionBaseFrom(abi: abi)
            case "EasingPointKeyFrame": return makeEasingPointKeyFrameFrom(abi: abi)
            case "EdgeUIThemeTransition": return makeEdgeUIThemeTransitionFrom(abi: abi)
            case "ElasticEase": return makeElasticEaseFrom(abi: abi)
            case "EntranceNavigationTransitionInfo": return makeEntranceNavigationTransitionInfoFrom(abi: abi)
            case "EntranceThemeTransition": return makeEntranceThemeTransitionFrom(abi: abi)
            case "ExponentialEase": return makeExponentialEaseFrom(abi: abi)
            case "FadeInThemeAnimation": return makeFadeInThemeAnimationFrom(abi: abi)
            case "FadeOutThemeAnimation": return makeFadeOutThemeAnimationFrom(abi: abi)
            case "GravityConnectedAnimationConfiguration": return makeGravityConnectedAnimationConfigurationFrom(abi: abi)
            case "KeySpline": return makeKeySplineFrom(abi: abi)
            case "KeyTimeHelper": return makeKeyTimeHelperFrom(abi: abi)
            case "LinearColorKeyFrame": return makeLinearColorKeyFrameFrom(abi: abi)
            case "LinearDoubleKeyFrame": return makeLinearDoubleKeyFrameFrom(abi: abi)
            case "LinearPointKeyFrame": return makeLinearPointKeyFrameFrom(abi: abi)
            case "NavigationThemeTransition": return makeNavigationThemeTransitionFrom(abi: abi)
            case "NavigationTransitionInfo": return makeNavigationTransitionInfoFrom(abi: abi)
            case "ObjectAnimationUsingKeyFrames": return makeObjectAnimationUsingKeyFramesFrom(abi: abi)
            case "ObjectKeyFrame": return makeObjectKeyFrameFrom(abi: abi)
            case "ObjectKeyFrameCollection": return makeObjectKeyFrameCollectionFrom(abi: abi)
            case "PaneThemeTransition": return makePaneThemeTransitionFrom(abi: abi)
            case "PointAnimation": return makePointAnimationFrom(abi: abi)
            case "PointAnimationUsingKeyFrames": return makePointAnimationUsingKeyFramesFrom(abi: abi)
            case "PointKeyFrame": return makePointKeyFrameFrom(abi: abi)
            case "PointKeyFrameCollection": return makePointKeyFrameCollectionFrom(abi: abi)
            case "PointerDownThemeAnimation": return makePointerDownThemeAnimationFrom(abi: abi)
            case "PointerUpThemeAnimation": return makePointerUpThemeAnimationFrom(abi: abi)
            case "PopInThemeAnimation": return makePopInThemeAnimationFrom(abi: abi)
            case "PopOutThemeAnimation": return makePopOutThemeAnimationFrom(abi: abi)
            case "PopupThemeTransition": return makePopupThemeTransitionFrom(abi: abi)
            case "PowerEase": return makePowerEaseFrom(abi: abi)
            case "QuadraticEase": return makeQuadraticEaseFrom(abi: abi)
            case "QuarticEase": return makeQuarticEaseFrom(abi: abi)
            case "QuinticEase": return makeQuinticEaseFrom(abi: abi)
            case "ReorderThemeTransition": return makeReorderThemeTransitionFrom(abi: abi)
            case "RepeatBehaviorHelper": return makeRepeatBehaviorHelperFrom(abi: abi)
            case "RepositionThemeAnimation": return makeRepositionThemeAnimationFrom(abi: abi)
            case "RepositionThemeTransition": return makeRepositionThemeTransitionFrom(abi: abi)
            case "SineEase": return makeSineEaseFrom(abi: abi)
            case "SlideNavigationTransitionInfo": return makeSlideNavigationTransitionInfoFrom(abi: abi)
            case "SplineColorKeyFrame": return makeSplineColorKeyFrameFrom(abi: abi)
            case "SplineDoubleKeyFrame": return makeSplineDoubleKeyFrameFrom(abi: abi)
            case "SplinePointKeyFrame": return makeSplinePointKeyFrameFrom(abi: abi)
            case "SplitCloseThemeAnimation": return makeSplitCloseThemeAnimationFrom(abi: abi)
            case "SplitOpenThemeAnimation": return makeSplitOpenThemeAnimationFrom(abi: abi)
            case "Storyboard": return makeStoryboardFrom(abi: abi)
            case "SuppressNavigationTransitionInfo": return makeSuppressNavigationTransitionInfoFrom(abi: abi)
            case "SwipeBackThemeAnimation": return makeSwipeBackThemeAnimationFrom(abi: abi)
            case "SwipeHintThemeAnimation": return makeSwipeHintThemeAnimationFrom(abi: abi)
            case "Timeline": return makeTimelineFrom(abi: abi)
            case "TimelineCollection": return makeTimelineCollectionFrom(abi: abi)
            case "Transition": return makeTransitionFrom(abi: abi)
            case "TransitionCollection": return makeTransitionCollectionFrom(abi: abi)
            case "BitmapImage": return makeBitmapImageFrom(abi: abi)
            case "BitmapSource": return makeBitmapSourceFrom(abi: abi)
            case "DownloadProgressEventArgs": return makeDownloadProgressEventArgsFrom(abi: abi)
            case "RenderTargetBitmap": return makeRenderTargetBitmapFrom(abi: abi)
            case "SoftwareBitmapSource": return makeSoftwareBitmapSourceFrom(abi: abi)
            case "SurfaceImageSource": return makeSurfaceImageSourceFrom(abi: abi)
            case "SvgImageSource": return makeSvgImageSourceFrom(abi: abi)
            case "SvgImageSourceFailedEventArgs": return makeSvgImageSourceFailedEventArgsFrom(abi: abi)
            case "SvgImageSourceOpenedEventArgs": return makeSvgImageSourceOpenedEventArgsFrom(abi: abi)
            case "VirtualSurfaceImageSource": return makeVirtualSurfaceImageSourceFrom(abi: abi)
            case "WriteableBitmap": return makeWriteableBitmapFrom(abi: abi)
            case "XamlRenderingBackgroundTask": return makeXamlRenderingBackgroundTaskFrom(abi: abi)
            case "Transform3D": return makeTransform3DFrom(abi: abi)
            case "Ellipse": return makeEllipseFrom(abi: abi)
            case "Path": return makePathFrom(abi: abi)
            case "Rectangle": return makeRectangleFrom(abi: abi)
            case "Shape": return makeShapeFrom(abi: abi)
            case "XamlControlsXamlMetaDataProvider": return makeXamlControlsXamlMetaDataProviderFrom(abi: abi)
            default: return Nothing
        }
    }
}
