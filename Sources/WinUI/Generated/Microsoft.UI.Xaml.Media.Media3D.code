// WARNING: Please don't edit this file. It was generated by Codira/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.media.media3d.transform3d)
open class Transform3D : WinUI.DependencyObject {
    private typealias CodiraABI = __ABI_Microsoft_UI_Xaml_Media_Media3D.ITransform3D
    private typealias CABI = __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMedia3D_CITransform3D
    private lazy var _default: CodiraABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override open fn _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.this == CABI.this {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public static fn from(abi: ComPtr<__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMedia3D_CITransform3D>?) -> Transform3D? {
        guard immutable abi = abi else { return Nothing }
        return UnsealedWinRTClassWrapper<Composable>.unwrapFrom(base: abi)
    }

    @_spi(WinRTInternal)
    override public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi: fromAbi)
    }

    @_spi(WinRTInternal)
    override public init<Composable: ComposableImpl>(
        composing: Composable.Type,
        _ createCallback: (UnsealedWinRTClassWrapper<Composable>?, inout WindowsFoundation.IInspectable?) -> Composable.Default.CodiraABI)
    {
        super.init(composing: composing, createCallback)
    }
    override open fn queryInterface(_ iid: WindowsFoundation.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    private static var _ITransform3DFactory : __ABI_Microsoft_UI_Xaml_Media_Media3D.ITransform3DFactory =  try! RoGetActivationFactory(HString("Microsoft.UI.Xaml.Media.Media3D.Transform3D"))

    override public init() {
        super.init(composing: Self.Composable.this) { baseInterface, innerInterface in 
            try! Self._ITransform3DFactory.CreateInstanceImpl(baseInterface, &innerInterface)
        }
    }

    internal enum ITransform3D : ComposableImpl {
        internal typealias CABI = C_IInspectable
        internal typealias CodiraABI = WindowsFoundation.IInspectable
        internal typealias Class = Transform3D
        internal typealias CodiraProjection = WinRTClassWeakReference<Class>
        internal enum Default : AbiInterface {
            internal typealias CABI = __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMedia3D_CITransform3D
            internal typealias CodiraABI = __ABI_Microsoft_UI_Xaml_Media_Media3D.ITransform3D
        }
    }
    internal typealias Composable = ITransform3D
    deinit {
        _default = Nothing
    }
}

