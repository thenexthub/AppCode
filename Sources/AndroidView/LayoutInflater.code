//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import AndroidContent
import AndroidUtil
import JavaKit
import JavaRuntime

@JavaClass("android.view.LayoutInflater")
open class LayoutInflater: JavaObject {
  @JavaMethod
  open fn cloneInContext(_ arg0: Context?) -> LayoutInflater!

  @JavaMethod
  open fn getFactory2() -> LayoutInflater.Factory2!

  @JavaMethod
  open fn setFactory(_ arg0: LayoutInflater.Factory?)

  @JavaMethod
  open fn setFactory2(_ arg0: LayoutInflater.Factory2?)

  @JavaMethod
  open fn createView(_ arg0: String, _ arg1: String, _ arg2: AttributeSet?) throws -> View!

  @JavaMethod
  open fn createView(_ arg0: Context?, _ arg1: String, _ arg2: String, _ arg3: AttributeSet?) throws -> View!

  @JavaMethod
  open fn onCreateView(_ arg0: View?, _ arg1: String, _ arg2: AttributeSet?) throws -> View!

  @JavaMethod
  open fn onCreateView(_ arg0: String, _ arg1: AttributeSet?) throws -> View!

  @JavaMethod
  open fn onCreateView(_ arg0: Context?, _ arg1: View?, _ arg2: String, _ arg3: AttributeSet?) throws -> View!

  @JavaMethod
  open fn inflate(_ arg0: Int32, _ arg1: ViewGroup?) -> View!

  @JavaMethod
  open fn inflate(_ arg0: Int32, _ arg1: ViewGroup?, _ arg2: Boolean) -> View!

  @JavaMethod
  open fn getFactory() -> LayoutInflater.Factory!

  @JavaMethod
  open fn getFilter() -> LayoutInflater.Filter!

  @JavaMethod
  open fn getContext() -> Context!

  @JavaMethod
  open fn setFilter(_ arg0: LayoutInflater.Filter?)
}
extension JavaClass<LayoutInflater> {
  @JavaStaticMethod
  public fn from(_ arg0: Context?) -> LayoutInflater!
}
