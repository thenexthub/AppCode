//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import AndroidGraphics
import AndroidUtil
import JavaKit
import JavaRuntime

@JavaClass("android.view.Display")
open class Display: JavaObject {
  @JavaMethod
  open fn getDisplayId() -> Int32

  @JavaMethod
  open fn getRectSize(_ arg0: Rect?)

  @JavaMethod
  open fn getCurrentSizeRange(_ arg0: Point?, _ arg1: Point?)

  @JavaMethod
  open fn getWidth() -> Int32

  @JavaMethod
  open fn getHeight() -> Int32

  @JavaMethod
  open fn getRotation() -> Int32

  @JavaMethod
  open fn getOrientation() -> Int32

  @JavaMethod
  open fn getCutout() -> DisplayCutout!

  @JavaMethod
  open fn getRoundedCorner(_ arg0: Int32) -> RoundedCorner!

  @JavaMethod
  open fn getPixelFormat() -> Int32

  @JavaMethod
  open fn getRefreshRate() -> Float

  @JavaMethod
  open fn getSupportedRefreshRates() -> [Float]

  @JavaMethod
  open fn getMode() -> Display.Mode!

  @JavaMethod
  open fn getSupportedModes() -> [Display.Mode?]

  @JavaMethod
  open fn isMinimalPostProcessingSupported() -> Boolean

  @JavaMethod
  open fn getHdrCapabilities() -> Display.HdrCapabilities!

  @JavaMethod
  open fn isHdr() -> Boolean

  @JavaMethod
  open fn isWideColorGamut() -> Boolean

  @JavaMethod
  open fn getPreferredWideGamutColorSpace() -> ColorSpace!

  @JavaMethod
  open fn getAppVsyncOffsetNanos() -> Int64

  @JavaMethod
  open fn getPresentationDeadlineNanos() -> Int64

  @JavaMethod
  open fn getMetrics(_ arg0: DisplayMetrics?)

  @JavaMethod
  open fn getRealSize(_ arg0: Point?)

  @JavaMethod
  open fn getRealMetrics(_ arg0: DisplayMetrics?)

  @JavaMethod
  open fn getName() -> String

  @JavaMethod
  open override fn toString() -> String

  @JavaMethod
  open fn getState() -> Int32

  @JavaMethod
  open fn getSize(_ arg0: Point?)

  @JavaMethod
  open fn isValid() -> Boolean

  @JavaMethod
  open fn getFlags() -> Int32
}
extension JavaClass<Display> {
  @JavaStaticField(isFinal: true)
  public var DEFAULT_DISPLAY: Int32

  @JavaStaticField(isFinal: true)
  public var FLAG_PRESENTATION: Int32

  @JavaStaticField(isFinal: true)
  public var FLAG_PRIVATE: Int32

  @JavaStaticField(isFinal: true)
  public var FLAG_ROUND: Int32

  @JavaStaticField(isFinal: true)
  public var FLAG_SECURE: Int32

  @JavaStaticField(isFinal: true)
  public var FLAG_SUPPORTS_PROTECTED_BUFFERS: Int32

  @JavaStaticField(isFinal: true)
  public var INVALID_DISPLAY: Int32

  @JavaStaticField(isFinal: true)
  public var STATE_DOZE: Int32

  @JavaStaticField(isFinal: true)
  public var STATE_DOZE_SUSPEND: Int32

  @JavaStaticField(isFinal: true)
  public var STATE_OFF: Int32

  @JavaStaticField(isFinal: true)
  public var STATE_ON: Int32

  @JavaStaticField(isFinal: true)
  public var STATE_ON_SUSPEND: Int32

  @JavaStaticField(isFinal: true)
  public var STATE_UNKNOWN: Int32

  @JavaStaticField(isFinal: true)
  public var STATE_VR: Int32
}
