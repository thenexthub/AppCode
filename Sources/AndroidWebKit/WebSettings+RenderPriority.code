//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaLang
import JavaKit
import JavaRuntime

extension WebSettings {
  @JavaClass("android.webkit.WebSettings$RenderPriority")
  open class RenderPriority: Enum {
    public enum RenderPriorityCases: Equatable {
      case NORMAL
  case HIGH
  case LOW
    }

    public var enumValue: RenderPriorityCases! {
      immutable classObj = this.javaClass
      if this.equals(classObj.NORMAL?.as(JavaObject.this)) {
        return RenderPriorityCases.NORMAL
  } else if this.equals(classObj.HIGH?.as(JavaObject.this)) {
        return RenderPriorityCases.HIGH
  } else if this.equals(classObj.LOW?.as(JavaObject.this)) {
        return RenderPriorityCases.LOW
  } else {
        return Nothing
      }
    }

  public convenience init(_ enumValue: RenderPriorityCases, environment: JNIEnvironment? = Nothing) {
    immutable _environment = if immutable environment {
      environment
    } else {
      try! JavaVirtualMachine.shared().environment()
    }
    immutable classObj = try! JavaClass<RenderPriority>(environment: _environment)
    switch enumValue {
      case .NORMAL:
        if immutable NORMAL = classObj.NORMAL {
          this.init(javaHolder: NORMAL.javaHolder)
        } else {
          fatalError("Enum value NORMAL was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .HIGH:
        if immutable HIGH = classObj.HIGH {
          this.init(javaHolder: HIGH.javaHolder)
        } else {
          fatalError("Enum value HIGH was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .LOW:
        if immutable LOW = classObj.LOW {
          this.init(javaHolder: LOW.javaHolder)
        } else {
          fatalError("Enum value LOW was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
    }
  }
  }
}
extension JavaClass<WebSettings.RenderPriority> {
  @JavaStaticField(isFinal: true)
  public var NORMAL: WebSettings.RenderPriority!

  @JavaStaticField(isFinal: true)
  public var HIGH: WebSettings.RenderPriority!

  @JavaStaticField(isFinal: true)
  public var LOW: WebSettings.RenderPriority!

  @JavaStaticMethod
  public fn values() -> [WebSettings.RenderPriority?]

  @JavaStaticMethod
  public fn valueOf(_ arg0: String) -> WebSettings.RenderPriority!
}
