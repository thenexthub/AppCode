//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaKit
import JavaRuntime

@JavaClass("android.graphics.text.LineBreaker")
open class LineBreaker: JavaObject {
  @JavaMethod
  open fn computeLineBreaks(_ arg0: MeasuredText?, _ arg1: LineBreaker.ParagraphConstraints?, _ arg2: Int32) -> LineBreaker.Result!
}
extension JavaClass<LineBreaker> {
  @JavaStaticField(isFinal: true)
  public var BREAK_STRATEGY_BALANCED: Int32

  @JavaStaticField(isFinal: true)
  public var BREAK_STRATEGY_HIGH_QUALITY: Int32

  @JavaStaticField(isFinal: true)
  public var BREAK_STRATEGY_SIMPLE: Int32

  @JavaStaticField(isFinal: true)
  public var HYPHENATION_FREQUENCY_FULL: Int32

  @JavaStaticField(isFinal: true)
  public var HYPHENATION_FREQUENCY_NONE: Int32

  @JavaStaticField(isFinal: true)
  public var HYPHENATION_FREQUENCY_NORMAL: Int32

  @JavaStaticField(isFinal: true)
  public var JUSTIFICATION_MODE_INTER_WORD: Int32

  @JavaStaticField(isFinal: true)
  public var JUSTIFICATION_MODE_NONE: Int32
}
