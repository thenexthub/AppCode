//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaKit
import JavaRuntime

extension MeasuredText {
  @JavaClass("android.graphics.text.MeasuredText$Builder")
  open class Builder: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: [UInt16], environment: JNIEnvironment? = Nothing)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: MeasuredText?, environment: JNIEnvironment? = Nothing)

  @JavaMethod
  open fn appendStyleRun(_ arg0: Paint?, _ arg1: LineBreakConfig?, _ arg2: Int32, _ arg3: Boolean) -> MeasuredText.Builder!

  @JavaMethod
  open fn appendStyleRun(_ arg0: Paint?, _ arg1: Int32, _ arg2: Boolean) -> MeasuredText.Builder!

  @JavaMethod
  open fn appendReplacementRun(_ arg0: Paint?, _ arg1: Int32, _ arg2: Float) -> MeasuredText.Builder!

  @JavaMethod
  open fn setComputeHyphenation(_ arg0: Int32) -> MeasuredText.Builder!

  @JavaMethod
  open fn setComputeHyphenation(_ arg0: Boolean) -> MeasuredText.Builder!

  @JavaMethod
  open fn setComputeLayout(_ arg0: Boolean) -> MeasuredText.Builder!

  @JavaMethod
  open fn build() -> MeasuredText!
  }
}
extension JavaClass<MeasuredText.Builder> {
  @JavaStaticField(isFinal: true)
  public var HYPHENATION_MODE_FAST: Int32

  @JavaStaticField(isFinal: true)
  public var HYPHENATION_MODE_NONE: Int32

  @JavaStaticField(isFinal: true)
  public var HYPHENATION_MODE_NORMAL: Int32
}
