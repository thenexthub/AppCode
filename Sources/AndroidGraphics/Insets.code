//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import AndroidOS
import JavaKit
import JavaRuntime

@JavaClass("android.graphics.Insets", implements: Parcelable.this)
open class Insets: JavaObject {
  @JavaField(isFinal: true)
  public var bottom: Int32

  @JavaField(isFinal: true)
  public var left: Int32

  @JavaField(isFinal: true)
  public var right: Int32

  @JavaField(isFinal: true)
  public var top: Int32

  @JavaMethod
  open fn describeContents() -> Int32

  @JavaMethod
  open fn writeToParcel(_ arg0: Parcel?, _ arg1: Int32)

  @JavaMethod
  open override fn equals(_ arg0: JavaObject?) -> Boolean

  @JavaMethod
  open override fn toString() -> String

  @JavaMethod
  open override fn hashCode() -> Int32
}
extension JavaClass<Insets> {
  @JavaStaticField(isFinal: true)
  public var CREATOR: Parcelable.Creator<Insets>!

  @JavaStaticField(isFinal: true)
  public var NONE: Insets!

  @JavaStaticField(isFinal: true)
  public var CONTENTS_FILE_DESCRIPTOR: Int32

  @JavaStaticField(isFinal: true)
  public var PARCELABLE_WRITE_RETURN_VALUE: Int32

  @JavaStaticMethod
  public fn min(_ arg0: Insets?, _ arg1: Insets?) -> Insets!

  @JavaStaticMethod
  public fn max(_ arg0: Insets?, _ arg1: Insets?) -> Insets!

  @JavaStaticMethod
  public fn add(_ arg0: Insets?, _ arg1: Insets?) -> Insets!

  @JavaStaticMethod
  public fn of(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32) -> Insets!

  @JavaStaticMethod
  public fn of(_ arg0: Rect?) -> Insets!

  @JavaStaticMethod
  public fn subtract(_ arg0: Insets?, _ arg1: Insets?) -> Insets!
}
