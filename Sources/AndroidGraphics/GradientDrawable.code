//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import AndroidContent
import JavaKit
import JavaRuntime

@JavaClass("android.graphics.drawable.GradientDrawable")
open class GradientDrawable: Drawable {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: GradientDrawable.Orientation?, _ arg1: [Int32], environment: JNIEnvironment? = Nothing)

  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = Nothing)

  @JavaMethod
  open override fn canApplyTheme() -> Boolean

  @JavaMethod
  open override fn getChangingConfigurations() -> Int32

  @JavaMethod
  open override fn getOpacity() -> Int32

  @JavaMethod
  open override fn isStateful() -> Boolean

  @JavaMethod
  open fn getColor() -> ColorStateList!

  @JavaMethod
  open fn setPadding(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32)

  @JavaMethod
  open fn setCornerRadii(_ arg0: [Float])

  @JavaMethod
  open fn getCornerRadii() -> [Float]

  @JavaMethod
  open fn setCornerRadius(_ arg0: Float)

  @JavaMethod
  open fn getCornerRadius() -> Float

  @JavaMethod
  open fn setStroke(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open fn setStroke(_ arg0: Int32, _ arg1: ColorStateList?, _ arg2: Float, _ arg3: Float)

  @JavaMethod
  open fn setStroke(_ arg0: Int32, _ arg1: Int32, _ arg2: Float, _ arg3: Float)

  @JavaMethod
  open fn setStroke(_ arg0: Int32, _ arg1: ColorStateList?)

  @JavaMethod
  open fn setShape(_ arg0: Int32)

  @JavaMethod
  open fn setGradientType(_ arg0: Int32)

  @JavaMethod
  open fn getGradientType() -> Int32

  @JavaMethod
  open fn setGradientCenter(_ arg0: Float, _ arg1: Float)

  @JavaMethod
  open fn getGradientCenterX() -> Float

  @JavaMethod
  open fn getGradientCenterY() -> Float

  @JavaMethod
  open fn setGradientRadius(_ arg0: Float)

  @JavaMethod
  open fn getGradientRadius() -> Float

  @JavaMethod
  open fn setUseLevel(_ arg0: Boolean)

  @JavaMethod
  open fn getUseLevel() -> Boolean

  @JavaMethod
  open fn getOrientation() -> GradientDrawable.Orientation!

  @JavaMethod
  open fn setOrientation(_ arg0: GradientDrawable.Orientation?)

  @JavaMethod
  open fn setColors(_ arg0: [Int32])

  @JavaMethod
  open fn setColors(_ arg0: [Int32], _ arg1: [Float])

  @JavaMethod
  open fn getColors() -> [Int32]

  @JavaMethod
  open fn setInnerRadiusRatio(_ arg0: Float)

  @JavaMethod
  open fn getInnerRadiusRatio() -> Float

  @JavaMethod
  open fn setInnerRadius(_ arg0: Int32)

  @JavaMethod
  open fn getInnerRadius() -> Int32

  @JavaMethod
  open fn setThicknessRatio(_ arg0: Float)

  @JavaMethod
  open fn getThicknessRatio() -> Float

  @JavaMethod
  open fn setThickness(_ arg0: Int32)

  @JavaMethod
  open fn getThickness() -> Int32

  @JavaMethod
  open override fn draw(_ arg0: Canvas?)

  @JavaMethod
  open override fn getAlpha() -> Int32

  @JavaMethod
  open override fn hasFocusStateSpecified() -> Boolean

  @JavaMethod
  open override fn applyTheme(_ arg0: Resources.Theme?)

  @JavaMethod
  open override fn setAlpha(_ arg0: Int32)

  @JavaMethod
  open override fn setTintList(_ arg0: ColorStateList?)

  @JavaMethod
  open override fn setTintBlendMode(_ arg0: BlendMode?)

  @JavaMethod
  open override fn getColorFilter() -> ColorFilter!

  @JavaMethod
  open override fn setColorFilter(_ arg0: ColorFilter?)

  @JavaMethod
  open override fn onBoundsChange(_ arg0: Rect?)

  @JavaMethod
  open override fn onStateChange(_ arg0: [Int32]) -> Boolean

  @JavaMethod
  open override fn getConstantState() -> Drawable.ConstantState!

  @JavaMethod
  open override fn mutate() -> Drawable!

  @JavaMethod
  open override fn setDither(_ arg0: Boolean)

  @JavaMethod
  open override fn onLevelChange(_ arg0: Int32) -> Boolean

  @JavaMethod
  open override fn getIntrinsicWidth() -> Int32

  @JavaMethod
  open override fn getIntrinsicHeight() -> Int32

  @JavaMethod
  open override fn getPadding(_ arg0: Rect?) -> Boolean

  @JavaMethod
  open override fn getOpticalInsets() -> Insets!

  @JavaMethod
  open override fn getOutline(_ arg0: Outline?)

  @JavaMethod
  open fn setSize(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open fn getShape() -> Int32

  @JavaMethod
  open fn setColor(_ arg0: ColorStateList?)

  @JavaMethod
  open fn setColor(_ arg0: Int32)
}
extension JavaClass<GradientDrawable> {
  @JavaStaticField(isFinal: true)
  public var LINE: Int32

  @JavaStaticField(isFinal: true)
  public var LINEAR_GRADIENT: Int32

  @JavaStaticField(isFinal: true)
  public var OVAL: Int32

  @JavaStaticField(isFinal: true)
  public var RADIAL_GRADIENT: Int32

  @JavaStaticField(isFinal: true)
  public var RECTANGLE: Int32

  @JavaStaticField(isFinal: true)
  public var RING: Int32

  @JavaStaticField(isFinal: true)
  public var SWEEP_GRADIENT: Int32
}
