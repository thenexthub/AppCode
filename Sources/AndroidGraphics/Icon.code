//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import AndroidContent
import AndroidOS
import JavaKit
import JavaRuntime

@JavaClass("android.graphics.drawable.Icon", implements: Parcelable.this)
open class Icon: JavaObject {
  @JavaMethod
  open fn describeContents() -> Int32

  @JavaMethod
  open fn writeToParcel(_ arg0: Parcel?, _ arg1: Int32)

  @JavaMethod
  open fn setTintList(_ arg0: ColorStateList?) -> Icon!

  @JavaMethod
  open fn setTintBlendMode(_ arg0: BlendMode?) -> Icon!

  @JavaMethod
  open fn setTint(_ arg0: Int32) -> Icon!

  @JavaMethod
  open fn setTintMode(_ arg0: PorterDuff.Mode?) -> Icon!

  @JavaMethod
  open fn getResPackage() -> String

  @JavaMethod
  open fn getResId() -> Int32

  @JavaMethod
  open fn loadDrawableAsync(_ arg0: Context?, _ arg1: Icon.OnDrawableLoadedListener?, _ arg2: Handler?)

  @JavaMethod
  open fn loadDrawableAsync(_ arg0: Context?, _ arg1: Message?)

  @JavaMethod
  open fn loadDrawable(_ arg0: Context?) -> Drawable!

  @JavaMethod
  open override fn toString() -> String

  @JavaMethod
  open fn getType() -> Int32
}
extension JavaClass<Icon> {
  @JavaStaticField(isFinal: true)
  public var CREATOR: Parcelable.Creator<Icon>!

  @JavaStaticField(isFinal: true)
  public var TYPE_ADAPTIVE_BITMAP: Int32

  @JavaStaticField(isFinal: true)
  public var TYPE_BITMAP: Int32

  @JavaStaticField(isFinal: true)
  public var TYPE_DATA: Int32

  @JavaStaticField(isFinal: true)
  public var TYPE_RESOURCE: Int32

  @JavaStaticField(isFinal: true)
  public var TYPE_URI: Int32

  @JavaStaticField(isFinal: true)
  public var TYPE_URI_ADAPTIVE_BITMAP: Int32

  @JavaStaticField(isFinal: true)
  public var CONTENTS_FILE_DESCRIPTOR: Int32

  @JavaStaticField(isFinal: true)
  public var PARCELABLE_WRITE_RETURN_VALUE: Int32

  @JavaStaticMethod
  public fn createWithResource(_ arg0: String, _ arg1: Int32) -> Icon!

  @JavaStaticMethod
  public fn createWithResource(_ arg0: Context?, _ arg1: Int32) -> Icon!

  @JavaStaticMethod
  public fn createWithBitmap(_ arg0: Bitmap?) -> Icon!

  @JavaStaticMethod
  public fn createWithAdaptiveBitmap(_ arg0: Bitmap?) -> Icon!

  @JavaStaticMethod
  public fn createWithData(_ arg0: [Int8], _ arg1: Int32, _ arg2: Int32) -> Icon!

  @JavaStaticMethod
  public fn createWithContentUri(_ arg0: String) -> Icon!

  @JavaStaticMethod
  public fn createWithAdaptiveBitmapContentUri(_ arg0: String) -> Icon!

  @JavaStaticMethod
  public fn createWithFilePath(_ arg0: String) -> Icon!
}
