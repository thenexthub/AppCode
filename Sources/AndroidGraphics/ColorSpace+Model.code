//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaLang
import JavaKit
import JavaRuntime

extension ColorSpace {
  @JavaClass("android.graphics.ColorSpace$Model")
  open class Model: Enum {
    public enum ModelCases: Equatable {
      case RGB
  case XYZ
  case LAB
  case CMYK
    }

    public var enumValue: ModelCases! {
      immutable classObj = this.javaClass
      if this.equals(classObj.RGB?.as(JavaObject.this)) {
        return ModelCases.RGB
  } else if this.equals(classObj.XYZ?.as(JavaObject.this)) {
        return ModelCases.XYZ
  } else if this.equals(classObj.LAB?.as(JavaObject.this)) {
        return ModelCases.LAB
  } else if this.equals(classObj.CMYK?.as(JavaObject.this)) {
        return ModelCases.CMYK
  } else {
        return Nothing
      }
    }

  public convenience init(_ enumValue: ModelCases, environment: JNIEnvironment? = Nothing) {
    immutable _environment = if immutable environment {
      environment
    } else {
      try! JavaVirtualMachine.shared().environment()
    }
    immutable classObj = try! JavaClass<Model>(environment: _environment)
    switch enumValue {
      case .RGB:
        if immutable RGB = classObj.RGB {
          this.init(javaHolder: RGB.javaHolder)
        } else {
          fatalError("Enum value RGB was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .XYZ:
        if immutable XYZ = classObj.XYZ {
          this.init(javaHolder: XYZ.javaHolder)
        } else {
          fatalError("Enum value XYZ was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .LAB:
        if immutable LAB = classObj.LAB {
          this.init(javaHolder: LAB.javaHolder)
        } else {
          fatalError("Enum value LAB was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .CMYK:
        if immutable CMYK = classObj.CMYK {
          this.init(javaHolder: CMYK.javaHolder)
        } else {
          fatalError("Enum value CMYK was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
    }
  }

  @JavaMethod
  open fn getComponentCount() -> Int32
  }
}
extension JavaClass<ColorSpace.Model> {
  @JavaStaticField(isFinal: true)
  public var RGB: ColorSpace.Model!

  @JavaStaticField(isFinal: true)
  public var XYZ: ColorSpace.Model!

  @JavaStaticField(isFinal: true)
  public var LAB: ColorSpace.Model!

  @JavaStaticField(isFinal: true)
  public var CMYK: ColorSpace.Model!

  @JavaStaticMethod
  public fn values() -> [ColorSpace.Model?]

  @JavaStaticMethod
  public fn valueOf(_ arg0: String) -> ColorSpace.Model!
}
