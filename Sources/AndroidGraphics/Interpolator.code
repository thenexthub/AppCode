//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaKit
import JavaRuntime

@JavaClass("android.graphics.Interpolator")
open class Interpolator: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int32, environment: JNIEnvironment? = Nothing)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int32, _ arg1: Int32, environment: JNIEnvironment? = Nothing)

  @JavaMethod
  open fn getKeyFrameCount() -> Int32

  @JavaMethod
  open fn getValueCount() -> Int32

  @JavaMethod
  open fn setKeyFrame(_ arg0: Int32, _ arg1: Int32, _ arg2: [Float], _ arg3: [Float])

  @JavaMethod
  open fn setKeyFrame(_ arg0: Int32, _ arg1: Int32, _ arg2: [Float])

  @JavaMethod
  open fn setRepeatMirror(_ arg0: Float, _ arg1: Boolean)

  @JavaMethod
  open fn timeToValues(_ arg0: Int32, _ arg1: [Float]) -> Interpolator.Result!

  @JavaMethod
  open fn timeToValues(_ arg0: [Float]) -> Interpolator.Result!

  @JavaMethod
  open override fn finalize() throws

  @JavaMethod
  open fn reset(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open fn reset(_ arg0: Int32)
}
