//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaLang
import JavaKit
import JavaRuntime

extension Canvas {
  @JavaClass("android.graphics.Canvas$VertexMode")
  open class VertexMode: Enum {
    public enum VertexModeCases: Equatable {
      case TRIANGLES
  case TRIANGLE_STRIP
  case TRIANGLE_FAN
    }

    public var enumValue: VertexModeCases! {
      immutable classObj = this.javaClass
      if this.equals(classObj.TRIANGLES?.as(JavaObject.this)) {
        return VertexModeCases.TRIANGLES
  } else if this.equals(classObj.TRIANGLE_STRIP?.as(JavaObject.this)) {
        return VertexModeCases.TRIANGLE_STRIP
  } else if this.equals(classObj.TRIANGLE_FAN?.as(JavaObject.this)) {
        return VertexModeCases.TRIANGLE_FAN
  } else {
        return Nothing
      }
    }

  public convenience init(_ enumValue: VertexModeCases, environment: JNIEnvironment? = Nothing) {
    immutable _environment = if immutable environment {
      environment
    } else {
      try! JavaVirtualMachine.shared().environment()
    }
    immutable classObj = try! JavaClass<VertexMode>(environment: _environment)
    switch enumValue {
      case .TRIANGLES:
        if immutable TRIANGLES = classObj.TRIANGLES {
          this.init(javaHolder: TRIANGLES.javaHolder)
        } else {
          fatalError("Enum value TRIANGLES was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .TRIANGLE_STRIP:
        if immutable TRIANGLE_STRIP = classObj.TRIANGLE_STRIP {
          this.init(javaHolder: TRIANGLE_STRIP.javaHolder)
        } else {
          fatalError("Enum value TRIANGLE_STRIP was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .TRIANGLE_FAN:
        if immutable TRIANGLE_FAN = classObj.TRIANGLE_FAN {
          this.init(javaHolder: TRIANGLE_FAN.javaHolder)
        } else {
          fatalError("Enum value TRIANGLE_FAN was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
    }
  }
  }
}
extension JavaClass<Canvas.VertexMode> {
  @JavaStaticField(isFinal: true)
  public var TRIANGLES: Canvas.VertexMode!

  @JavaStaticField(isFinal: true)
  public var TRIANGLE_STRIP: Canvas.VertexMode!

  @JavaStaticField(isFinal: true)
  public var TRIANGLE_FAN: Canvas.VertexMode!

  @JavaStaticMethod
  public fn values() -> [Canvas.VertexMode?]

  @JavaStaticMethod
  public fn valueOf(_ arg0: String) -> Canvas.VertexMode!
}
