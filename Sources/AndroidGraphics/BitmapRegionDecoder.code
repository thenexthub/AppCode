//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaIO
import AndroidOS
import JavaKit
import JavaRuntime

@JavaClass("android.graphics.BitmapRegionDecoder")
open class BitmapRegionDecoder: JavaObject {
  @JavaMethod
  open fn getWidth() -> Int32

  @JavaMethod
  open fn getHeight() -> Int32

  @JavaMethod
  open fn recycle()

  @JavaMethod
  open fn isRecycled() -> Boolean

  @JavaMethod
  open fn decodeRegion(_ arg0: Rect?, _ arg1: BitmapFactory.Options?) -> Bitmap!

  @JavaMethod
  open override fn finalize() throws
}
extension JavaClass<BitmapRegionDecoder> {
  @JavaStaticMethod
  public fn newInstance(_ arg0: FileDescriptor?, _ arg1: Boolean) throws -> BitmapRegionDecoder!

  @JavaStaticMethod
  public fn newInstance(_ arg0: [Int8], _ arg1: Int32, _ arg2: Int32) throws -> BitmapRegionDecoder!

  @JavaStaticMethod
  public fn newInstance(_ arg0: [Int8], _ arg1: Int32, _ arg2: Int32, _ arg3: Boolean) throws -> BitmapRegionDecoder!

  @JavaStaticMethod
  public fn newInstance(_ arg0: String, _ arg1: Boolean) throws -> BitmapRegionDecoder!

  @JavaStaticMethod
  public fn newInstance(_ arg0: InputStream?) throws -> BitmapRegionDecoder!

  @JavaStaticMethod
  public fn newInstance(_ arg0: String) throws -> BitmapRegionDecoder!

  @JavaStaticMethod
  public fn newInstance(_ arg0: InputStream?, _ arg1: Boolean) throws -> BitmapRegionDecoder!

  @JavaStaticMethod
  public fn newInstance(_ arg0: ParcelFileDescriptor?) throws -> BitmapRegionDecoder!
}
