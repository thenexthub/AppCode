//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaUtil
import AndroidOS
import JavaKit
import JavaRuntime

@JavaClass("android.graphics.Paint")
open class Paint: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Paint?, environment: JNIEnvironment? = Nothing)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int32, environment: JNIEnvironment? = Nothing)

  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = Nothing)

  @JavaMethod
  open fn getHinting() -> Int32

  @JavaMethod
  open fn setHinting(_ arg0: Int32)

  @JavaMethod
  open fn isAntiAlias() -> Boolean

  @JavaMethod
  open fn setAntiAlias(_ arg0: Boolean)

  @JavaMethod
  open fn isDither() -> Boolean

  @JavaMethod
  open fn isLinearText() -> Boolean

  @JavaMethod
  open fn setLinearText(_ arg0: Boolean)

  @JavaMethod
  open fn isSubpixelText() -> Boolean

  @JavaMethod
  open fn setSubpixelText(_ arg0: Boolean)

  @JavaMethod
  open fn isUnderlineText() -> Boolean

  @JavaMethod
  open fn getUnderlinePosition() -> Float

  @JavaMethod
  open fn getUnderlineThickness() -> Float

  @JavaMethod
  open fn setUnderlineText(_ arg0: Boolean)

  @JavaMethod
  open fn isStrikeThruText() -> Boolean

  @JavaMethod
  open fn getStrikeThruPosition() -> Float

  @JavaMethod
  open fn getStrikeThruThickness() -> Float

  @JavaMethod
  open fn setStrikeThruText(_ arg0: Boolean)

  @JavaMethod
  open fn isFakeBoldText() -> Boolean

  @JavaMethod
  open fn setFakeBoldText(_ arg0: Boolean)

  @JavaMethod
  open fn getStyle() -> Paint.Style!

  @JavaMethod
  open fn setStyle(_ arg0: Paint.Style?)

  @JavaMethod
  open fn getColor() -> Int32

  @JavaMethod
  open fn getColorLong() -> Int64

  @JavaMethod
  open fn setARGB(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32)

  @JavaMethod
  open fn getStrokeWidth() -> Float

  @JavaMethod
  open fn setStrokeWidth(_ arg0: Float)

  @JavaMethod
  open fn getStrokeMiter() -> Float

  @JavaMethod
  open fn setStrokeMiter(_ arg0: Float)

  @JavaMethod
  open fn getStrokeCap() -> Paint.Cap!

  @JavaMethod
  open fn setStrokeCap(_ arg0: Paint.Cap?)

  @JavaMethod
  open fn getStrokeJoin() -> Paint.Join!

  @JavaMethod
  open fn setStrokeJoin(_ arg0: Paint.Join?)

  @JavaMethod
  open fn getFillPath(_ arg0: Path?, _ arg1: Path?) -> Boolean

  @JavaMethod
  open fn getShader() -> Shader!

  @JavaMethod
  open fn setShader(_ arg0: Shader?) -> Shader!

  @JavaMethod
  open fn getXfermode() -> Xfermode!

  @JavaMethod
  open fn getBlendMode() -> BlendMode!

  @JavaMethod
  open fn setXfermode(_ arg0: Xfermode?) -> Xfermode!

  @JavaMethod
  open fn setBlendMode(_ arg0: BlendMode?)

  @JavaMethod
  open fn getPathEffect() -> PathEffect!

  @JavaMethod
  open fn setPathEffect(_ arg0: PathEffect?) -> PathEffect!

  @JavaMethod
  open fn getMaskFilter() -> MaskFilter!

  @JavaMethod
  open fn setMaskFilter(_ arg0: MaskFilter?) -> MaskFilter!

  @JavaMethod
  open fn getTypeface() -> Typeface!

  @JavaMethod
  open fn setTypeface(_ arg0: Typeface?) -> Typeface!

  @JavaMethod
  open fn setShadowLayer(_ arg0: Float, _ arg1: Float, _ arg2: Float, _ arg3: Int64)

  @JavaMethod
  open fn setShadowLayer(_ arg0: Float, _ arg1: Float, _ arg2: Float, _ arg3: Int32)

  @JavaMethod
  open fn clearShadowLayer()

  @JavaMethod
  open fn getShadowLayerRadius() -> Float

  @JavaMethod
  open fn getShadowLayerDx() -> Float

  @JavaMethod
  open fn getShadowLayerDy() -> Float

  @JavaMethod
  open fn getShadowLayerColor() -> Int32

  @JavaMethod
  open fn getShadowLayerColorLong() -> Int64

  @JavaMethod
  open fn getTextAlign() -> Paint.Align!

  @JavaMethod
  open fn setTextAlign(_ arg0: Paint.Align?)

  @JavaMethod
  open fn getTextLocale() -> Locale!

  @JavaMethod
  open fn getTextLocales() -> LocaleList!

  @JavaMethod
  open fn setTextLocale(_ arg0: Locale?)

  @JavaMethod
  open fn setTextLocales(_ arg0: LocaleList?)

  @JavaMethod
  open fn isElegantTextHeight() -> Boolean

  @JavaMethod
  open fn setElegantTextHeight(_ arg0: Boolean)

  @JavaMethod
  open fn getTextSize() -> Float

  @JavaMethod
  open fn setTextSize(_ arg0: Float)

  @JavaMethod
  open fn getTextScaleX() -> Float

  @JavaMethod
  open fn setTextScaleX(_ arg0: Float)

  @JavaMethod
  open fn getTextSkewX() -> Float

  @JavaMethod
  open fn setTextSkewX(_ arg0: Float)

  @JavaMethod
  open fn getLetterSpacing() -> Float

  @JavaMethod
  open fn setLetterSpacing(_ arg0: Float)

  @JavaMethod
  open fn getWordSpacing() -> Float

  @JavaMethod
  open fn setWordSpacing(_ arg0: Float)

  @JavaMethod
  open fn getFontFeatureSettings() -> String

  @JavaMethod
  open fn setFontFeatureSettings(_ arg0: String)

  @JavaMethod
  open fn getFontVariationSettings() -> String

  @JavaMethod
  open fn setFontVariationSettings(_ arg0: String) -> Boolean

  @JavaMethod
  open fn getStartHyphenEdit() -> Int32

  @JavaMethod
  open fn getEndHyphenEdit() -> Int32

  @JavaMethod
  open fn setStartHyphenEdit(_ arg0: Int32)

  @JavaMethod
  open fn setEndHyphenEdit(_ arg0: Int32)

  @JavaMethod
  open fn ascent() -> Float

  @JavaMethod
  open fn descent() -> Float

  @JavaMethod
  open fn getFontMetrics(_ arg0: Paint.FontMetrics?) -> Float

  @JavaMethod
  open fn getFontMetrics() -> Paint.FontMetrics!

  @JavaMethod
  open fn getFontMetricsInt(_ arg0: Paint.FontMetricsInt?) -> Int32

  @JavaMethod
  open fn getFontMetricsInt() -> Paint.FontMetricsInt!

  @JavaMethod
  open fn getFontMetricsInt(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: Boolean, _ arg6: Paint.FontMetricsInt?)

  @JavaMethod
  open fn getFontMetricsInt(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: Boolean, _ arg6: Paint.FontMetricsInt?)

  @JavaMethod
  open fn getFontSpacing() -> Float

  @JavaMethod
  open fn measureText(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32) -> Float

  @JavaMethod
  open fn measureText(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: Int32) -> Float

  @JavaMethod
  open fn measureText(_ arg0: String) -> Float

  @JavaMethod
  open fn measureText(_ arg0: String, _ arg1: Int32, _ arg2: Int32) -> Float

  @JavaMethod
  open fn breakText(_ arg0: String, _ arg1: Boolean, _ arg2: Float, _ arg3: [Float]) -> Int32

  @JavaMethod
  open fn breakText(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: Int32, _ arg3: Boolean, _ arg4: Float, _ arg5: [Float]) -> Int32

  @JavaMethod
  open fn breakText(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32, _ arg3: Float, _ arg4: [Float]) -> Int32

  @JavaMethod
  open fn getTextWidths(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32, _ arg3: [Float]) -> Int32

  @JavaMethod
  open fn getTextWidths(_ arg0: String, _ arg1: Int32, _ arg2: Int32, _ arg3: [Float]) -> Int32

  @JavaMethod
  open fn getTextWidths(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: Int32, _ arg3: [Float]) -> Int32

  @JavaMethod
  open fn getTextWidths(_ arg0: String, _ arg1: [Float]) -> Int32

  @JavaMethod
  open fn getTextRunAdvances(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: Boolean, _ arg6: [Float], _ arg7: Int32) -> Float

  @JavaMethod
  open fn getTextRunCursor(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: Int32, _ arg3: Boolean, _ arg4: Int32, _ arg5: Int32) -> Int32

  @JavaMethod
  open fn getTextRunCursor(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32, _ arg3: Boolean, _ arg4: Int32, _ arg5: Int32) -> Int32

  @JavaMethod
  open fn getTextPath(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32, _ arg3: Float, _ arg4: Float, _ arg5: Path?)

  @JavaMethod
  open fn getTextPath(_ arg0: String, _ arg1: Int32, _ arg2: Int32, _ arg3: Float, _ arg4: Float, _ arg5: Path?)

  @JavaMethod
  open fn getTextBounds(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: Int32, _ arg3: Rect?)

  @JavaMethod
  open fn getTextBounds(_ arg0: String, _ arg1: Int32, _ arg2: Int32, _ arg3: Rect?)

  @JavaMethod
  open fn getTextBounds(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32, _ arg3: Rect?)

  @JavaMethod
  open fn hasGlyph(_ arg0: String) -> Boolean

  @JavaMethod
  open fn getRunAdvance(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: Boolean, _ arg6: Int32) -> Float

  @JavaMethod
  open fn getRunAdvance(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: Boolean, _ arg6: Int32) -> Float

  @JavaMethod
  open fn getOffsetForAdvance(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: Boolean, _ arg6: Float) -> Int32

  @JavaMethod
  open fn getOffsetForAdvance(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: Boolean, _ arg6: Float) -> Int32

  @JavaMethod
  open fn equalsForTextMeasurement(_ arg0: Paint?) -> Boolean

  @JavaMethod
  open fn getAlpha() -> Int32

  @JavaMethod
  open fn setAlpha(_ arg0: Int32)

  @JavaMethod
  open fn getColorFilter() -> ColorFilter!

  @JavaMethod
  open fn setColorFilter(_ arg0: ColorFilter?) -> ColorFilter!

  @JavaMethod
  open fn setDither(_ arg0: Boolean)

  @JavaMethod
  open fn setFilterBitmap(_ arg0: Boolean)

  @JavaMethod
  open fn isFilterBitmap() -> Boolean

  @JavaMethod
  open fn reset()

  @JavaMethod
  open fn set(_ arg0: Paint?)

  @JavaMethod
  open fn setFlags(_ arg0: Int32)

  @JavaMethod
  open fn getFlags() -> Int32

  @JavaMethod
  open fn setColor(_ arg0: Int32)

  @JavaMethod
  open fn setColor(_ arg0: Int64)
}
extension JavaClass<Paint> {
  @JavaStaticField(isFinal: true)
  public var ANTI_ALIAS_FLAG: Int32

  @JavaStaticField(isFinal: true)
  public var CURSOR_AFTER: Int32

  @JavaStaticField(isFinal: true)
  public var CURSOR_AT: Int32

  @JavaStaticField(isFinal: true)
  public var CURSOR_AT_OR_AFTER: Int32

  @JavaStaticField(isFinal: true)
  public var CURSOR_AT_OR_BEFORE: Int32

  @JavaStaticField(isFinal: true)
  public var CURSOR_BEFORE: Int32

  @JavaStaticField(isFinal: true)
  public var DEV_KERN_TEXT_FLAG: Int32

  @JavaStaticField(isFinal: true)
  public var DITHER_FLAG: Int32

  @JavaStaticField(isFinal: true)
  public var EMBEDDED_BITMAP_TEXT_FLAG: Int32

  @JavaStaticField(isFinal: true)
  public var END_HYPHEN_EDIT_INSERT_ARMENIAN_HYPHEN: Int32

  @JavaStaticField(isFinal: true)
  public var END_HYPHEN_EDIT_INSERT_HYPHEN: Int32

  @JavaStaticField(isFinal: true)
  public var END_HYPHEN_EDIT_INSERT_MAQAF: Int32

  @JavaStaticField(isFinal: true)
  public var END_HYPHEN_EDIT_INSERT_UCAS_HYPHEN: Int32

  @JavaStaticField(isFinal: true)
  public var END_HYPHEN_EDIT_INSERT_ZWJ_AND_HYPHEN: Int32

  @JavaStaticField(isFinal: true)
  public var END_HYPHEN_EDIT_NO_EDIT: Int32

  @JavaStaticField(isFinal: true)
  public var END_HYPHEN_EDIT_REPLACE_WITH_HYPHEN: Int32

  @JavaStaticField(isFinal: true)
  public var FAKE_BOLD_TEXT_FLAG: Int32

  @JavaStaticField(isFinal: true)
  public var FILTER_BITMAP_FLAG: Int32

  @JavaStaticField(isFinal: true)
  public var HINTING_OFF: Int32

  @JavaStaticField(isFinal: true)
  public var HINTING_ON: Int32

  @JavaStaticField(isFinal: true)
  public var LINEAR_TEXT_FLAG: Int32

  @JavaStaticField(isFinal: true)
  public var START_HYPHEN_EDIT_INSERT_HYPHEN: Int32

  @JavaStaticField(isFinal: true)
  public var START_HYPHEN_EDIT_INSERT_ZWJ: Int32

  @JavaStaticField(isFinal: true)
  public var START_HYPHEN_EDIT_NO_EDIT: Int32

  @JavaStaticField(isFinal: true)
  public var STRIKE_THRU_TEXT_FLAG: Int32

  @JavaStaticField(isFinal: true)
  public var SUBPIXEL_TEXT_FLAG: Int32

  @JavaStaticField(isFinal: true)
  public var UNDERLINE_TEXT_FLAG: Int32
}
