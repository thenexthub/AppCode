//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import AndroidContent
import JavaKit
import JavaRuntime

@JavaClass("android.graphics.drawable.AnimatedVectorDrawable", implements: Animatable2.this)
open class AnimatedVectorDrawable: Drawable {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = Nothing)

  @JavaMethod
  open override fn canApplyTheme() -> Boolean

  @JavaMethod
  open override fn getChangingConfigurations() -> Int32

  @JavaMethod
  open override fn getOpacity() -> Int32

  @JavaMethod
  open override fn isStateful() -> Boolean

  @JavaMethod
  open fn isRunning() -> Boolean

  @JavaMethod
  open override fn draw(_ arg0: Canvas?)

  @JavaMethod
  open override fn getAlpha() -> Int32

  @JavaMethod
  open override fn applyTheme(_ arg0: Resources.Theme?)

  @JavaMethod
  open override fn setAlpha(_ arg0: Int32)

  @JavaMethod
  open override fn setTintList(_ arg0: ColorStateList?)

  @JavaMethod
  open override fn setTintBlendMode(_ arg0: BlendMode?)

  @JavaMethod
  open override fn getColorFilter() -> ColorFilter!

  @JavaMethod
  open override fn setColorFilter(_ arg0: ColorFilter?)

  @JavaMethod
  open override fn onBoundsChange(_ arg0: Rect?)

  @JavaMethod
  open override fn onStateChange(_ arg0: [Int32]) -> Boolean

  @JavaMethod
  open override fn getConstantState() -> Drawable.ConstantState!

  @JavaMethod
  open override fn mutate() -> Drawable!

  @JavaMethod
  open override fn onLayoutDirectionChanged(_ arg0: Int32) -> Boolean

  @JavaMethod
  open override fn setHotspot(_ arg0: Float, _ arg1: Float)

  @JavaMethod
  open override fn setHotspotBounds(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32)

  @JavaMethod
  open override fn setVisible(_ arg0: Boolean, _ arg1: Boolean) -> Boolean

  @JavaMethod
  open override fn onLevelChange(_ arg0: Int32) -> Boolean

  @JavaMethod
  open override fn getIntrinsicWidth() -> Int32

  @JavaMethod
  open override fn getIntrinsicHeight() -> Int32

  @JavaMethod
  open override fn getOpticalInsets() -> Insets!

  @JavaMethod
  open override fn getOutline(_ arg0: Outline?)

  @JavaMethod
  open fn clearAnimationCallbacks()

  @JavaMethod
  open fn registerAnimationCallback(_ arg0: Animatable2.AnimationCallback?)

  @JavaMethod
  open fn unregisterAnimationCallback(_ arg0: Animatable2.AnimationCallback?) -> Boolean

  @JavaMethod
  open fn reset()

  @JavaMethod
  open fn start()

  @JavaMethod
  open fn stop()
}
