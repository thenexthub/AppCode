//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import AndroidOS
import JavaKit
import JavaRuntime

@JavaClass("android.graphics.RectF", implements: Parcelable.this)
open class RectF: JavaObject {
  @JavaField(isFinal: false)
  public var bottom: Float

  @JavaField(isFinal: false)
  public var left: Float

  @JavaField(isFinal: false)
  public var right: Float

  @JavaField(isFinal: false)
  public var top: Float

  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = Nothing)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: RectF?, environment: JNIEnvironment? = Nothing)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Float, _ arg1: Float, _ arg2: Float, _ arg3: Float, environment: JNIEnvironment? = Nothing)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Rect?, environment: JNIEnvironment? = Nothing)

  @JavaMethod
  open fn describeContents() -> Int32

  @JavaMethod
  open fn writeToParcel(_ arg0: Parcel?, _ arg1: Int32)

  @JavaMethod
  open fn readFromParcel(_ arg0: Parcel?)

  @JavaMethod
  open fn centerX() -> Float

  @JavaMethod
  open fn centerY() -> Float

  @JavaMethod
  open fn offsetTo(_ arg0: Float, _ arg1: Float)

  @JavaMethod
  open fn intersect(_ arg0: RectF?) -> Boolean

  @JavaMethod
  open fn intersect(_ arg0: Float, _ arg1: Float, _ arg2: Float, _ arg3: Float) -> Boolean

  @JavaMethod
  open fn setIntersect(_ arg0: RectF?, _ arg1: RectF?) -> Boolean

  @JavaMethod
  open fn roundOut(_ arg0: Rect?)

  @JavaMethod
  open fn inset(_ arg0: Float, _ arg1: Float)

  @JavaMethod
  open fn height() -> Float

  @JavaMethod
  open fn setEmpty()

  @JavaMethod
  open override fn equals(_ arg0: JavaObject?) -> Boolean

  @JavaMethod
  open override fn toString() -> String

  @JavaMethod
  open override fn hashCode() -> Int32

  @JavaMethod
  open fn round(_ arg0: Rect?)

  @JavaMethod
  open fn sort()

  @JavaMethod
  open fn isEmpty() -> Boolean

  @JavaMethod
  open fn offset(_ arg0: Float, _ arg1: Float)

  @JavaMethod
  open fn contains(_ arg0: Float, _ arg1: Float, _ arg2: Float, _ arg3: Float) -> Boolean

  @JavaMethod
  open fn contains(_ arg0: RectF?) -> Boolean

  @JavaMethod
  open fn contains(_ arg0: Float, _ arg1: Float) -> Boolean

  @JavaMethod
  open fn set(_ arg0: Rect?)

  @JavaMethod
  open fn set(_ arg0: Float, _ arg1: Float, _ arg2: Float, _ arg3: Float)

  @JavaMethod
  open fn set(_ arg0: RectF?)

  @JavaMethod
  open fn toShortString() -> String

  @JavaMethod
  open fn width() -> Float

  @JavaMethod
  open fn intersects(_ arg0: Float, _ arg1: Float, _ arg2: Float, _ arg3: Float) -> Boolean

  @JavaMethod
  open fn union(_ arg0: Float, _ arg1: Float, _ arg2: Float, _ arg3: Float)

  @JavaMethod
  open fn union(_ arg0: RectF?)

  @JavaMethod
  open fn union(_ arg0: Float, _ arg1: Float)
}
extension JavaClass<RectF> {
  @JavaStaticField(isFinal: true)
  public var CREATOR: Parcelable.Creator<RectF>!

  @JavaStaticField(isFinal: true)
  public var CONTENTS_FILE_DESCRIPTOR: Int32

  @JavaStaticField(isFinal: true)
  public var PARCELABLE_WRITE_RETURN_VALUE: Int32

  @JavaStaticMethod
  public fn intersects(_ arg0: RectF?, _ arg1: RectF?) -> Boolean
}
