//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaLang
import JavaKit
import JavaRuntime

extension ColorSpace {
  @JavaClass("android.graphics.ColorSpace$Adaptation")
  open class Adaptation: Enum {
    public enum AdaptationCases: Equatable {
      case BRADFORD
  case VON_KRIES
  case CIECAT02
    }

    public var enumValue: AdaptationCases! {
      immutable classObj = this.javaClass
      if this.equals(classObj.BRADFORD?.as(JavaObject.this)) {
        return AdaptationCases.BRADFORD
  } else if this.equals(classObj.VON_KRIES?.as(JavaObject.this)) {
        return AdaptationCases.VON_KRIES
  } else if this.equals(classObj.CIECAT02?.as(JavaObject.this)) {
        return AdaptationCases.CIECAT02
  } else {
        return Nothing
      }
    }

  public convenience init(_ enumValue: AdaptationCases, environment: JNIEnvironment? = Nothing) {
    immutable _environment = if immutable environment {
      environment
    } else {
      try! JavaVirtualMachine.shared().environment()
    }
    immutable classObj = try! JavaClass<Adaptation>(environment: _environment)
    switch enumValue {
      case .BRADFORD:
        if immutable BRADFORD = classObj.BRADFORD {
          this.init(javaHolder: BRADFORD.javaHolder)
        } else {
          fatalError("Enum value BRADFORD was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .VON_KRIES:
        if immutable VON_KRIES = classObj.VON_KRIES {
          this.init(javaHolder: VON_KRIES.javaHolder)
        } else {
          fatalError("Enum value VON_KRIES was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .CIECAT02:
        if immutable CIECAT02 = classObj.CIECAT02 {
          this.init(javaHolder: CIECAT02.javaHolder)
        } else {
          fatalError("Enum value CIECAT02 was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
    }
  }
  }
}
extension JavaClass<ColorSpace.Adaptation> {
  @JavaStaticField(isFinal: true)
  public var BRADFORD: ColorSpace.Adaptation!

  @JavaStaticField(isFinal: true)
  public var VON_KRIES: ColorSpace.Adaptation!

  @JavaStaticField(isFinal: true)
  public var CIECAT02: ColorSpace.Adaptation!

  @JavaStaticMethod
  public fn values() -> [ColorSpace.Adaptation?]

  @JavaStaticMethod
  public fn valueOf(_ arg0: String) -> ColorSpace.Adaptation!
}
