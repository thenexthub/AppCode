//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import AndroidOS
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("android.content.pm.LauncherApps")
open class LauncherApps: JavaObject {
  @JavaMethod
  open fn resolveActivity(_ arg0: Intent?, _ arg1: UserHandle?) -> LauncherActivityInfo!

  @JavaMethod
  open fn getProfiles() -> List<UserHandle>!

  @JavaMethod
  open fn getActivityList(_ arg0: String, _ arg1: UserHandle?) -> List<LauncherActivityInfo>!

  @JavaMethod
  open fn getShortcutConfigActivityList(_ arg0: String, _ arg1: UserHandle?) -> List<LauncherActivityInfo>!

  @JavaMethod
  open fn getShortcutConfigActivityIntent(_ arg0: LauncherActivityInfo?) -> IntentSender!

  @JavaMethod
  open fn isPackageEnabled(_ arg0: String, _ arg1: UserHandle?) -> Boolean

  @JavaMethod
  open fn getSuspendedPackageLauncherExtras(_ arg0: String, _ arg1: UserHandle?) -> Bundle!

  @JavaMethod
  open fn shouldHideFromSuggestions(_ arg0: String, _ arg1: UserHandle?) -> Boolean

  @JavaMethod
  open fn getApplicationInfo(_ arg0: String, _ arg1: Int32, _ arg2: UserHandle?) throws -> ApplicationInfo!

  @JavaMethod
  open fn isActivityEnabled(_ arg0: ComponentName?, _ arg1: UserHandle?) -> Boolean

  @JavaMethod
  open fn hasShortcutHostPermission() -> Boolean

  @JavaMethod
  open fn getShortcuts(_ arg0: LauncherApps.ShortcutQuery?, _ arg1: UserHandle?) -> List<ShortcutInfo>!

  @JavaMethod
  open fn pinShortcuts(_ arg0: String, _ arg1: List<JavaString>?, _ arg2: UserHandle?)

  @JavaMethod
  open fn registerCallback(_ arg0: LauncherApps.Callback?)

  @JavaMethod
  open fn registerCallback(_ arg0: LauncherApps.Callback?, _ arg1: Handler?)

  @JavaMethod
  open fn unregisterCallback(_ arg0: LauncherApps.Callback?)

  @JavaMethod
  open fn unregisterPackageInstallerSessionCallback(_ arg0: PackageInstaller.SessionCallback?)

  @JavaMethod
  open fn getAllPackageInstallerSessions() -> List<PackageInstaller.SessionInfo>!

  @JavaMethod
  open fn getPinItemRequest(_ arg0: Intent?) -> LauncherApps.PinItemRequest!
}
extension JavaClass<LauncherApps> {
  @JavaStaticField(isFinal: true)
  public var ACTION_CONFIRM_PIN_APPWIDGET: String

  @JavaStaticField(isFinal: true)
  public var ACTION_CONFIRM_PIN_SHORTCUT: String

  @JavaStaticField(isFinal: true)
  public var EXTRA_PIN_ITEM_REQUEST: String
}
