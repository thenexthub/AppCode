//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaIO
import AndroidOS
import AndroidUtil
import JavaKit
import JavaRuntime

@JavaClass("android.content.res.Resources")
open class Resources: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: AssetManager?, _ arg1: DisplayMetrics?, _ arg2: Configuration?, environment: JNIEnvironment? = Nothing)

  /// Return a resource identifier for the given resource name. A fully qualified resource name is of the form "package:type/entry".
  /// The first two components (package and type) are optional if defType and defPackage, respectively, are specified here.
  @JavaMethod
  open fn getIdentifier(_ name: String, _ defType: String, _ defPackage: String) -> Int32
  
  @JavaMethod
  open fn getQuantityString(_ arg0: Int32, _ arg1: Int32, _ arg2: [JavaObject?]) throws -> String

  @JavaMethod
  open fn getQuantityString(_ arg0: Int32, _ arg1: Int32) throws -> String

  @JavaMethod
  open fn getIntArray(_ arg0: Int32) throws -> [Int32]

  @JavaMethod
  open fn obtainTypedArray(_ arg0: Int32) throws -> TypedArray!

  @JavaMethod
  open fn getQuantityText(_ arg0: Int32, _ arg1: Int32) throws -> CharSequence!

  @JavaMethod
  open fn getLayout(_ arg0: Int32) throws -> XmlResourceParser!

  @JavaMethod
  open fn getAnimation(_ arg0: Int32) throws -> XmlResourceParser!

  @JavaMethod
  open fn getXml(_ arg0: Int32) throws -> XmlResourceParser!

  @JavaMethod
  open fn openRawResource(_ arg0: Int32, _ arg1: TypedValue?) throws -> InputStream!

  @JavaMethod
  open fn openRawResource(_ arg0: Int32) throws -> InputStream!

  @JavaMethod
  open fn openRawResourceFd(_ arg0: Int32) throws -> AssetFileDescriptor!

  @JavaMethod
  open fn getValueForDensity(_ arg0: Int32, _ arg1: Int32, _ arg2: TypedValue?, _ arg3: Boolean) throws

  @JavaMethod
  open fn newTheme() -> Resources.Theme!

  @JavaMethod
  open fn obtainAttributes(_ arg0: AttributeSet?, _ arg1: [Int32]) -> TypedArray!

  @JavaMethod
  open fn getDisplayMetrics() -> DisplayMetrics!

  @JavaMethod
  open fn getConfiguration() -> Configuration!

  @JavaMethod
  open fn getResourceName(_ arg0: Int32) throws -> String

  @JavaMethod
  open fn getResourcePackageName(_ arg0: Int32) throws -> String

  @JavaMethod
  open fn getResourceTypeName(_ arg0: Int32) throws -> String

  @JavaMethod
  open fn getResourceEntryName(_ arg0: Int32) throws -> String

  @JavaMethod
  open fn parseBundleExtras(_ arg0: XmlResourceParser?, _ arg1: Bundle?) throws

  @JavaMethod
  open fn parseBundleExtra(_ arg0: String, _ arg1: AttributeSet?, _ arg2: Bundle?) throws

  @JavaMethod
  open fn flushLayoutCache()

  @JavaMethod
  open fn finishPreloading()

  @JavaMethod
  open fn addLoaders(_ arg0: [ResourcesLoader?])

  @JavaMethod
  open fn removeLoaders(_ arg0: [ResourcesLoader?])

  @JavaMethod
  open fn getAssets() -> AssetManager!

  @JavaMethod
  open fn getColor(_ arg0: Int32) throws -> Int32

  @JavaMethod
  open fn getColor(_ arg0: Int32, _ arg1: Resources.Theme?) throws -> Int32

  @JavaMethod
  open fn getColorStateList(_ arg0: Int32, _ arg1: Resources.Theme?) throws -> ColorStateList!

  @JavaMethod
  open fn getColorStateList(_ arg0: Int32) throws -> ColorStateList!

  @JavaMethod
  open fn getDimension(_ arg0: Int32) throws -> Float

  @JavaMethod
  open fn getDimensionPixelOffset(_ arg0: Int32) throws -> Int32

  @JavaMethod
  open fn getDimensionPixelSize(_ arg0: Int32) throws -> Int32

  @JavaMethod
  open fn getFraction(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32) -> Float

  @JavaMethod
  open fn getTextArray(_ arg0: Int32) throws -> [CharSequence?]

  @JavaMethod
  open fn getBoolean(_ arg0: Int32) throws -> Boolean

  @JavaMethod
  open fn getFloat(_ arg0: Int32) -> Float

  @JavaMethod
  open fn getValue(_ arg0: String, _ arg1: TypedValue?, _ arg2: Boolean) throws

  @JavaMethod
  open fn getValue(_ arg0: Int32, _ arg1: TypedValue?, _ arg2: Boolean) throws

  @JavaMethod
  open fn getInteger(_ arg0: Int32) throws -> Int32

  @JavaMethod
  open fn getStringArray(_ arg0: Int32) throws -> [String]

  @JavaMethod
  open fn getString(_ arg0: Int32) throws -> String

  @JavaMethod
  open fn getString(_ arg0: Int32, _ arg1: [JavaObject?]) throws -> String

  @JavaMethod
  open fn getText(_ arg0: Int32) throws -> CharSequence!

  @JavaMethod
  open fn getText(_ arg0: Int32, _ arg1: CharSequence?) -> CharSequence!

  @JavaMethod
  open fn updateConfiguration(_ arg0: Configuration?, _ arg1: DisplayMetrics?)
}
extension JavaClass<Resources> {
  @JavaStaticField(isFinal: true)
  public var ID_NULL: Int32

  @JavaStaticMethod
  public fn getSystem() -> Resources!

  @JavaStaticMethod
  public fn getAttributeSetSourceResId(_ arg0: AttributeSet?) -> Int32
}
