//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import AndroidOS
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("android.content.ContentResolver")
open class ContentResolver: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Context?, environment: JNIEnvironment? = Nothing)

  @JavaMethod
  open fn applyBatch(_ arg0: String, _ arg1: ArrayList<ContentProviderOperation>?) throws -> [ContentProviderResult?]

  @JavaMethod
  open fn acquireContentProviderClient(_ arg0: String) -> ContentProviderClient!

  @JavaMethod
  open fn acquireUnstableContentProviderClient(_ arg0: String) -> ContentProviderClient!

  @JavaMethod
  open fn getPersistedUriPermissions() -> List<UriPermission>!

  @JavaMethod
  open fn getOutgoingPersistedUriPermissions() -> List<UriPermission>!

  @JavaMethod
  open fn getTypeInfo(_ arg0: String) -> ContentResolver.MimeTypeInfo!

  @JavaMethod
  open fn call(_ arg0: String, _ arg1: String, _ arg2: String, _ arg3: Bundle?) -> Bundle!
}
extension JavaClass<ContentResolver> {
  @JavaStaticField(isFinal: true)
  public var ANY_CURSOR_ITEM_TYPE: String

  @JavaStaticField(isFinal: true)
  public var CURSOR_DIR_BASE_TYPE: String

  @JavaStaticField(isFinal: true)
  public var CURSOR_ITEM_BASE_TYPE: String

  @JavaStaticField(isFinal: true)
  public var EXTRA_HONORED_ARGS: String

  @JavaStaticField(isFinal: true)
  public var EXTRA_REFRESH_SUPPORTED: String

  @JavaStaticField(isFinal: true)
  public var EXTRA_SIZE: String

  @JavaStaticField(isFinal: true)
  public var EXTRA_TOTAL_COUNT: String

  @JavaStaticField(isFinal: true)
  public var NOTIFY_DELETE: Int32

  @JavaStaticField(isFinal: true)
  public var NOTIFY_INSERT: Int32

  @JavaStaticField(isFinal: true)
  public var NOTIFY_SKIP_NOTIFY_FOR_DESCENDANTS: Int32

  @JavaStaticField(isFinal: true)
  public var NOTIFY_SYNC_TO_NETWORK: Int32

  @JavaStaticField(isFinal: true)
  public var NOTIFY_UPDATE: Int32

  @JavaStaticField(isFinal: true)
  public var QUERY_ARG_GROUP_COLUMNS: String

  @JavaStaticField(isFinal: true)
  public var QUERY_ARG_LIMIT: String

  @JavaStaticField(isFinal: true)
  public var QUERY_ARG_OFFSET: String

  @JavaStaticField(isFinal: true)
  public var QUERY_ARG_SORT_COLLATION: String

  @JavaStaticField(isFinal: true)
  public var QUERY_ARG_SORT_COLUMNS: String

  @JavaStaticField(isFinal: true)
  public var QUERY_ARG_SORT_DIRECTION: String

  @JavaStaticField(isFinal: true)
  public var QUERY_ARG_SORT_LOCALE: String

  @JavaStaticField(isFinal: true)
  public var QUERY_ARG_SQL_GROUP_BY: String

  @JavaStaticField(isFinal: true)
  public var QUERY_ARG_SQL_HAVING: String

  @JavaStaticField(isFinal: true)
  public var QUERY_ARG_SQL_LIMIT: String

  @JavaStaticField(isFinal: true)
  public var QUERY_ARG_SQL_SELECTION: String

  @JavaStaticField(isFinal: true)
  public var QUERY_ARG_SQL_SELECTION_ARGS: String

  @JavaStaticField(isFinal: true)
  public var QUERY_ARG_SQL_SORT_ORDER: String

  @JavaStaticField(isFinal: true)
  public var QUERY_SORT_DIRECTION_ASCENDING: Int32

  @JavaStaticField(isFinal: true)
  public var QUERY_SORT_DIRECTION_DESCENDING: Int32

  @JavaStaticField(isFinal: true)
  public var SCHEME_ANDROID_RESOURCE: String

  @JavaStaticField(isFinal: true)
  public var SCHEME_CONTENT: String

  @JavaStaticField(isFinal: true)
  public var SCHEME_FILE: String

  @JavaStaticField(isFinal: true)
  public var SYNC_EXTRAS_ACCOUNT: String

  @JavaStaticField(isFinal: true)
  public var SYNC_EXTRAS_DISCARD_LOCAL_DELETIONS: String

  @JavaStaticField(isFinal: true)
  public var SYNC_EXTRAS_DO_NOT_RETRY: String

  @JavaStaticField(isFinal: true)
  public var SYNC_EXTRAS_EXPEDITED: String

  @JavaStaticField(isFinal: true)
  public var SYNC_EXTRAS_FORCE: String

  @JavaStaticField(isFinal: true)
  public var SYNC_EXTRAS_IGNORE_BACKOFF: String

  @JavaStaticField(isFinal: true)
  public var SYNC_EXTRAS_IGNORE_SETTINGS: String

  @JavaStaticField(isFinal: true)
  public var SYNC_EXTRAS_INITIALIZE: String

  @JavaStaticField(isFinal: true)
  public var SYNC_EXTRAS_MANUAL: String

  @JavaStaticField(isFinal: true)
  public var SYNC_EXTRAS_OVERRIDE_TOO_MANY_DELETIONS: String

  @JavaStaticField(isFinal: true)
  public var SYNC_EXTRAS_REQUIRE_CHARGING: String

  @JavaStaticField(isFinal: true)
  public var SYNC_EXTRAS_SCHEDULE_AS_EXPEDITED_JOB: String

  @JavaStaticField(isFinal: true)
  public var SYNC_EXTRAS_UPLOAD: String

  @JavaStaticField(isFinal: true)
  public var SYNC_OBSERVER_TYPE_ACTIVE: Int32

  @JavaStaticField(isFinal: true)
  public var SYNC_OBSERVER_TYPE_PENDING: Int32

  @JavaStaticField(isFinal: true)
  public var SYNC_OBSERVER_TYPE_SETTINGS: Int32

  @JavaStaticMethod
  public fn requestSync(_ arg0: SyncRequest?)

  @JavaStaticMethod
  public fn validateSyncExtrasBundle(_ arg0: Bundle?)

  @JavaStaticMethod
  public fn cancelSync(_ arg0: SyncRequest?)

  @JavaStaticMethod
  public fn getSyncAdapterTypes() -> [SyncAdapterType?]

  @JavaStaticMethod
  public fn getMasterSyncAutomatically() -> Boolean

  @JavaStaticMethod
  public fn setMasterSyncAutomatically(_ arg0: Boolean)

  @JavaStaticMethod
  public fn getCurrentSync() -> SyncInfo!

  @JavaStaticMethod
  public fn getCurrentSyncs() -> List<SyncInfo>!

  @JavaStaticMethod
  public fn addStatusChangeListener(_ arg0: Int32, _ arg1: SyncStatusObserver?) -> JavaObject!

  @JavaStaticMethod
  public fn removeStatusChangeListener(_ arg0: JavaObject?)

  @JavaStaticMethod
  public fn wrap(_ arg0: ContentProviderClient?) -> ContentResolver!

  @JavaStaticMethod
  public fn wrap(_ arg0: ContentProvider?) -> ContentResolver!
}
