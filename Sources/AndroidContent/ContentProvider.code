//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaIO
import AndroidOS
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("android.content.ContentProvider", implements: ComponentCallbacks2.this)
open class ContentProvider: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = Nothing)

  @JavaMethod
  open fn getReadPermission() -> String

  @JavaMethod
  open fn getWritePermission() -> String

  @JavaMethod
  open fn onConfigurationChanged(_ arg0: Configuration?)

  @JavaMethod
  open fn onLowMemory()

  @JavaMethod
  open fn applyBatch(_ arg0: String, _ arg1: ArrayList<ContentProviderOperation>?) throws -> [ContentProviderResult?]

  @JavaMethod
  open fn applyBatch(_ arg0: ArrayList<ContentProviderOperation>?) throws -> [ContentProviderResult?]

  @JavaMethod
  open fn onCreate() -> Boolean

  @JavaMethod
  open fn requireContext() -> Context!

  @JavaMethod
  open fn getCallingPackage() -> String

  @JavaMethod
  open fn getCallingAttributionSource() -> AttributionSource!

  @JavaMethod
  open fn getCallingAttributionTag() -> String

  @JavaMethod
  open fn getCallingPackageUnchecked() -> String

  @JavaMethod
  open fn onCallingPackageChanged()

  @JavaMethod
  open fn clearCallingIdentity() -> ContentProvider.CallingIdentity!

  @JavaMethod
  open fn restoreCallingIdentity(_ arg0: ContentProvider.CallingIdentity?)

  @JavaMethod
  open fn setReadPermission(_ arg0: String)

  @JavaMethod
  open fn setWritePermission(_ arg0: String)

  @JavaMethod
  open fn setPathPermissions(_ arg0: [PathPermission?])

  @JavaMethod
  open fn getPathPermissions() -> [PathPermission?]

  @JavaMethod
  open fn onTrimMemory(_ arg0: Int32)

  @JavaMethod
  open fn isTemporary() -> Boolean

  @JavaMethod
  open fn attachInfo(_ arg0: Context?, _ arg1: ProviderInfo?)

  @JavaMethod
  open fn shutdown()

  @JavaMethod
  open fn dump(_ arg0: FileDescriptor?, _ arg1: PrintWriter?, _ arg2: [String])

  @JavaMethod
  open fn call(_ arg0: String, _ arg1: String, _ arg2: Bundle?) -> Bundle!

  @JavaMethod
  open fn call(_ arg0: String, _ arg1: String, _ arg2: String, _ arg3: Bundle?) -> Bundle!

  @JavaMethod
  open fn getContext() -> Context!
}
extension JavaClass<ContentProvider> {
  @JavaStaticField(isFinal: true)
  public var TRIM_MEMORY_BACKGROUND: Int32

  @JavaStaticField(isFinal: true)
  public var TRIM_MEMORY_COMPLETE: Int32

  @JavaStaticField(isFinal: true)
  public var TRIM_MEMORY_MODERATE: Int32

  @JavaStaticField(isFinal: true)
  public var TRIM_MEMORY_RUNNING_CRITICAL: Int32

  @JavaStaticField(isFinal: true)
  public var TRIM_MEMORY_RUNNING_LOW: Int32

  @JavaStaticField(isFinal: true)
  public var TRIM_MEMORY_RUNNING_MODERATE: Int32

  @JavaStaticField(isFinal: true)
  public var TRIM_MEMORY_UI_HIDDEN: Int32
}
