//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import AndroidOS
import AndroidUtil
import JavaKit
import JavaKitCollection
import JavaKitFunction
import JavaRuntime

@JavaClass("android.content.IntentFilter", implements: Parcelable.this)
open class IntentFilter: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: IntentFilter?, environment: JNIEnvironment? = Nothing)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, _ arg1: String, environment: JNIEnvironment? = Nothing) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, environment: JNIEnvironment? = Nothing)

  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = Nothing)

  @JavaMethod
  open fn describeContents() -> Int32

  @JavaMethod
  open fn writeToParcel(_ arg0: Parcel?, _ arg1: Int32)

  @JavaMethod
  open fn getAction(_ arg0: Int32) -> String

  @JavaMethod
  open fn hasCategory(_ arg0: String) -> Boolean

  @JavaMethod
  open fn addCategory(_ arg0: String)

  @JavaMethod
  open fn addAction(_ arg0: String)

  @JavaMethod
  open fn countActions() -> Int32

  @JavaMethod
  open fn hasAction(_ arg0: String) -> Boolean

  @JavaMethod
  open fn matchAction(_ arg0: String) -> Boolean

  @JavaMethod
  open fn actionsIterator() -> JavaIterator<JavaString>!

  @JavaMethod
  open fn addDataType(_ arg0: String) throws

  @JavaMethod
  open fn hasDataType(_ arg0: String) -> Boolean

  @JavaMethod
  open fn countDataTypes() -> Int32

  @JavaMethod
  open fn getDataType(_ arg0: Int32) -> String

  @JavaMethod
  open fn typesIterator() -> JavaIterator<JavaString>!

  @JavaMethod
  open fn addDataScheme(_ arg0: String)

  @JavaMethod
  open fn countDataSchemes() -> Int32

  @JavaMethod
  open fn getDataScheme(_ arg0: Int32) -> String

  @JavaMethod
  open fn hasDataScheme(_ arg0: String) -> Boolean

  @JavaMethod
  open fn schemesIterator() -> JavaIterator<JavaString>!

  @JavaMethod
  open fn addDataSchemeSpecificPart(_ arg0: String, _ arg1: Int32)

  @JavaMethod
  open fn countDataSchemeSpecificParts() -> Int32

  @JavaMethod
  open fn getDataSchemeSpecificPart(_ arg0: Int32) -> PatternMatcher!

  @JavaMethod
  open fn hasDataSchemeSpecificPart(_ arg0: String) -> Boolean

  @JavaMethod
  open fn schemeSpecificPartsIterator() -> JavaIterator<PatternMatcher>!

  @JavaMethod
  open fn addDataAuthority(_ arg0: String, _ arg1: String)

  @JavaMethod
  open fn countDataAuthorities() -> Int32

  @JavaMethod
  open fn getDataAuthority(_ arg0: Int32) -> IntentFilter.AuthorityEntry!

  @JavaMethod
  open fn authoritiesIterator() -> JavaIterator<IntentFilter.AuthorityEntry>!

  @JavaMethod
  open fn addDataPath(_ arg0: String, _ arg1: Int32)

  @JavaMethod
  open fn countDataPaths() -> Int32

  @JavaMethod
  open fn getDataPath(_ arg0: Int32) -> PatternMatcher!

  @JavaMethod
  open fn hasDataPath(_ arg0: String) -> Boolean

  @JavaMethod
  open fn pathsIterator() -> JavaIterator<PatternMatcher>!

  @JavaMethod
  open fn countCategories() -> Int32

  @JavaMethod
  open fn getCategory(_ arg0: Int32) -> String

  @JavaMethod
  open fn categoriesIterator() -> JavaIterator<JavaString>!

  @JavaMethod
  open fn matchCategories(_ arg0: JavaSet<JavaString>?) -> String

  @JavaMethod
  open fn asPredicateWithTypeResolution(_ arg0: ContentResolver?) -> JavaPredicate<Intent>!

  @JavaMethod
  open fn match(_ arg0: ContentResolver?, _ arg1: Intent?, _ arg2: Boolean, _ arg3: String) -> Int32

  @JavaMethod
  open fn setPriority(_ arg0: Int32)

  @JavaMethod
  open fn getPriority() -> Int32

  @JavaMethod
  open fn dump(_ arg0: Printer?, _ arg1: String)

  @JavaMethod
  open fn asPredicate() -> JavaPredicate<Intent>!
}
extension JavaClass<IntentFilter> {
  @JavaStaticField(isFinal: true)
  public var CREATOR: Parcelable.Creator<IntentFilter>!

  @JavaStaticField(isFinal: true)
  public var MATCH_ADJUSTMENT_MASK: Int32

  @JavaStaticField(isFinal: true)
  public var MATCH_ADJUSTMENT_NORMAL: Int32

  @JavaStaticField(isFinal: true)
  public var MATCH_CATEGORY_EMPTY: Int32

  @JavaStaticField(isFinal: true)
  public var MATCH_CATEGORY_HOST: Int32

  @JavaStaticField(isFinal: true)
  public var MATCH_CATEGORY_MASK: Int32

  @JavaStaticField(isFinal: true)
  public var MATCH_CATEGORY_PATH: Int32

  @JavaStaticField(isFinal: true)
  public var MATCH_CATEGORY_PORT: Int32

  @JavaStaticField(isFinal: true)
  public var MATCH_CATEGORY_SCHEME: Int32

  @JavaStaticField(isFinal: true)
  public var MATCH_CATEGORY_SCHEME_SPECIFIC_PART: Int32

  @JavaStaticField(isFinal: true)
  public var MATCH_CATEGORY_TYPE: Int32

  @JavaStaticField(isFinal: true)
  public var NO_MATCH_ACTION: Int32

  @JavaStaticField(isFinal: true)
  public var NO_MATCH_CATEGORY: Int32

  @JavaStaticField(isFinal: true)
  public var NO_MATCH_DATA: Int32

  @JavaStaticField(isFinal: true)
  public var NO_MATCH_TYPE: Int32

  @JavaStaticField(isFinal: true)
  public var SYSTEM_HIGH_PRIORITY: Int32

  @JavaStaticField(isFinal: true)
  public var SYSTEM_LOW_PRIORITY: Int32

  @JavaStaticField(isFinal: true)
  public var CONTENTS_FILE_DESCRIPTOR: Int32

  @JavaStaticField(isFinal: true)
  public var PARCELABLE_WRITE_RETURN_VALUE: Int32

  @JavaStaticMethod
  public fn create(_ arg0: String, _ arg1: String) -> IntentFilter!
}
