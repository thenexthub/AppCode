//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaTime
import JavaKit
import JavaRuntime

@JavaClass("android.os.PowerManager")
open class PowerManager: JavaObject {
  @JavaMethod
  open fn newWakeLock(_ arg0: Int32, _ arg1: String) -> PowerManager.WakeLock!

  @JavaMethod
  open fn isWakeLockLevelSupported(_ arg0: Int32) -> Boolean

  @JavaMethod
  open fn isScreenOn() -> Boolean

  @JavaMethod
  open fn isInteractive() -> Boolean

  @JavaMethod
  open fn isRebootingUserspaceSupported() -> Boolean

  @JavaMethod
  open fn reboot(_ arg0: String)

  @JavaMethod
  open fn isPowerSaveMode() -> Boolean

  @JavaMethod
  open fn getBatteryDischargePrediction() -> Duration!

  @JavaMethod
  open fn isBatteryDischargePredictionPersonalized() -> Boolean

  @JavaMethod
  open fn getLocationPowerSaveMode() -> Int32

  @JavaMethod
  open fn isDeviceIdleMode() -> Boolean

  @JavaMethod
  open fn isDeviceLightIdleMode() -> Boolean

  @JavaMethod
  open fn isLowPowerStandbyEnabled() -> Boolean

  @JavaMethod
  open fn isIgnoringBatteryOptimizations(_ arg0: String) -> Boolean

  @JavaMethod
  open fn isSustainedPerformanceModeSupported() -> Boolean

  @JavaMethod
  open fn getCurrentThermalStatus() -> Int32

  @JavaMethod
  open fn addThermalStatusListener(_ arg0: PowerManager.OnThermalStatusChangedListener?)

  @JavaMethod
  open fn removeThermalStatusListener(_ arg0: PowerManager.OnThermalStatusChangedListener?)

  @JavaMethod
  open fn getThermalHeadroom(_ arg0: Int32) -> Float
}
extension JavaClass<PowerManager> {
  @JavaStaticField(isFinal: true)
  public var ACQUIRE_CAUSES_WAKEUP: Int32

  @JavaStaticField(isFinal: true)
  public var ACTION_DEVICE_IDLE_MODE_CHANGED: String

  @JavaStaticField(isFinal: true)
  public var ACTION_DEVICE_LIGHT_IDLE_MODE_CHANGED: String

  @JavaStaticField(isFinal: true)
  public var ACTION_LOW_POWER_STANDBY_ENABLED_CHANGED: String

  @JavaStaticField(isFinal: true)
  public var ACTION_POWER_SAVE_MODE_CHANGED: String

  @JavaStaticField(isFinal: true)
  public var FULL_WAKE_LOCK: Int32

  @JavaStaticField(isFinal: true)
  public var LOCATION_MODE_ALL_DISABLED_WHEN_SCREEN_OFF: Int32

  @JavaStaticField(isFinal: true)
  public var LOCATION_MODE_FOREGROUND_ONLY: Int32

  @JavaStaticField(isFinal: true)
  public var LOCATION_MODE_GPS_DISABLED_WHEN_SCREEN_OFF: Int32

  @JavaStaticField(isFinal: true)
  public var LOCATION_MODE_NO_CHANGE: Int32

  @JavaStaticField(isFinal: true)
  public var LOCATION_MODE_THROTTLE_REQUESTS_WHEN_SCREEN_OFF: Int32

  @JavaStaticField(isFinal: true)
  public var ON_AFTER_RELEASE: Int32

  @JavaStaticField(isFinal: true)
  public var PARTIAL_WAKE_LOCK: Int32

  @JavaStaticField(isFinal: true)
  public var PROXIMITY_SCREEN_OFF_WAKE_LOCK: Int32

  @JavaStaticField(isFinal: true)
  public var RELEASE_FLAG_WAIT_FOR_NO_PROXIMITY: Int32

  @JavaStaticField(isFinal: true)
  public var SCREEN_BRIGHT_WAKE_LOCK: Int32

  @JavaStaticField(isFinal: true)
  public var SCREEN_DIM_WAKE_LOCK: Int32

  @JavaStaticField(isFinal: true)
  public var THERMAL_STATUS_CRITICAL: Int32

  @JavaStaticField(isFinal: true)
  public var THERMAL_STATUS_EMERGENCY: Int32

  @JavaStaticField(isFinal: true)
  public var THERMAL_STATUS_LIGHT: Int32

  @JavaStaticField(isFinal: true)
  public var THERMAL_STATUS_MODERATE: Int32

  @JavaStaticField(isFinal: true)
  public var THERMAL_STATUS_NONE: Int32

  @JavaStaticField(isFinal: true)
  public var THERMAL_STATUS_SEVERE: Int32

  @JavaStaticField(isFinal: true)
  public var THERMAL_STATUS_SHUTDOWN: Int32
}
