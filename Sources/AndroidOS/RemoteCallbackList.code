//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaKit
import JavaRuntime

@JavaClass("android.os.RemoteCallbackList")
open class RemoteCallbackList<E: AnyJavaObject>: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = Nothing)

  @JavaMethod
  open fn kill()

  @JavaMethod
  open fn onCallbackDied(_ arg0: IInterface?)

  @JavaMethod
  open fn onCallbackDied(_ arg0: IInterface?, _ arg1: JavaObject?)

  @JavaMethod
  open fn beginBroadcast() -> Int32

  @JavaMethod
  open fn getBroadcastItem(_ arg0: Int32) -> IInterface!

  @JavaMethod
  open fn getBroadcastCookie(_ arg0: Int32) -> JavaObject!

  @JavaMethod
  open fn finishBroadcast()

  @JavaMethod
  open fn getRegisteredCallbackCount() -> Int32

  @JavaMethod
  open fn getRegisteredCallbackItem(_ arg0: Int32) -> IInterface!

  @JavaMethod
  open fn getRegisteredCallbackCookie(_ arg0: Int32) -> JavaObject!

  @JavaMethod
  open fn register(_ arg0: IInterface?) -> Boolean

  @JavaMethod
  open fn register(_ arg0: IInterface?, _ arg1: JavaObject?) -> Boolean

  @JavaMethod
  open fn unregister(_ arg0: IInterface?) -> Boolean
}
