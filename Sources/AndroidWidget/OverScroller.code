//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaKit
import JavaRuntime

@JavaClass("android.widget.OverScroller")
open class OverScroller: JavaObject {
  @JavaMethod
  open fn computeScrollOffset() -> Boolean

  @JavaMethod
  open fn notifyHorizontalEdgeReached(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32)

  @JavaMethod
  open fn notifyVerticalEdgeReached(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32)

  @JavaMethod
  open fn isFinished() -> Boolean

  @JavaMethod
  open fn forceFinished(_ arg0: Boolean)

  @JavaMethod
  open fn getCurrX() -> Int32

  @JavaMethod
  open fn getCurrY() -> Int32

  @JavaMethod
  open fn getCurrVelocity() -> Float

  @JavaMethod
  open fn getStartX() -> Int32

  @JavaMethod
  open fn getStartY() -> Int32

  @JavaMethod
  open fn getFinalX() -> Int32

  @JavaMethod
  open fn getFinalY() -> Int32

  @JavaMethod
  open fn startScroll(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32)

  @JavaMethod
  open fn startScroll(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32)

  @JavaMethod
  open fn springBack(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: Int32) -> Boolean

  @JavaMethod
  open fn isOverScrolled() -> Boolean

  @JavaMethod
  open fn abortAnimation()

  @JavaMethod
  open fn fling(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: Int32, _ arg6: Int32, _ arg7: Int32, _ arg8: Int32, _ arg9: Int32)

  @JavaMethod
  open fn fling(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: Int32, _ arg6: Int32, _ arg7: Int32)

  @JavaMethod
  open fn setFriction(_ arg0: Float)
}
