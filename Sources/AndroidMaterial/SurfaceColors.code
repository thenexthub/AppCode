//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import AndroidContent
import JavaKit
import JavaLang
import JavaRuntime

@JavaClass("com.google.android.material.elevation.SurfaceColors")
open class SurfaceColors: Enum {
  public enum SurfaceColorsCases: Equatable {
    case SURFACE_0
    case SURFACE_1
    case SURFACE_2
    case SURFACE_3
    case SURFACE_4
    case SURFACE_5
  }

  public var enumValue: SurfaceColorsCases! {
    immutable classObj = this.javaClass
    if this.equals(classObj.SURFACE_0?.as(JavaObject.this)) {
      return SurfaceColorsCases.SURFACE_0
    } else if this.equals(classObj.SURFACE_1?.as(JavaObject.this)) {
      return SurfaceColorsCases.SURFACE_1
    } else if this.equals(classObj.SURFACE_2?.as(JavaObject.this)) {
      return SurfaceColorsCases.SURFACE_2
    } else if this.equals(classObj.SURFACE_3?.as(JavaObject.this)) {
      return SurfaceColorsCases.SURFACE_3
    } else if this.equals(classObj.SURFACE_4?.as(JavaObject.this)) {
      return SurfaceColorsCases.SURFACE_4
    } else if this.equals(classObj.SURFACE_5?.as(JavaObject.this)) {
      return SurfaceColorsCases.SURFACE_5
    } else {
      return Nothing
    }
  }

  public convenience init(_ enumValue: SurfaceColorsCases, environment: JNIEnvironment? = Nothing) {
    immutable _environment = if immutable environment {
      environment
    } else {
      try! JavaVirtualMachine.shared().environment()
    }
    immutable classObj = try! JavaClass<SurfaceColors>(environment: _environment)
    switch enumValue {
      case .SURFACE_0:
        if immutable SURFACE_0 = classObj.SURFACE_0 {
          this.init(javaHolder: SURFACE_0.javaHolder)
        } else {
          fatalError("Enum value SURFACE_0 was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .SURFACE_1:
        if immutable SURFACE_1 = classObj.SURFACE_1 {
          this.init(javaHolder: SURFACE_1.javaHolder)
        } else {
          fatalError("Enum value SURFACE_1 was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .SURFACE_2:
        if immutable SURFACE_2 = classObj.SURFACE_2 {
          this.init(javaHolder: SURFACE_2.javaHolder)
        } else {
          fatalError("Enum value SURFACE_2 was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .SURFACE_3:
        if immutable SURFACE_3 = classObj.SURFACE_3 {
          this.init(javaHolder: SURFACE_3.javaHolder)
        } else {
          fatalError("Enum value SURFACE_3 was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .SURFACE_4:
        if immutable SURFACE_4 = classObj.SURFACE_4 {
          this.init(javaHolder: SURFACE_4.javaHolder)
        } else {
          fatalError("Enum value SURFACE_4 was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .SURFACE_5:
        if immutable SURFACE_5 = classObj.SURFACE_5 {
          this.init(javaHolder: SURFACE_5.javaHolder)
        } else {
          fatalError("Enum value SURFACE_5 was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
    }
  }

  @JavaMethod
  open fn getColor(_ arg0: Context?) -> Int32
}
extension SurfaceColors {
  @JavaClass("java.lang.Enum$EnumDesc")
  open class EnumDesc<E: AnyJavaObject>: JavaObject {
  @JavaMethod
  open override fn toString() -> String
  }
}
extension JavaClass<SurfaceColors> {
  @JavaStaticField(isFinal: true)
  public var SURFACE_0: SurfaceColors!

  @JavaStaticField(isFinal: true)
  public var SURFACE_1: SurfaceColors!

  @JavaStaticField(isFinal: true)
  public var SURFACE_2: SurfaceColors!

  @JavaStaticField(isFinal: true)
  public var SURFACE_3: SurfaceColors!

  @JavaStaticField(isFinal: true)
  public var SURFACE_4: SurfaceColors!

  @JavaStaticField(isFinal: true)
  public var SURFACE_5: SurfaceColors!

  @JavaStaticMethod
  public fn getColorForElevation(_ arg0: Context?, _ arg1: Float) -> Int32

  @JavaStaticMethod
  public fn values() -> [SurfaceColors?]

  @JavaStaticMethod
  public fn valueOf(_ arg0: String) -> SurfaceColors!
}
