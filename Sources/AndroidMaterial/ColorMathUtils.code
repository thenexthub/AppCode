//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaKit
import JavaRuntime

@JavaClass("com.google.android.material.color.utilities.MathUtils")
open class ColorMathUtils: JavaObject {

}
extension JavaClass<ColorMathUtils> {
  @JavaStaticMethod
  public fn lerp(_ arg0: Double, _ arg1: Double, _ arg2: Double) -> Double

  @JavaStaticMethod
  public fn sanitizeDegreesDouble(_ arg0: Double) -> Double

  @JavaStaticMethod
  public fn sanitizeDegreesInt(_ arg0: Int32) -> Int32

  @JavaStaticMethod
  public fn clampDouble(_ arg0: Double, _ arg1: Double, _ arg2: Double) -> Double

  @JavaStaticMethod
  public fn clampInt(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32) -> Int32

  @JavaStaticMethod
  public fn rotationDirection(_ arg0: Double, _ arg1: Double) -> Double

  @JavaStaticMethod
  public fn differenceDegrees(_ arg0: Double, _ arg1: Double) -> Double

  @JavaStaticMethod
  public fn matrixMultiply(_ arg0: [Double], _ arg1: [[Double]]) -> [Double]

  @JavaStaticMethod
  public fn signum(_ arg0: Double) -> Int32
}
