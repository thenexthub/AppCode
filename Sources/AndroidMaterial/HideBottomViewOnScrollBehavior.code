//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import AndroidContent
import AndroidUtil
import AndroidView
import JavaKit
import JavaRuntime

@JavaClass("com.google.android.material.behavior.HideBottomViewOnScrollBehavior")
open class HideBottomViewOnScrollBehavior: CircularRevealCoordinatorLayout.Behavior {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = Nothing)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Context?, _ arg1: AttributeSet?, environment: JNIEnvironment? = Nothing)

  @JavaMethod
  open fn setAdditionalHiddenOffsetY(_ arg0: View?, _ arg1: Int32)

  @JavaMethod
  open fn isScrolledUp() -> Boolean

  @JavaMethod
  open fn slideUp(_ arg0: View?)

  @JavaMethod
  open fn slideUp(_ arg0: View?, _ arg1: Boolean)

  @JavaMethod
  open fn isScrolledDown() -> Boolean

  @JavaMethod
  open fn slideDown(_ arg0: View?)

  @JavaMethod
  open fn slideDown(_ arg0: View?, _ arg1: Boolean)

  @JavaMethod
  open fn addOnScrollStateChangedListener(_ arg0: HideBottomViewOnScrollBehavior.OnScrollStateChangedListener?)

  @JavaMethod
  open fn removeOnScrollStateChangedListener(_ arg0: HideBottomViewOnScrollBehavior.OnScrollStateChangedListener?)

  @JavaMethod
  open fn clearOnScrollStateChangedListeners()
}
extension JavaClass {
  @JavaStaticField(isFinal: true)
  public var STATE_SCROLLED_DOWN: Int32

  @JavaStaticField(isFinal: true)
  public var STATE_SCROLLED_UP: Int32
}
