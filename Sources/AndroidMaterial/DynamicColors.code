//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import AndroidApp
import AndroidContent
import JavaKit
import JavaRuntime

@JavaClass("com.google.android.material.color.DynamicColors")
open class DynamicColors: JavaObject {

}
extension JavaClass<DynamicColors> {
  @JavaStaticMethod
  public fn applyToActivitiesIfAvailable(_ arg0: Application?, _ arg1: DynamicColorsOptions?)

  @JavaStaticMethod
  public fn applyToActivitiesIfAvailable(_ arg0: Application?, _ arg1: DynamicColors.Precondition?)

  @JavaStaticMethod
  public fn applyToActivitiesIfAvailable(_ arg0: Application?, _ arg1: Int32)

  @JavaStaticMethod
  public fn applyToActivitiesIfAvailable(_ arg0: Application?, _ arg1: Int32, _ arg2: DynamicColors.Precondition?)

  @JavaStaticMethod
  public fn applyToActivitiesIfAvailable(_ arg0: Application?)

  @JavaStaticMethod
  public fn applyIfAvailable(_ arg0: Activity?, _ arg1: Int32)

  @JavaStaticMethod
  public fn applyIfAvailable(_ arg0: Activity?)

  @JavaStaticMethod
  public fn applyIfAvailable(_ arg0: Activity?, _ arg1: DynamicColors.Precondition?)

  @JavaStaticMethod
  public fn applyToActivityIfAvailable(_ arg0: Activity?, _ arg1: DynamicColorsOptions?)

  @JavaStaticMethod
  public fn applyToActivityIfAvailable(_ arg0: Activity?)

  @JavaStaticMethod
  public fn wrapContextIfAvailable(_ arg0: Context?, _ arg1: DynamicColorsOptions?) -> Context!

  @JavaStaticMethod
  public fn wrapContextIfAvailable(_ arg0: Context?) -> Context!

  @JavaStaticMethod
  public fn wrapContextIfAvailable(_ arg0: Context?, _ arg1: Int32) -> Context!

  @JavaStaticMethod
  public fn isDynamicColorAvailable() -> Boolean
}
