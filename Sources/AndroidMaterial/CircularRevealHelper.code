//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import AndroidGraphics
import JavaKit
import JavaRuntime

@JavaClass("com.google.android.material.circularreveal.CircularRevealHelper")
open class CircularRevealHelper: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: CircularRevealHelper.Delegate?, environment: JNIEnvironment? = Nothing)

  @JavaMethod
  open fn buildCircularRevealCache()

  @JavaMethod
  open fn setRevealInfo(_ arg0: CircularRevealWidget.RevealInfo?)

  @JavaMethod
  open fn destroyCircularRevealCache()

  @JavaMethod
  open fn getRevealInfo() -> CircularRevealWidget.RevealInfo!

  @JavaMethod
  open fn setCircularRevealScrimColor(_ arg0: Int32)

  @JavaMethod
  open fn getCircularRevealScrimColor() -> Int32

  @JavaMethod
  open fn getCircularRevealOverlayDrawable() -> Drawable!

  @JavaMethod
  open fn setCircularRevealOverlayDrawable(_ arg0: Drawable?)

  @JavaMethod
  open fn draw(_ arg0: Canvas?)

  @JavaMethod
  open fn isOpaque() -> Boolean
}
extension JavaClass<CircularRevealHelper> {
  @JavaStaticField(isFinal: true)
  public var BITMAP_SHADER: Int32

  @JavaStaticField(isFinal: true)
  public var CLIP_PATH: Int32

  @JavaStaticField(isFinal: true)
  public var REVEAL_ANIMATOR: Int32

  @JavaStaticField(isFinal: true)
  public var STRATEGY: Int32
}
