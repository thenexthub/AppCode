//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import AndroidGraphics
import JavaKit
import JavaRuntime

@JavaClass("com.google.android.material.floatingactionbutton.BorderDrawable")
open class BorderDrawable: Drawable {
  @JavaMethod
  open fn setBorderWidth(_ arg0: Float)

  @JavaMethod
  open override fn getOutline(_ arg0: Outline?)

  @JavaMethod
  open override fn getPadding(_ arg0: Rect?) -> Boolean

  @JavaMethod
  open fn getBoundsAsRectF() -> RectF!

  @JavaMethod
  open override fn getOpacity() -> Int32

  @JavaMethod
  open override fn onBoundsChange(_ arg0: Rect?)

  @JavaMethod
  open override fn isStateful() -> Boolean

  @JavaMethod
  open override fn onStateChange(_ arg0: [Int32]) -> Boolean

  @JavaMethod
  open override fn getConstantState() -> Drawable.ConstantState!

  @JavaMethod
  open override fn setAlpha(_ arg0: Int32)

  @JavaMethod
  open override fn draw(_ arg0: Canvas?)

  @JavaMethod
  open override fn setColorFilter(_ arg0: ColorFilter?)
}
