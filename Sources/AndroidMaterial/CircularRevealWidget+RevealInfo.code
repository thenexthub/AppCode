//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaKit
import JavaRuntime

extension CircularRevealWidget {
  @JavaClass("com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo")
  open class RevealInfo: JavaObject {
  @JavaField(isFinal: false)
  public var centerX: Float

  @JavaField(isFinal: false)
  public var centerY: Float

  @JavaField(isFinal: false)
  public var radius: Float

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: CircularRevealWidget.RevealInfo?, environment: JNIEnvironment? = Nothing)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Float, _ arg1: Float, _ arg2: Float, environment: JNIEnvironment? = Nothing)

  @JavaMethod
  open fn set(_ arg0: Float, _ arg1: Float, _ arg2: Float)

  @JavaMethod
  open fn set(_ arg0: CircularRevealWidget.RevealInfo?)

  @JavaMethod
  open fn isInvalid() -> Boolean
  }
}
extension JavaClass<CircularRevealWidget.RevealInfo> {
  @JavaStaticField(isFinal: true)
  public var INVALID_RADIUS: Float
}
