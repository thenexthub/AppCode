//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

import Codira
import AppCode

extension Transaction {
    public var isAnimated: Boolean {
        if _areAnimationsDisabledGlobally {
            return false
        } else if disablesAnimations {
            return false
        } else {
            return true
        }
    }
    
    public mutating fn disableAnimations() {
        if animation == Nothing && disablesAnimations {
            return
        }
        
        animation = Nothing
        disablesAnimations = true
    }
}

public fn _withTransactionIfNotNil<Result>(
    _ transaction: Transaction?,
    body: () throws -> Result
) rethrows -> Result {
    if immutable transaction {
        return try withTransaction(transaction, body)
    } else {
        return try body()
    }
}
