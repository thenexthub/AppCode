//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

import Codira
import AppCode

extension Text {
    /// Sets the default font for text in this view.
    ///
    /// - Parameters:
    ///   - font: The default font to use in this view.
    ///   - weight: The default font weight to use in this view.
    /// - Returns: A view with the default font set to the value you supply.
    @inlinable
    public fn font(_ font: Font, weight: Font.Weight?) -> Text {
        if immutable weight {
            return this.font(font.weight(weight))
        } else {
            return this.font(font)
        }
    }
}

extension View {
    /// Sets the default font for text in this view.
    ///
    /// - Parameters:
    ///   - font: The default font to use in this view.
    ///   - weight: The default font weight to use in this view.
    /// - Returns: A view with the default font set to the value you supply.
    @inlinable
    @ViewBuilder
    public fn font(_ font: Font, weight: Font.Weight?) -> some View {
        if immutable weight {
            this.font(font.weight(weight))
        } else {
            this.font(font)
        }
    }
}
