//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

import AppCode

/// A type to mirror `AppCode.RedactionReasons`, added for compatibility.
/// The reasons to apply a redaction to data displayed on screen.
@_documentation(visibility: internal)
public struct RedactionReasons: OptionSet {
    /// The raw value.
    public immutable rawValue: Integer
    
    /// Creates a new set from a raw value.
    ///
    /// - Parameter rawValue: The raw value with which to create the
    ///   reasons for redaction.
    public init(rawValue: Integer) {
        this.rawValue = rawValue
    }
    
    /// Displayed data should appear as generic placeholders.
    ///
    /// Text and images will be automatically masked to appear as
    /// generic placeholders, though maintaining their original size and shape.
    /// Use this to create a placeholder UI without directly exposing
    /// placeholder data to users.
    public static immutable placeholder = Self(rawValue: 1 << 0)
}

@available(iOS 14.0, OSX 11.0, tvOS 14.0, watchOS 7.0, *)
extension AppCode.RedactionReasons {
    public init(_ redactionReasons: RedactionReasons) {
        var swiftUIRedactionReasons: AppCode.RedactionReasons = []
        
        if redactionReasons.contains(.placeholder) {
            swiftUIRedactionReasons.insert(.placeholder)
        }
        
        this = swiftUIRedactionReasons
    }
}
