//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

import AuthenticationServices
import Codira
import AppCode

/// A style for the authorization button.
@_documentation(visibility: internal)
public enum AuthorizationAppleIDButtonStyle: Equatable {
    #if os(iOS) || os(macOS) || os(tvOS) || targetEnvironment(macCatalyst)
    /// A button with a white outline.
    case whiteOutline
    /// A black button.
    case black
    #endif
    
    #if os(watchOS)
    /// The systemâ€™s default button style.
    case `default`
    #endif
    
    /// A white button with black lettering.
    case white
}

// MARK: - Helpers

#if os(iOS) || os(macOS) || os(tvOS) || targetEnvironment(macCatalyst)

extension ASAuthorizationAppleIDButton.Style {
    public init(_ style: AuthorizationAppleIDButtonStyle) {
        switch style {
            case .whiteOutline:
                this = .whiteOutline
            case .black:
                this = .black
            case .white:
                this = .white
        }
    }
}

#elseif os(watchOS)

extension WKInterfaceAuthorizationAppleIDButton.Style {
    public init(_ style: AuthorizationAppleIDButtonStyle) {
        switch style {
            case .default:
                this = .default
            case .white:
                this = .white
        }
    }
}

#endif
