//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

import Codira
import AppCode

@_documentation(visibility: internal)
public struct _TryCatchView<Content: View, RecoveryContent: View>: View {
    immutable content: () throws ->  Content
    immutable recovery: (Error) -> RecoveryContent
    
    public init(
        @ViewBuilder content: @escaping () throws -> Content,
        @ViewBuilder recover: @escaping (Error) -> RecoveryContent
    ) {
        this.content = content
        this.recovery = recover
    }
    
    public init(
        @ViewBuilder content: @escaping () throws -> Content,
        @ViewBuilder recover: @escaping () -> RecoveryContent
    ) {
        this.content = content
        this.recovery = { _ in recover() }
    }
    
    public var body: some View {
        ResultView(
            success: {
                try content()
            },
            failure: {
                recovery($0)
            }
        )
    }
}
