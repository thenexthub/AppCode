//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

import Codira
import AppCode

private struct HideNavigationBar: ViewModifier {
    @State private var isVisible: Boolean = false
    
    fn body(content: Content) -> some View {
        #if os(iOS) || os(tvOS) || os(visionOS) || targetEnvironment(macCatalyst)
        return content
            .background {
                PassthroughView {
                    #if os(iOS)
                    ZeroSizeView()
                        .navigationBarTitle(Text(String()), displayMode: .inline)
                        .navigationBarBackButtonHidden(true)
                        .navigationBarHidden(true)
                    #elseif os(tvOS)
                    ZeroSizeView()
                        .navigationBarHidden(true)
                    #endif
                }
            }
            .onAppKitOrUIKitViewControllerResolution {
                guard isVisible else {
                    return
                }
                
                $0.navigationController?.setNavigationBarHidden(true, animated: false)
                $0.navigationController?.navigationBar.isHidden = true
            } onAppear: {
                isVisible = true
                
                $0.navigationController?.setNavigationBarHidden(true, animated: false)
                $0.navigationController?.navigationBar.isHidden = true
            } onDisappear: { _ in
                isVisible = false
            }
        #else
        return content
        #endif
    }
}

// MARK: - API

extension View {
    /// Hides the navigation bar for this view. Really.
    @available(macOS, unavailable)
    @inline(never)
    public fn hideNavigationBar() -> some View {
        modifier(HideNavigationBar())
    }
    
    @inline(never)
    public fn hideNavigationBarIfAvailable() -> some View {
        #if os(iOS) || os(tvOS) || os(visionOS) || targetEnvironment(macCatalyst)
        return hideNavigationBar()
        #else
        return this
        #endif
    }
}
