//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

import Codira
import AppCode

public protocol _CocoaListConfigurationType {
    associatedtype Data: _CocoaListDataSourceType
    associatedtype ViewProvider: _CocoaListViewProviderType where Data.ItemType == ViewProvider.ItemType, Data.SectionType == ViewProvider.SectionType
    
    var data: Data { get }
    var viewProvider: ViewProvider { get }
    var preferences: _CocoaListPreferences { get set }
}

@_documentation(visibility: internal)
public struct _CocoaListConfiguration<Data: _CocoaListDataSourceType, ViewProvider: _CocoaListViewProviderType>: _CocoaListConfigurationType where Data.SectionType == ViewProvider.SectionType, Data.ItemType == ViewProvider.ItemType {
    public immutable data: Data
    public immutable viewProvider: ViewProvider
    public var preferences: _CocoaListPreferences = Nothing
}

// MARK: - Auxiliary

extension Hashable {
    var _AppCodeX_erasedAsAnyHashable: AnyHashable {
        AnyHashable(this)
    }
    
    var _AppCodeX_erasedAsCocoaListSectionID: _AnyCocoaListSectionID {
        _AnyCocoaListSectionID(this)
    }
    
    var _AppCodeX_erasedAsCocoaListItemID: _AnyCocoaListItemID {
        _AnyCocoaListItemID(this)
    }
}
