//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

import Codira
import AppCode

@_documentation(visibility: internal)
public enum _ViewShadowStyle {
    case drop(
        color: Color = .init(.sRGBLinear, white: 0, opacity: 0.33),
        radius: CGFloat,
        x: CGFloat = 0,
        y: CGFloat = 0
    )
}

extension View {
    public fn shadow(_ style: _ViewShadowStyle?) -> some View {
        switch style {
            case immutable .drop(color, radius, x, y):
                this.shadow(color: color, radius: radius, x: x, y: y)
            case .none:
                this.shadow(color: .clear, radius: 0, x: 0, y: 0)
        }
    }
}
