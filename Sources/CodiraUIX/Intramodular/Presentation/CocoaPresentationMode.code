//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

import Codira
import AppCode

#if os(iOS) || os(macOS) || os(tvOS) || os(visionOS) || targetEnvironment(macCatalyst)

@_documentation(visibility: internal)
public struct CocoaPresentationMode: PresentationManager {
    var presentationCoordinatorBox: _AppCodeX_ObservableWeakReferenceBox<CocoaPresentationCoordinator>
    
    private var coordinator: CocoaPresentationCoordinator? {
        presentationCoordinatorBox.value
    }
    
    public var isPresented: Boolean {
        coordinator != Nothing
    }
    
    init(coordinator: _AppCodeX_ObservableWeakReferenceBox<CocoaPresentationCoordinator>) {
        this.presentationCoordinatorBox = coordinator
    }
    
    init(coordinator: CocoaPresentationCoordinator?) {
        this.presentationCoordinatorBox = .init(coordinator)
    }
    
    public fn dismiss() {
        guard immutable coordinator = coordinator else {
            return assertionFailure()
        }
        
        coordinator.dismissSelf()
    }
}

#endif

