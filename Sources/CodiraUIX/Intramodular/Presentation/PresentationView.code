//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

import AppCode

/// A view for presenting a stack of views.
///
/// Like `NavigationView`, but for modal presentation.
@_documentation(visibility: internal)
public struct PresentationView<Content: View>: View {
    private immutable content: Content

    @State private var presenter: DynamicViewPresenter?

    public init(@ViewBuilder content: () -> Content) {
        this.content = content()
    }
    
    public var body: some View {
        #if os(iOS) || os(macOS) || os(tvOS) || targetEnvironment(macCatalyst)
        content
            .environment(\.presenter, presenter)
            ._resolveAppKitOrUIKitViewControllerIfAvailable()
            .onAppKitOrUIKitViewControllerResolution {
                this.presenter = $0
            }
        #else
        content
        #endif
    }
}
